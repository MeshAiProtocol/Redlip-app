{"KSampler": {"input": {"required": {"model": ["MODEL", {"tooltip": "The model used for denoising the input latent."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true, "tooltip": "The random seed used for creating the noise."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "The number of steps used in the denoising process."}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01, "tooltip": "The Classifier-Free Guidance scale balances creativity and adherence to the prompt. Higher values result in images more closely matching the prompt however too high values will negatively impact quality."}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "The algorithm used when sampling, this can affect the quality, speed, and style of the generated output."}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"tooltip": "The scheduler controls how noise is gradually removed to form the image."}], "positive": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to include in the image."}], "negative": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to exclude from the image."}], "latent_image": ["LATENT", {"tooltip": "The latent image to denoise."}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of denoising applied, lower values will maintain the structure of the initial image allowing for image to image sampling."}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler", "display_name": "KSampler", "description": "Uses the provided model, positive and negative conditioning to denoise the latent image.", "python_module": "nodes", "category": "sampling", "output_node": false, "output_tooltips": ["The denoised latent."]}, "CheckpointLoaderSimple": {"input": {"required": {"ckpt_name": [[], {"tooltip": "The name of the checkpoint (model) to load."}]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderSimple", "display_name": "Load Checkpoint", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "CLIPTextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "tooltip": "The text to be encoded."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}}, "input_order": {"required": ["text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncode", "display_name": "CLIP Text Encode (Prompt)", "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.", "python_module": "nodes", "category": "conditioning", "output_node": false, "output_tooltips": ["A conditioning containing the embedded text used to guide the diffusion model."]}, "CLIPSetLastLayer": {"input": {"required": {"clip": ["CLIP"], "stop_at_clip_layer": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}]}}, "input_order": {"required": ["clip", "stop_at_clip_layer"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPSetLastLayer", "display_name": "CLIP Set Last Layer", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "VAEDecode": {"input": {"required": {"samples": ["LATENT", {"tooltip": "The latent to be decoded."}], "vae": ["VAE", {"tooltip": "The VAE model used for decoding the latent."}]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecode", "display_name": "VAE Decode", "description": "Decodes latent images back into pixel space images.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The decoded image."]}, "VAEEncode": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["pixels", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncode", "display_name": "VAE Encode", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "VAEEncodeForInpaint": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "mask": ["MASK"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["pixels", "vae", "mask", "grow_mask_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeForInpaint", "display_name": "VAE Encode (for Inpainting)", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "VAELoader": {"input": {"required": {"vae_name": [["FLUX1/ae.safetensors", "ae.safetensors"]]}}, "input_order": {"required": ["vae_name"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAELoader", "display_name": "Load VAE", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The width of the latent images in pixels."}], "height": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The height of the latent images in pixels."}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentImage", "display_name": "Empty Latent Image", "description": "Create a new batch of empty latent images to be denoised via sampling.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The empty latent image batch."]}, "LatentUpscale": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "width", "height", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscale", "display_name": "Upscale Latent", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentUpscaleBy": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "scale_by": ["FLOAT", {"default": 1.5, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "upscale_method", "scale_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleBy", "display_name": "Upscale Latent By", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentFromBatch": {"input": {"required": {"samples": ["LATENT"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 63}], "length": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "batch_index", "length"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFromBatch", "display_name": "Latent From Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "RepeatLatentBatch": {"input": {"required": {"samples": ["LATENT"], "amount": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "amount"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RepeatLatentBatch", "display_name": "Repeat Latent Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "SaveImage": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImage", "display_name": "Save Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "PreviewImage": {"input": {"required": {"images": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewImage", "display_name": "Preview Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "LoadImage": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png"], {"image_upload": true}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImage", "display_name": "Load Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "LoadImageMask": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png"], {"image_upload": true}], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "LoadImageMask", "display_name": "Load Image (as Mask)", "description": "", "python_module": "nodes", "category": "mask", "output_node": false}, "LoadImageOutput": {"input": {"required": {"image": ["COMBO", {"image_upload": true, "image_folder": "output", "remote": {"route": "/internal/files/output", "refresh_button": true, "control_after_refresh": "first"}}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImageOutput", "display_name": "Load Image (from Outputs)", "description": "Load an image from the output folder. When the refresh button is clicked, the node will update the image list and automatically select the first image, allowing for easy iteration.", "python_module": "nodes", "category": "image", "output_node": false, "experimental": true}, "ImageScale": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "upscale_method", "width", "height", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScale", "display_name": "Upscale Image", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageScaleBy": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleBy", "display_name": "Upscale Image By", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageInvert": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageInvert", "display_name": "Invert Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImageBatch": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatch", "display_name": "Batch Images", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImagePadForOutpaint": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 40, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaint", "display_name": "Pad Image for Outpainting", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "EmptyImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["width", "height", "batch_size", "color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "EmptyImage", "display_name": "EmptyImage", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ConditioningAverage": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"], "conditioning_to_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_to", "conditioning_from", "conditioning_to_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningAverage", "display_name": "ConditioningAverage", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningCombine": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombine", "display_name": "Conditioning (Combine)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningConcat": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_to", "conditioning_from"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningConcat", "display_name": "Conditioning (Concat)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetArea": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetArea", "display_name": "Conditioning (Set Area)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaPercentage": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "height": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaPercentage", "display_name": "Conditioning (Set Area with Percentage)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaStrength": {"input": {"required": {"conditioning": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaStrength", "display_name": "ConditioningSetAreaStrength", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetMask": {"input": {"required": {"conditioning": ["CONDITIONING"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["conditioning", "mask", "strength", "set_cond_area"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetMask", "display_name": "Conditioning (Set Mask)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "KSamplerAdvanced": {"input": {"required": {"model": ["MODEL"], "add_noise": [["enable", "disable"]], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "return_with_leftover_noise": [["disable", "enable"]]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerAdvanced", "display_name": "KSampler (Advanced)", "description": "", "python_module": "nodes", "category": "sampling", "output_node": false}, "SetLatentNoiseMask": {"input": {"required": {"samples": ["LATENT"], "mask": ["MASK"]}}, "input_order": {"required": ["samples", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SetLatentNoiseMask", "display_name": "Set Latent Noise Mask", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "LatentComposite": {"input": {"required": {"samples_to": ["LATENT"], "samples_from": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feather": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples_to", "samples_from", "x", "y", "feather"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentComposite", "display_name": "Latent Composite", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentBlend": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "blend_factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBlend", "display_name": "Latent Blend", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "LatentRotate": {"input": {"required": {"samples": ["LATENT"], "rotation": [["none", "90 degrees", "180 degrees", "270 degrees"]]}}, "input_order": {"required": ["samples", "rotation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentRotate", "display_name": "Rotate Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentFlip": {"input": {"required": {"samples": ["LATENT"], "flip_method": [["x-axis: vertically", "y-axis: horizontally"]]}}, "input_order": {"required": ["samples", "flip_method"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFlip", "display_name": "Flip Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentCrop": {"input": {"required": {"samples": ["LATENT"], "width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples", "width", "height", "x", "y"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCrop", "display_name": "Crop Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "clip": ["CLIP", {"tooltip": "The CLIP model the LoRA will be applied to."}], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"tooltip": "The name of the LoRA."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the CLIP model. This value can be negative."}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "LoraLoader", "display_name": "Load LoRA", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "CLIPLoader": {"input": {"required": {"clip_name": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio", "mochi", "ltxv", "pixart", "cosmos", "lumina2", "wan", "hidream", "chroma", "ace", "omnigen2"]]}, "optional": {"device": [["default", "cpu"], {"advanced": true}]}}, "input_order": {"required": ["clip_name", "type"], "optional": ["device"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPLoader", "display_name": "Load CLIP", "description": "[Recipes]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 xxl/ clip-g / clip-l\nstable_audio: t5 base\nmochi: t5 xxl\ncosmos: old t5 xxl\nlumina2: gemma 2 2B\nwan: umt5 xxl\n hidream: llama-3.1 (Recommend) or t5\nomnigen2: qwen vl 2.5 3B", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "UNETLoader": {"input": {"required": {"unet_name": [[]], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2"]]}}, "input_order": {"required": ["unet_name", "weight_dtype"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNETLoader", "display_name": "Load Diffusion Model", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "DualCLIPLoader": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["sdxl", "sd3", "flux", "hunyuan_video", "hidream"]]}, "optional": {"device": [["default", "cpu"], {"advanced": true}]}}, "input_order": {"required": ["clip_name1", "clip_name2", "type"], "optional": ["device"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "DualCLIPLoader", "display_name": "DualCLIPLoader", "description": "[Recipes]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5\nhidream: at least one of t5 or llama, recommended t5 and llama", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "CLIPVisionEncode": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "image": ["IMAGE"], "crop": [["center", "none"]]}}, "input_order": {"required": ["clip_vision", "image", "crop"]}, "output": ["CLIP_VISION_OUTPUT"], "output_is_list": [false], "output_name": ["CLIP_VISION_OUTPUT"], "name": "CLIPVisionEncode", "display_name": "CLIP Vision Encode", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "StyleModelApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "style_model": ["STYLE_MODEL"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_type": [["multiply", "attn_bias"]]}}, "input_order": {"required": ["conditioning", "style_model", "clip_vision_output", "strength", "strength_type"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StyleModelApply", "display_name": "Apply Style Model", "description": "", "python_module": "nodes", "category": "conditioning/style_model", "output_node": false}, "unCLIPConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "clip_vision_output", "strength", "noise_augmentation"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "unCLIPConditioning", "display_name": "unCLIPConditioning", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ControlNetApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ControlNetApply", "display_name": "Apply ControlNet (OLD)", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "ControlNetApplyAdvanced": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"vae": ["VAE"]}}, "input_order": {"required": ["positive", "negative", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["vae"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplyAdvanced", "display_name": "Apply ControlNet", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false}, "ControlNetLoader": {"input": {"required": {"control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}}, "input_order": {"required": ["control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ControlNetLoader", "display_name": "Load ControlNet Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "DiffControlNetLoader": {"input": {"required": {"model": ["MODEL"], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}}, "input_order": {"required": ["model", "control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "DiffControlNetLoader", "display_name": "Load ControlNet Model (diff)", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "StyleModelLoader": {"input": {"required": {"style_model_name": [[]]}}, "input_order": {"required": ["style_model_name"]}, "output": ["STYLE_MODEL"], "output_is_list": [false], "output_name": ["STYLE_MODEL"], "name": "StyleModelLoader", "display_name": "Load Style Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "CLIPVisionLoader": {"input": {"required": {"clip_name": [[]]}}, "input_order": {"required": ["clip_name"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIPVisionLoader", "display_name": "Load CLIP Vision", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "VAEDecodeTiled": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 32}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to decode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}}, "input_order": {"required": ["samples", "vae", "tile_size", "overlap", "temporal_size", "temporal_overlap"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecodeTiled", "display_name": "VAE Decode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "VAEEncodeTiled": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to encode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}}, "input_order": {"required": ["pixels", "vae", "tile_size", "overlap", "temporal_size", "temporal_overlap"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeTiled", "display_name": "VAE Encode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "unCLIPCheckpointLoader": {"input": {"required": {"ckpt_name": [[]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "name": "unCLIPCheckpointLoader", "display_name": "unCLIPCheckpointLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENLoader": {"input": {"required": {"gligen_name": [[]]}}, "input_order": {"required": ["gligen_name"]}, "output": ["GLIGEN"], "output_is_list": [false], "output_name": ["GLIGEN"], "name": "GLIGENLoader", "display_name": "GLIGENLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENTextBoxApply": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "width": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["conditioning_to", "clip", "gligen_textbox_model", "text", "width", "height", "x", "y"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "GLIGENTextBoxApply", "display_name": "GLIGENTextBoxApply", "description": "", "python_module": "nodes", "category": "conditioning/gligen", "output_node": false}, "InpaintModelConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"], "noise_mask": ["BOOLEAN", {"default": true, "tooltip": "Add a noise mask to the latent so sampling will only happen within the mask. Might improve results or completely break things depending on the model."}]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels", "mask", "noise_mask"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InpaintModelConditioning", "display_name": "InpaintModelConditioning", "description": "", "python_module": "nodes", "category": "conditioning/inpaint", "output_node": false}, "CheckpointLoader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [[]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoader", "display_name": "Load Checkpoint With Config (DEPRECATED)", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false, "deprecated": true}, "DiffusersLoader": {"input": {"required": {"model_path": [[]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "DiffusersLoader", "display_name": "DiffusersLoader", "description": "", "python_module": "nodes", "category": "advanced/loaders/deprecated", "output_node": false}, "LoadLatent": {"input": {"required": {"latent": [[]]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LoadLatent", "display_name": "LoadLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "SaveLatent": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["samples", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLatent", "display_name": "SaveLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": true}, "ConditioningZeroOut": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningZeroOut", "display_name": "ConditioningZeroOut", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "ConditioningSetTimestepRange": {"input": {"required": {"conditioning": ["CONDITIONING"], "start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "start", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetTimestepRange", "display_name": "ConditioningSetTimestepRange", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "LoraLoaderModelOnly": {"input": {"required": {"model": ["MODEL"], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoraLoaderModelOnly", "display_name": "LoraLoaderModelOnly", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "LatentAdd": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentAdd", "display_name": "LatentAdd", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentSubtract": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentSubtract", "display_name": "LatentSubtract", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentMultiply": {"input": {"required": {"samples": ["LATENT"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "multiplier"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentMultiply", "display_name": "LatentMultiply", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentInterpolate": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "ratio"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentInterpolate", "display_name": "LatentInterpolate", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentBatch": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatch", "display_name": "LatentBatch", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/batch", "output_node": false}, "LatentBatchSeedBehavior": {"input": {"required": {"samples": ["LATENT"], "seed_behavior": [["random", "fixed"], {"default": "fixed"}]}}, "input_order": {"required": ["samples", "seed_behavior"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatchSeedBehavior", "display_name": "LatentBatchSeedBehavior", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentApplyOperation": {"input": {"required": {"samples": ["LATENT"], "operation": ["LATENT_OPERATION"]}}, "input_order": {"required": ["samples", "operation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentApplyOperation", "display_name": "LatentApplyOperation", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentApplyOperationCFG": {"input": {"required": {"model": ["MODEL"], "operation": ["LATENT_OPERATION"]}}, "input_order": {"required": ["model", "operation"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LatentApplyOperationCFG", "display_name": "LatentApplyOperationCFG", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentOperationTonemapReinhard": {"input": {"required": {"multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["multiplier"]}, "output": ["LATENT_OPERATION"], "output_is_list": [false], "output_name": ["LATENT_OPERATION"], "name": "LatentOperationTonemapReinhard", "display_name": "LatentOperationTonemapReinhard", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentOperationSharpen": {"input": {"required": {"sharpen_radius": ["INT", {"default": 9, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "alpha": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 5.0, "step": 0.01}]}}, "input_order": {"required": ["sharpen_radius", "sigma", "alpha"]}, "output": ["LATENT_OPERATION"], "output_is_list": [false], "output_name": ["LATENT_OPERATION"], "name": "LatentOperationSharpen", "display_name": "LatentOperationSharpen", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "HypernetworkLoader": {"input": {"required": {"model": ["MODEL"], "hypernetwork_name": [[]], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "hypernetwork_name", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HypernetworkLoader", "display_name": "HypernetworkLoader", "description": "", "python_module": "comfy_extras.nodes_hypernetwork", "category": "loaders", "output_node": false}, "UpscaleModelLoader": {"input": {"required": {"model_name": [["1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "UpscaleModelLoader", "display_name": "Load Upscale Model", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "loaders", "output_node": false}, "ImageUpscaleWithModel": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "image": ["IMAGE"]}}, "input_order": {"required": ["upscale_model", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModel", "display_name": "Upscale Image (using Model)", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "image/upscaling", "output_node": false}, "ImageBlend": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "blend_mode": [["normal", "multiply", "screen", "overlay", "soft_light", "difference"]]}}, "input_order": {"required": ["image1", "image2", "blend_factor", "blend_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlend", "display_name": "Image Blend", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageBlur": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["image", "blur_radius", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlur", "display_name": "Image Blur", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageQuantize": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 256, "min": 1, "max": 256, "step": 1}], "dither": [["none", "floyd-steinberg", "bayer-2", "bayer-4", "bayer-8", "bayer-16"]]}}, "input_order": {"required": ["image", "colors", "dither"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageQuantize", "display_name": "Image Quantize", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageSharpen": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.01}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSharpen", "display_name": "Image Sharpen", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageScaleToTotalPixels": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "megapixels": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 16.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "megapixels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleToTotalPixels", "display_name": "Scale Image to Total Pixels", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/upscaling", "output_node": false}, "LatentCompositeMasked": {"input": {"required": {"destination": ["LATENT"], "source": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCompositeMasked", "display_name": "LatentCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "latent", "output_node": false}, "ImageCompositeMasked": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeMasked", "display_name": "ImageCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "image", "output_node": false}, "MaskToImage": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MaskToImage", "display_name": "Convert Mask to Image", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue", "alpha"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageToMask", "display_name": "Convert Image to Mask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageColorToMask": {"input": {"required": {"image": ["IMAGE"], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["image", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageColorToMask", "display_name": "ImageColorToMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "SolidMask": {"input": {"required": {"value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["value", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SolidMask", "display_name": "SolidMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "InvertMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "InvertMask", "display_name": "InvertMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "CropMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "x", "y", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CropMask", "display_name": "CropMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "MaskComposite": {"input": {"required": {"destination": ["MASK"], "source": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "operation": [["multiply", "add", "subtract", "and", "or", "xor"]]}}, "input_order": {"required": ["destination", "source", "x", "y", "operation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskComposite", "display_name": "MaskComposite", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "FeatherMask": {"input": {"required": {"mask": ["MASK"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "left", "top", "right", "bottom"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FeatherMask", "display_name": "FeatherMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "GrowMask": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "tapered_corners": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask", "expand", "tapered_corners"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "GrowMask", "display_name": "GrowMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ThresholdMask": {"input": {"required": {"mask": ["MASK"], "value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "value"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ThresholdMask", "display_name": "ThresholdMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "MaskPreview": {"input": {"required": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "MaskPreview", "display_name": "MaskPreview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": true}, "PorterDuffImageComposite": {"input": {"required": {"source": ["IMAGE"], "source_alpha": ["MASK"], "destination": ["IMAGE"], "destination_alpha": ["MASK"], "mode": [["ADD", "CLEAR", "DARKEN", "DST", "DST_ATOP", "DST_IN", "DST_OUT", "DST_OVER", "LIGHTEN", "MULTIPLY", "OVERLAY", "SCREEN", "SRC", "SRC_ATOP", "SRC_IN", "SRC_OUT", "SRC_OVER", "XOR"], {"default": "DST"}]}}, "input_order": {"required": ["source", "source_alpha", "destination", "destination_alpha", "mode"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "PorterDuffImageComposite", "display_name": "Porter-Duff Image Composite", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "SplitImageWithAlpha": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SplitImageWithAlpha", "display_name": "Split Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "JoinImageWithAlpha": {"input": {"required": {"image": ["IMAGE"], "alpha": ["MASK"]}}, "input_order": {"required": ["image", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JoinImageWithAlpha", "display_name": "Join Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "RebatchLatents": {"input": {"required": {"latents": ["LATENT"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["latents", "batch_size"]}, "output": ["LATENT"], "output_is_list": [true], "output_name": ["LATENT"], "name": "RebatchLatents", "display_name": "Rebatch Latents", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "latent/batch", "output_node": false}, "RebatchImages": {"input": {"required": {"images": ["IMAGE"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["images", "batch_size"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "RebatchImages", "display_name": "Rebatch Images", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "image/batch", "output_node": false}, "ModelMergeSimple": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSimple", "display_name": "ModelMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeBlocks": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "input": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "input", "middle", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeBlocks", "display_name": "ModelMergeBlocks", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeSubtract": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSubtract", "display_name": "ModelMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeAdd": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["model1", "model2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeAdd", "display_name": "ModelMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CheckpointSave", "display_name": "Save Checkpoint", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "CLIPMergeSimple": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "ratio"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSimple", "display_name": "CLIPMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeSubtract": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "multiplier"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSubtract", "display_name": "CLIPMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeAdd": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["clip1", "clip2"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeAdd", "display_name": "CLIPMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPSave": {"input": {"required": {"clip": ["CLIP"], "filename_prefix": ["STRING", {"default": "clip/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["clip", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CLIPSave", "display_name": "CLIPSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "VAESave": {"input": {"required": {"vae": ["VAE"], "filename_prefix": ["STRING", {"default": "vae/ComfyUI_vae"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "VAESave", "display_name": "VAESave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "ModelSave": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSave", "display_name": "ModelSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "TomePatchModel": {"input": {"required": {"model": ["MODEL"], "ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TomePatchModel", "display_name": "TomePatchModel", "description": "", "python_module": "comfy_extras.nodes_tomesd", "category": "model_patches/unet", "output_node": false}, "CLIPTextEncodeSDXLRefiner": {"input": {"required": {"ascore": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["ascore", "width", "height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXLRefiner", "display_name": "CLIPTextEncodeSDXLRefiner", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeSDXL": {"input": {"required": {"clip": ["CLIP"], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "text_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "text_l"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL", "display_name": "CLIPTextEncodeSDXL", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "Canny": {"input": {"required": {"image": ["IMAGE"], "low_threshold": ["FLOAT", {"default": 0.4, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"default": 0.8, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["image", "low_threshold", "high_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Canny", "display_name": "Canny", "description": "", "python_module": "comfy_extras.nodes_canny", "category": "image/preprocessors", "output_node": false}, "FreeU": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.1, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.2, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU", "display_name": "FreeU", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "FreeU_V2": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.3, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.4, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU_V2", "display_name": "FreeU_V2", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "SamplerCustom": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "cfg", "positive", "negative", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustom", "display_name": "SamplerCustom", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "BasicScheduler": {"input": {"required": {"model": ["MODEL"], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "scheduler", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BasicScheduler", "display_name": "BasicScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KarrasScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "KarrasScheduler", "display_name": "KarrasScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "ExponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "ExponentialScheduler", "display_name": "ExponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "PolyexponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "PolyexponentialScheduler", "display_name": "PolyexponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "LaplaceScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "mu": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": false}], "beta": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "mu", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "LaplaceScheduler", "display_name": "LaplaceScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "VPScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "beta_d": ["FLOAT", {"default": 19.9, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "beta_min": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "eps_s": ["FLOAT", {"default": 0.001, "min": 0.0, "max": 1.0, "step": 0.0001, "round": false}]}}, "input_order": {"required": ["steps", "beta_d", "beta_min", "eps_s"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "VPScheduler", "display_name": "VPScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "BetaSamplingScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "alpha": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}], "beta": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["model", "steps", "alpha", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BetaSamplingScheduler", "display_name": "BetaSamplingScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SDTurboScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 1, "min": 1, "max": 10}], "denoise": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "SDTurboScheduler", "display_name": "SDTurboScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KSamplerSelect": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]]}}, "input_order": {"required": ["sampler_name"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "KSamplerSelect", "display_name": "KSamplerSelect", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestral", "display_name": "SamplerEulerAncestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestralCFGPP": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestralCFGPP", "display_name": "SamplerEulerAncestralCFG++", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerLMS": {"input": {"required": {"order": ["INT", {"default": 4, "min": 1, "max": 100}]}}, "input_order": {"required": ["order"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLMS", "display_name": "SamplerLMS", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_3M_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_3M_SDE", "display_name": "SamplerDPMPP_3M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2M_SDE": {"input": {"required": {"solver_type": [["midpoint", "heun"]], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["solver_type", "eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2M_SDE", "display_name": "SamplerDPMPP_2M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "r": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "r", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_SDE", "display_name": "SamplerDPMPP_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2S_Ancestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2S_Ancestral", "display_name": "SamplerDPMPP_2S_Ancestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMAdaptative": {"input": {"required": {"order": ["INT", {"default": 3, "min": 2, "max": 3}], "rtol": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "atol": ["FLOAT", {"default": 0.0078, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "h_init": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "pcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "icoeff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "dcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "accept_safety": ["FLOAT", {"default": 0.81, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "eta": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["order", "rtol", "atol", "h_init", "pcoeff", "icoeff", "dcoeff", "accept_safety", "eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMAdaptative", "display_name": "SamplerDPMAdaptative", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerER_SDE": {"input": {"required": {"solver_type": ["COMBO", {"options": ["ER-SDE", "Reverse-time SDE", "ODE"]}], "max_stage": ["INT", {"default": 3, "min": 1, "max": 3}], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Stochastic strength of reverse-time SDE.\nWhen eta=0, it reduces to deterministic ODE. This setting doesn't apply to ER-SDE solver type."}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["solver_type", "max_stage", "eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerER_SDE", "display_name": "SamplerER_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerSASolver": {"input": {"required": {"model": ["MODEL", {}], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "sde_start_percent": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.001}], "sde_end_percent": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.001}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "predictor_order": ["INT", {"default": 3, "min": 1, "max": 6}], "corrector_order": ["INT", {"default": 4, "min": 0, "max": 6}], "use_pece": ["BOOLEAN", {}], "simple_order_2": ["BOOLEAN", {}]}}, "input_order": {"required": ["model", "eta", "sde_start_percent", "sde_end_percent", "s_noise", "predictor_order", "corrector_order", "use_pece", "simple_order_2"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerSASolver", "display_name": "SamplerSASolver", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SplitSigmas": {"input": {"required": {"sigmas": ["SIGMAS"], "step": ["INT", {"default": 0, "min": 0, "max": 10000}]}}, "input_order": {"required": ["sigmas", "step"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmas", "display_name": "SplitSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SplitSigmasDenoise": {"input": {"required": {"sigmas": ["SIGMAS"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "denoise"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmasDenoise", "display_name": "SplitSigmasDenoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "FlipSigmas": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FlipSigmas", "display_name": "FlipSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SetFirstSigma": {"input": {"required": {"sigmas": ["SIGMAS"], "sigma": ["FLOAT", {"default": 136.0, "min": 0.0, "max": 20000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["sigmas", "sigma"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "SetFirstSigma", "display_name": "SetFirstSigma", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "ExtendIntermediateSigmas": {"input": {"required": {"sigmas": ["SIGMAS"], "steps": ["INT", {"default": 2, "min": 1, "max": 100}], "start_at_sigma": ["FLOAT", {"default": -1.0, "min": -1.0, "max": 20000.0, "step": 0.01, "round": false}], "end_at_sigma": ["FLOAT", {"default": 12.0, "min": 0.0, "max": 20000.0, "step": 0.01, "round": false}], "spacing": [["linear", "cosine", "sine"]]}}, "input_order": {"required": ["sigmas", "steps", "start_at_sigma", "end_at_sigma", "spacing"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "ExtendIntermediateSigmas", "display_name": "ExtendIntermediateSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SamplingPercentToSigma": {"input": {"required": {"model": ["MODEL", {}], "sampling_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.0001}], "return_actual_sigma": ["BOOLEAN", {"default": false, "tooltip": "Return the actual sigma value instead of the value used for interval checks.\nThis only affects results at 0.0 and 1.0."}]}}, "input_order": {"required": ["model", "sampling_percent", "return_actual_sigma"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["sigma_value"], "name": "SamplingPercentToSigma", "display_name": "SamplingPercentToSigma", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "CFGGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "cfg"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "CFGGuider", "display_name": "CFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "DualCFGGuider": {"input": {"required": {"model": ["MODEL"], "cond1": ["CONDITIONING"], "cond2": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg_conds": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "cfg_cond2_negative": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "style": [["regular", "nested"]]}}, "input_order": {"required": ["model", "cond1", "cond2", "negative", "cfg_conds", "cfg_cond2_negative", "style"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "DualCFGGuider", "display_name": "DualCFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "BasicGuider": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["model", "conditioning"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "BasicGuider", "display_name": "BasicGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "RandomNoise": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}]}}, "input_order": {"required": ["noise_seed"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RandomNoise", "display_name": "RandomNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "DisableNoise": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "DisableNoise", "display_name": "DisableNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "AddNoise": {"input": {"required": {"model": ["MODEL"], "noise": ["NOISE"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "noise", "sigmas", "latent_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AddNoise", "display_name": "AddNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "_for_testing/custom_sampling/noise", "output_node": false}, "SamplerCustomAdvanced": {"input": {"required": {"noise": ["NOISE"], "guider": ["GUIDER"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["noise", "guider", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustomAdvanced", "display_name": "SamplerCustomAdvanced", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "HyperTile": {"input": {"required": {"model": ["MODEL"], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "tile_size", "swap_size", "max_depth", "scale_depth"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HyperTile", "display_name": "HyperTile", "description": "", "python_module": "comfy_extras.nodes_hypertile", "category": "model_patches/unet", "output_node": false}, "ModelSamplingDiscrete": {"input": {"required": {"model": ["MODEL"], "sampling": [["eps", "v_prediction", "lcm", "x0", "img_to_img"]], "zsnr": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "sampling", "zsnr"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingDiscrete", "display_name": "ModelSamplingDiscrete", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousEDM": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction", "edm", "edm_playground_v2.5", "eps", "cosmos_rflow"]], "sigma_max": ["FLOAT", {"default": 120.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.002, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousEDM", "display_name": "ModelSamplingContinuousEDM", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousV": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction"]], "sigma_max": ["FLOAT", {"default": 500.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.03, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousV", "display_name": "ModelSamplingContinuousV", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingStableCascade": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingStableCascade", "display_name": "ModelSamplingStableCascade", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingSD3": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingSD3", "display_name": "ModelSamplingSD3", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingAuraFlow": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 1.73, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingAuraFlow", "display_name": "ModelSamplingAuraFlow", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingFlux": {"input": {"required": {"model": ["MODEL"], "max_shift": ["FLOAT", {"default": 1.15, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01}], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}]}}, "input_order": {"required": ["model", "max_shift", "base_shift", "width", "height"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingFlux", "display_name": "ModelSamplingFlux", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "RescaleCFG": {"input": {"required": {"model": ["MODEL"], "multiplier": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RescaleCFG", "display_name": "RescaleCFG", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelComputeDtype": {"input": {"required": {"model": ["MODEL"], "dtype": [["default", "fp32", "fp16", "bf16"]]}}, "input_order": {"required": ["model", "dtype"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelComputeDtype", "display_name": "ModelComputeDtype", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/debug/model", "output_node": false}, "PatchModelAddDownscale": {"input": {"required": {"model": ["MODEL"], "block_number": ["INT", {"default": 3, "min": 1, "max": 32, "step": 1}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 9.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001}], "downscale_after_skip": ["BOOLEAN", {"default": true}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]]}}, "input_order": {"required": ["model", "block_number", "downscale_factor", "start_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PatchModelAddDownscale", "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)", "description": "", "python_module": "comfy_extras.nodes_model_downscale", "category": "model_patches/unet", "output_node": false}, "ImageCrop": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "x", "y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCrop", "display_name": "Image Crop", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "RepeatImageBatch": {"input": {"required": {"image": ["IMAGE"], "amount": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RepeatImageBatch", "display_name": "RepeatImageBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "ImageFromBatch": {"input": {"required": {"image": ["IMAGE"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 4095}], "length": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "batch_index", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch", "display_name": "ImageFromBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "ImageAddNoise": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true, "tooltip": "The random seed used for creating the noise."}], "strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "seed", "strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageAddNoise", "display_name": "ImageAddNoise", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image", "output_node": false}, "SaveAnimatedWEBP": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "lossless": ["BOOLEAN", {"default": true}], "quality": ["INT", {"default": 80, "min": 0, "max": 100}], "method": [["default", "fastest", "slowest"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "lossless", "quality", "method"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedWEBP", "display_name": "SaveAnimatedWEBP", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "SaveAnimatedPNG": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "compress_level": ["INT", {"default": 4, "min": 0, "max": 9}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "compress_level"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedPNG", "display_name": "SaveAnimatedPNG", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "SaveSVGNode": {"input": {"required": {"svg": ["SVG"], "filename_prefix": ["STRING", {"default": "svg/ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["svg", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveSVGNode", "display_name": "SaveSVGNode", "description": "Save SVG files on disk.", "python_module": "comfy_extras.nodes_images", "category": "image/save", "output_node": true}, "ImageStitch": {"input": {"required": {"image1": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": true}], "spacing_width": ["INT", {"default": 0, "min": 0, "max": 1024, "step": 2}], "spacing_color": [["white", "black", "red", "green", "blue"], {"default": "white"}]}, "optional": {"image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "direction", "match_image_size", "spacing_width", "spacing_color"], "optional": ["image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageStitch", "display_name": "Image Stitch", "description": "\nStitches image2 to image1 in the specified direction.\nIf image2 is not provided, returns image1 unchanged.\nOptional spacing can be added between images.\n", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "ResizeAndPadImage": {"input": {"required": {"image": ["IMAGE"], "target_width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "target_height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "padding_color": [["white", "black"]], "interpolation": [["area", "bicubic", "nearest-exact", "bilinear", "lanczos"]]}}, "input_order": {"required": ["image", "target_width", "target_height", "padding_color", "interpolation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ResizeAndPadImage", "display_name": "ResizeAndPadImage", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "GetImageSize": {"input": {"required": {"image": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image"], "hidden": ["unique_id"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["width", "height", "batch_size"], "name": "GetImageSize", "display_name": "Get Image Size", "description": "Returns width and height of the image, and passes it through unchanged.", "python_module": "comfy_extras.nodes_images", "category": "image", "output_node": false}, "ImageRotate": {"input": {"required": {"image": ["IMAGE"], "rotation": [["none", "90 degrees", "180 degrees", "270 degrees"]]}}, "input_order": {"required": ["image", "rotation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRotate", "display_name": "ImageRotate", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "ImageFlip": {"input": {"required": {"image": ["IMAGE"], "flip_method": [["x-axis: vertically", "y-axis: horizontally"]]}}, "input_order": {"required": ["image", "flip_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFlip", "display_name": "ImageFlip", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "ImageOnlyCheckpointLoader": {"input": {"required": {"ckpt_name": [[]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP_VISION", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP_VISION", "VAE"], "name": "ImageOnlyCheckpointLoader", "display_name": "Image Only Checkpoint Loader (img2vid model)", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "loaders/video_models", "output_node": false}, "SVD_img2vid_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 14, "min": 1, "max": 4096}], "motion_bucket_id": ["INT", {"default": 127, "min": 1, "max": 1023}], "fps": ["INT", {"default": 6, "min": 1, "max": 1024}], "augmentation_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "motion_bucket_id", "fps", "augmentation_level"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SVD_img2vid_Conditioning", "display_name": "SVD_img2vid_Conditioning", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "conditioning/video_models", "output_node": false}, "VideoLinearCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoLinearCFGGuidance", "display_name": "VideoLinearCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "VideoTriangleCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoTriangleCFGGuidance", "display_name": "VideoTriangleCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "ImageOnlyCheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip_vision", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImageOnlyCheckpointSave", "display_name": "ImageOnlyCheckpointSave", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "advanced/model_merging", "output_node": true}, "ConditioningSetAreaPercentageVideo": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "height": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "temporal": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "z": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "temporal", "x", "y", "z", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaPercentageVideo", "display_name": "ConditioningSetAreaPercentageVideo", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "conditioning", "output_node": false}, "TrainLoraNode": {"input": {"required": {"model": ["MODEL", {"tooltip": "The model to train the LoRA on."}], "latents": ["LATENT", {"tooltip": "The Latents to use for training, serve as dataset/input of the model."}], "positive": ["CONDITIONING", {"tooltip": "The positive conditioning to use for training."}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 10000, "step": 1, "tooltip": "The batch size to use for training."}], "grad_accumulation_steps": ["INT", {"default": 1, "min": 1, "max": 1024, "step": 1, "tooltip": "The number of gradient accumulation steps to use for training."}], "steps": ["INT", {"default": 16, "min": 1, "max": 100000, "tooltip": "The number of steps to train the LoRA for."}], "learning_rate": ["FLOAT", {"default": 0.0005, "min": 1e-07, "max": 1.0, "step": 1e-06, "tooltip": "The learning rate to use for training."}], "rank": ["INT", {"default": 8, "min": 1, "max": 128, "tooltip": "The rank of the LoRA layers."}], "optimizer": [["AdamW", "Adam", "SGD", "RMSprop"], {"default": "AdamW", "tooltip": "The optimizer to use for training."}], "loss_function": [["MSE", "L1", "Huber", "SmoothL1"], {"default": "MSE", "tooltip": "The loss function to use for training."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "The seed to use for training (used in generator for LoRA weight initialization and noise sampling)"}], "training_dtype": [["bf16", "fp32"], {"default": "bf16", "tooltip": "The dtype to use for training."}], "lora_dtype": [["bf16", "fp32"], {"default": "bf16", "tooltip": "The dtype to use for lora."}], "algorithm": [["LoRA", "LoHa", "LoKr", "OFT"], {"default": "LoRA", "tooltip": "The algorithm to use for training."}], "gradient_checkpointing": ["BOOLEAN", {"default": true, "tooltip": "Use gradient checkpointing for training."}], "existing_lora": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors", "[None]"], {"default": "[None]", "tooltip": "The existing LoRA to append to. Set to None for new LoRA."}]}}, "input_order": {"required": ["model", "latents", "positive", "batch_size", "grad_accumulation_steps", "steps", "learning_rate", "rank", "optimizer", "loss_function", "seed", "training_dtype", "lora_dtype", "algorithm", "gradient_checkpointing", "existing_lora"]}, "output": ["MODEL", "LORA_MODEL", "LOSS_MAP", "INT"], "output_is_list": [false, false, false, false], "output_name": ["model_with_lora", "lora", "loss", "steps"], "name": "TrainLoraNode", "display_name": "Train LoRA", "description": "", "python_module": "comfy_extras.nodes_train", "category": "training", "output_node": false, "experimental": true}, "SaveLoRANode": {"input": {"required": {"lora": ["LORA_MODEL", {"tooltip": "The LoRA model to save. Do not use the model with LoRA layers."}], "prefix": ["STRING", {"default": "loras/ComfyUI_trained_lora", "tooltip": "The prefix to use for the saved LoRA file."}]}, "optional": {"steps": ["INT", {"forceInput": true, "tooltip": "Optional: The number of steps to LoRA has been trained for, used to name the saved file."}]}}, "input_order": {"required": ["lora", "prefix"], "optional": ["steps"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLoRANode", "display_name": "Save LoRA Weights", "description": "", "python_module": "comfy_extras.nodes_train", "category": "loaders", "output_node": true, "experimental": true}, "LoraModelLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "lora": ["LORA_MODEL", {"tooltip": "The LoRA model to apply to the diffusion model."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}]}}, "input_order": {"required": ["model", "lora", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoraModelLoader", "display_name": "Load LoRA Model", "description": "Load Trained LoRA weights from Train LoRA node.", "python_module": "comfy_extras.nodes_train", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model."], "experimental": true}, "LoadImageSetFromFolderNode": {"input": {"required": {"folder": [["3d", "clipspace", "pasted"], {"tooltip": "The folder to load images from."}]}, "optional": {"resize_method": [["None", "Stretch", "Crop", "Pad"], {"default": "None"}]}}, "input_order": {"required": ["folder"], "optional": ["resize_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LoadImageSetFromFolderNode", "display_name": "Load Image Dataset from Folder", "description": "Loads a batch of images from a directory for training.", "python_module": "comfy_extras.nodes_train", "category": "loaders", "output_node": false, "experimental": true}, "LoadImageTextSetFromFolderNode": {"input": {"required": {"folder": [["3d", "clipspace", "pasted"], {"tooltip": "The folder to load images from."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}, "optional": {"resize_method": [["None", "Stretch", "Crop", "Pad"], {"default": "None"}], "width": ["INT", {"default": -1, "min": -1, "max": 10000, "step": 1, "tooltip": "The width to resize the images to. -1 means use the original width."}], "height": ["INT", {"default": -1, "min": -1, "max": 10000, "step": 1, "tooltip": "The height to resize the images to. -1 means use the original height."}]}}, "input_order": {"required": ["folder", "clip"], "optional": ["resize_method", "width", "height"]}, "output": ["IMAGE", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["IMAGE", "CONDITIONING"], "name": "LoadImageTextSetFromFolderNode", "display_name": "Load Image and Text Dataset from Folder", "description": "Loads a batch of images and caption from a directory for training.", "python_module": "comfy_extras.nodes_train", "category": "loaders", "output_node": false, "experimental": true}, "LossGraphNode": {"input": {"required": {"loss": ["LOSS_MAP", {"default": {}}], "filename_prefix": ["STRING", {"default": "loss_graph"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["loss", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LossGraphNode", "display_name": "Plot Loss Graph", "description": "Plots the loss graph and saves it to the output directory.", "python_module": "comfy_extras.nodes_train", "category": "training", "output_node": true, "experimental": true}, "SelfAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 0.5, "min": -2.0, "max": 5.0, "step": 0.01}], "blur_sigma": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["model", "scale", "blur_sigma"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SelfAttentionGuidance", "display_name": "Self-Attention Guidance", "description": "", "python_module": "comfy_extras.nodes_sag", "category": "_for_testing", "output_node": false}, "PerpNeg": {"input": {"required": {"model": ["MODEL"], "empty_conditioning": ["CONDITIONING"], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "empty_conditioning", "neg_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerpNeg", "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false, "deprecated": true}, "PerpNegGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "empty_conditioning": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "empty_conditioning", "cfg", "neg_scale"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "PerpNegGuider", "display_name": "PerpNegGuider", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false}, "StableZero123_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning", "display_name": "StableZero123_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "StableZero123_Conditioning_Batched": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "elevation_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth", "elevation_batch_increment", "azimuth_batch_increment"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning_Batched", "display_name": "StableZero123_Conditioning_Batched", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SV3D_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 21, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -90.0, "max": 90.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "elevation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_Conditioning", "display_name": "SV3D_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SD_4XUpscale_Conditioning": {"input": {"required": {"images": ["IMAGE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "scale_ratio": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["images", "positive", "negative", "scale_ratio", "noise_augmentation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SD_4XUpscale_Conditioning", "display_name": "SD_4XUpscale_Conditioning", "description": "", "python_module": "comfy_extras.nodes_sdupscale", "category": "conditioning/upscale_diffusion", "output_node": false}, "PhotoMakerLoader": {"input": {"required": {"photomaker_model_name": [[]]}}, "input_order": {"required": ["photomaker_model_name"]}, "output": ["PHOTOMAKER"], "output_is_list": [false], "output_name": ["PHOTOMAKER"], "name": "PhotoMakerLoader", "display_name": "PhotoMakerLoader", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "PhotoMakerEncode": {"input": {"required": {"photomaker": ["PHOTOMAKER"], "image": ["IMAGE"], "clip": ["CLIP"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "photograph of photomaker"}]}}, "input_order": {"required": ["photomaker", "image", "clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "PhotoMakerEncode", "display_name": "PhotoMakerEncode", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "CLIPTextEncodePixArtAlpha": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodePixArtAlpha", "display_name": "CLIPTextEncodePixArtAlpha", "description": "Encodes text and sets the resolution conditioning for PixArt Alpha. Does not apply to PixArt Sigma.", "python_module": "comfy_extras.nodes_pixart", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeControlnet": {"input": {"required": {"clip": ["CLIP"], "conditioning": ["CONDITIONING"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "conditioning", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeControlnet", "display_name": "CLIPTextEncodeControlnet", "description": "", "python_module": "comfy_extras.nodes_cond", "category": "_for_testing/conditioning", "output_node": false}, "T5TokenizerOptions": {"input": {"required": {"clip": ["CLIP"], "min_padding": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "min_length": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}]}}, "input_order": {"required": ["clip", "min_padding", "min_length"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "T5TokenizerOptions", "display_name": "T5TokenizerOptions", "description": "", "python_module": "comfy_extras.nodes_cond", "category": "_for_testing/conditioning", "output_node": false}, "Morphology": {"input": {"required": {"image": ["IMAGE"], "operation": [["erode", "dilate", "open", "close", "gradient", "bottom_hat", "top_hat"]], "kernel_size": ["INT", {"default": 3, "min": 3, "max": 999, "step": 1}]}}, "input_order": {"required": ["image", "operation", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Morphology", "display_name": "ImageMorphology", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/postprocessing", "output_node": false}, "ImageRGBToYUV": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["Y", "U", "V"], "name": "ImageRGBToYUV", "display_name": "ImageRGBToYUV", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/batch", "output_node": false}, "ImageYUVToRGB": {"input": {"required": {"Y": ["IMAGE"], "U": ["IMAGE"], "V": ["IMAGE"]}}, "input_order": {"required": ["Y", "U", "V"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageYUVToRGB", "display_name": "ImageYUVToRGB", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/batch", "output_node": false}, "StableCascade_EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "compression", "batch_size"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_EmptyLatentImage", "display_name": "StableCascade_EmptyLatentImage", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_StageB_Conditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "stage_c": ["LATENT"]}}, "input_order": {"required": ["conditioning", "stage_c"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StableCascade_StageB_Conditioning", "display_name": "StableCascade_StageB_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "conditioning/stable_cascade", "output_node": false}, "StableCascade_StageC_VAEEncode": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}]}}, "input_order": {"required": ["image", "vae", "compression"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_StageC_VAEEncode", "display_name": "StableCascade_StageC_VAEEncode", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_SuperResolutionControlnet": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["image", "vae"]}, "output": ["IMAGE", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["controlnet_input", "stage_c", "stage_b"], "name": "StableCascade_SuperResolutionControlnet", "display_name": "StableCascade_SuperResolutionControlnet", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "_for_testing/stable_cascade", "output_node": false, "experimental": true}, "DifferentialDiffusion": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DifferentialDiffusion", "display_name": "Differential Diffusion", "description": "", "python_module": "comfy_extras.nodes_differential_diffusion", "category": "_for_testing", "output_node": false}, "InstructPixToPixConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InstructPixToPixConditioning", "display_name": "InstructPixToPixConditioning", "description": "", "python_module": "comfy_extras.nodes_ip2p", "category": "conditioning/instructpix2pix", "output_node": false}, "ModelMergeSD1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD1", "display_name": "ModelMergeSD1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD2": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD2", "display_name": "ModelMergeSD2", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSDXL": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0", "input_blocks.1", "input_blocks.2", "input_blocks.3", "input_blocks.4", "input_blocks.5", "input_blocks.6", "input_blocks.7", "input_blocks.8", "middle_block.0", "middle_block.1", "middle_block.2", "output_blocks.0", "output_blocks.1", "output_blocks.2", "output_blocks.3", "output_blocks.4", "output_blocks.5", "output_blocks.6", "output_blocks.7", "output_blocks.8", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSDXL", "display_name": "ModelMergeSDXL", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD3_2B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "context_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embed.", "x_embedder.", "context_embedder.", "y_embedder.", "t_embedder.", "joint_blocks.0.", "joint_blocks.1.", "joint_blocks.2.", "joint_blocks.3.", "joint_blocks.4.", "joint_blocks.5.", "joint_blocks.6.", "joint_blocks.7.", "joint_blocks.8.", "joint_blocks.9.", "joint_blocks.10.", "joint_blocks.11.", "joint_blocks.12.", "joint_blocks.13.", "joint_blocks.14.", "joint_blocks.15.", "joint_blocks.16.", "joint_blocks.17.", "joint_blocks.18.", "joint_blocks.19.", "joint_blocks.20.", "joint_blocks.21.", "joint_blocks.22.", "joint_blocks.23.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD3_2B", "display_name": "ModelMergeSD3_2B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeAuraflow": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "init_x_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "positional_encoding": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cond_seq_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "register_tokens": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "modF.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "init_x_linear.", "positional_encoding", "cond_seq_linear.", "register_tokens", "t_embedder.", "double_layers.0.", "double_layers.1.", "double_layers.2.", "double_layers.3.", "single_layers.0.", "single_layers.1.", "single_layers.2.", "single_layers.3.", "single_layers.4.", "single_layers.5.", "single_layers.6.", "single_layers.7.", "single_layers.8.", "single_layers.9.", "single_layers.10.", "single_layers.11.", "single_layers.12.", "single_layers.13.", "single_layers.14.", "single_layers.15.", "single_layers.16.", "single_layers.17.", "single_layers.18.", "single_layers.19.", "single_layers.20.", "single_layers.21.", "single_layers.22.", "single_layers.23.", "single_layers.24.", "single_layers.25.", "single_layers.26.", "single_layers.27.", "single_layers.28.", "single_layers.29.", "single_layers.30.", "single_layers.31.", "modF.", "final_linear."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeAuraflow", "display_name": "ModelMergeAuraflow", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeFlux1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "img_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "guidance_in": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "vector_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "txt_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "img_in.", "time_in.", "guidance_in", "vector_in.", "txt_in.", "double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeFlux1", "display_name": "ModelMergeFlux1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD35_Large": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "context_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embed.", "x_embedder.", "context_embedder.", "y_embedder.", "t_embedder.", "joint_blocks.0.", "joint_blocks.1.", "joint_blocks.2.", "joint_blocks.3.", "joint_blocks.4.", "joint_blocks.5.", "joint_blocks.6.", "joint_blocks.7.", "joint_blocks.8.", "joint_blocks.9.", "joint_blocks.10.", "joint_blocks.11.", "joint_blocks.12.", "joint_blocks.13.", "joint_blocks.14.", "joint_blocks.15.", "joint_blocks.16.", "joint_blocks.17.", "joint_blocks.18.", "joint_blocks.19.", "joint_blocks.20.", "joint_blocks.21.", "joint_blocks.22.", "joint_blocks.23.", "joint_blocks.24.", "joint_blocks.25.", "joint_blocks.26.", "joint_blocks.27.", "joint_blocks.28.", "joint_blocks.29.", "joint_blocks.30.", "joint_blocks.31.", "joint_blocks.32.", "joint_blocks.33.", "joint_blocks.34.", "joint_blocks.35.", "joint_blocks.36.", "joint_blocks.37.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD35_Large", "display_name": "ModelMergeSD35_Large", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeMochiPreview": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_frequencies.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t5_y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t5_yproj.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.38.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.39.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.40.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.41.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.42.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.43.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.44.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.45.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.46.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.47.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_frequencies.", "t_embedder.", "t5_y_embedder.", "t5_yproj.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "blocks.36.", "blocks.37.", "blocks.38.", "blocks.39.", "blocks.40.", "blocks.41.", "blocks.42.", "blocks.43.", "blocks.44.", "blocks.45.", "blocks.46.", "blocks.47.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeMochiPreview", "display_name": "ModelMergeMochiPreview", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeLTXV": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "patchify_proj.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adaln_single.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "caption_projection.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "scale_shift_table": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "proj_out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "patchify_proj.", "adaln_single.", "caption_projection.", "transformer_blocks.0.", "transformer_blocks.1.", "transformer_blocks.2.", "transformer_blocks.3.", "transformer_blocks.4.", "transformer_blocks.5.", "transformer_blocks.6.", "transformer_blocks.7.", "transformer_blocks.8.", "transformer_blocks.9.", "transformer_blocks.10.", "transformer_blocks.11.", "transformer_blocks.12.", "transformer_blocks.13.", "transformer_blocks.14.", "transformer_blocks.15.", "transformer_blocks.16.", "transformer_blocks.17.", "transformer_blocks.18.", "transformer_blocks.19.", "transformer_blocks.20.", "transformer_blocks.21.", "transformer_blocks.22.", "transformer_blocks.23.", "transformer_blocks.24.", "transformer_blocks.25.", "transformer_blocks.26.", "transformer_blocks.27.", "scale_shift_table", "proj_out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeLTXV", "display_name": "ModelMergeLTXV", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmos7B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "extra_pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "affline_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "extra_pos_embedder.", "x_embedder.", "t_embedder.", "affline_norm.", "blocks.block0.", "blocks.block1.", "blocks.block2.", "blocks.block3.", "blocks.block4.", "blocks.block5.", "blocks.block6.", "blocks.block7.", "blocks.block8.", "blocks.block9.", "blocks.block10.", "blocks.block11.", "blocks.block12.", "blocks.block13.", "blocks.block14.", "blocks.block15.", "blocks.block16.", "blocks.block17.", "blocks.block18.", "blocks.block19.", "blocks.block20.", "blocks.block21.", "blocks.block22.", "blocks.block23.", "blocks.block24.", "blocks.block25.", "blocks.block26.", "blocks.block27.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmos7B", "display_name": "ModelMergeCosmos7B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmos14B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "extra_pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "affline_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "extra_pos_embedder.", "x_embedder.", "t_embedder.", "affline_norm.", "blocks.block0.", "blocks.block1.", "blocks.block2.", "blocks.block3.", "blocks.block4.", "blocks.block5.", "blocks.block6.", "blocks.block7.", "blocks.block8.", "blocks.block9.", "blocks.block10.", "blocks.block11.", "blocks.block12.", "blocks.block13.", "blocks.block14.", "blocks.block15.", "blocks.block16.", "blocks.block17.", "blocks.block18.", "blocks.block19.", "blocks.block20.", "blocks.block21.", "blocks.block22.", "blocks.block23.", "blocks.block24.", "blocks.block25.", "blocks.block26.", "blocks.block27.", "blocks.block28.", "blocks.block29.", "blocks.block30.", "blocks.block31.", "blocks.block32.", "blocks.block33.", "blocks.block34.", "blocks.block35.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmos14B", "display_name": "ModelMergeCosmos14B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeWAN2_1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "patch_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_projection.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "text_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "img_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.38.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.39.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "head.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "patch_embedding.", "time_embedding.", "time_projection.", "text_embedding.", "img_emb.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "blocks.36.", "blocks.37.", "blocks.38.", "blocks.39.", "head."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeWAN2_1", "display_name": "ModelMergeWAN2_1", "description": "1.3B model has 30 blocks, 14B model has 40 blocks. Image to video model has the extra img_emb.", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmosPredict2_2B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedding_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "x_embedder.", "t_embedder.", "t_embedding_norm.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmosPredict2_2B", "display_name": "ModelMergeCosmosPredict2_2B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmosPredict2_14B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedding_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "x_embedder.", "t_embedder.", "t_embedding_norm.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmosPredict2_14B", "display_name": "ModelMergeCosmosPredict2_14B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "PerturbedAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerturbedAttentionGuidance", "display_name": "PerturbedAttentionGuidance", "description": "", "python_module": "comfy_extras.nodes_pag", "category": "model_patches/unet", "output_node": false}, "AlignYourStepsScheduler": {"input": {"required": {"model_type": [["SD1", "SDXL", "SVD"]], "steps": ["INT", {"default": 10, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_type", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "AlignYourStepsScheduler", "display_name": "AlignYourStepsScheduler", "description": "", "python_module": "comfy_extras.nodes_align_your_steps", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "UNetSelfAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetSelfAttentionMultiply", "display_name": "UNetSelfAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetCrossAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetCrossAttentionMultiply", "display_name": "UNetCrossAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "CLIPAttentionMultiply": {"input": {"required": {"clip": ["CLIP"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "q", "k", "v", "out"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPAttentionMultiply", "display_name": "CLIPAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetTemporalAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "self_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "self_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "self_structural", "self_temporal", "cross_structural", "cross_temporal"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetTemporalAttentionMultiply", "display_name": "UNetTemporalAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "SamplerLCMUpscale": {"input": {"required": {"scale_ratio": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 20.0, "step": 0.01}], "scale_steps": ["INT", {"default": -1, "min": -1, "max": 1000, "step": 1}], "upscale_method": [["bislerp", "nearest-exact", "bilinear", "area", "bicubic"]]}}, "input_order": {"required": ["scale_ratio", "scale_steps", "upscale_method"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLCMUpscale", "display_name": "SamplerLCMUpscale", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerCFGpp": {"input": {"required": {"version": [["regular", "alternative"]]}}, "input_order": {"required": ["version"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerCFGpp", "display_name": "SamplerEulerCFG++", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "_for_testing", "output_node": false}, "WebcamCapture": {"input": {"required": {"image": ["WEBCAM", {}], "width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "capture_on_queue": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "width", "height", "capture_on_queue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "WebcamCapture", "display_name": "Webcam Capture", "description": "", "python_module": "comfy_extras.nodes_webcam", "category": "image", "output_node": false}, "EmptyLatentAudio": {"input": {"required": {"seconds": ["FLOAT", {"default": 47.6, "min": 1.0, "max": 1000.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["seconds", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentAudio", "display_name": "Empty Latent Audio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEEncodeAudio": {"input": {"required": {"audio": ["AUDIO"], "vae": ["VAE"]}}, "input_order": {"required": ["audio", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeAudio", "display_name": "VAE Encode Audio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEDecodeAudio": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "VAEDecodeAudio", "display_name": "VAE Decode Audio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "SaveAudio": {"input": {"required": {"audio": ["AUDIO"], "filename_prefix": ["STRING", {"default": "audio/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAudio", "display_name": "Save Audio (FLAC)", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "SaveAudioMP3": {"input": {"required": {"audio": ["AUDIO"], "filename_prefix": ["STRING", {"default": "audio/ComfyUI"}], "quality": [["V0", "128k", "320k"], {"default": "V0"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "filename_prefix", "quality"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAudioMP3", "display_name": "Save Audio (MP3)", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "SaveAudioOpus": {"input": {"required": {"audio": ["AUDIO"], "filename_prefix": ["STRING", {"default": "audio/ComfyUI"}], "quality": [["64k", "96k", "128k", "192k", "320k"], {"default": "128k"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "filename_prefix", "quality"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAudioOpus", "display_name": "Save Audio (Opus)", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "LoadAudio": {"input": {"required": {"audio": [[], {"audio_upload": true}]}}, "input_order": {"required": ["audio"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "LoadAudio", "display_name": "Load Audio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": false}, "PreviewAudio": {"input": {"required": {"audio": ["AUDIO"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAudio", "display_name": "Preview Audio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "ConditioningStableAudio": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "seconds_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.1}], "seconds_total": ["FLOAT", {"default": 47.0, "min": 0.0, "max": 1000.0, "step": 0.1}]}}, "input_order": {"required": ["positive", "negative", "seconds_start", "seconds_total"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ConditioningStableAudio", "display_name": "ConditioningStableAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "conditioning", "output_node": false}, "TripleCLIPLoader": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name3": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "TripleCLIPLoader", "display_name": "TripleCLIPLoader", "description": "[Recipes]\n\nsd3: clip-l, clip-g, t5", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/loaders", "output_node": false}, "EmptySD3LatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptySD3LatentImage", "display_name": "EmptySD3LatentImage", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "latent/sd3", "output_node": false}, "CLIPTextEncodeSD3": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "empty_padding": [["none", "empty_prompt"]]}}, "input_order": {"required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSD3", "display_name": "CLIPTextEncodeSD3", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/conditioning", "output_node": false}, "ControlNetApplySD3": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplySD3", "display_name": "Apply Controlnet with VAE", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "SkipLayerGuidanceSD3": {"input": {"required": {"model": ["MODEL"], "layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "start_percent": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "layers", "scale", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceSD3", "display_name": "SkipLayerGuidanceSD3", "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/guidance", "output_node": false, "experimental": true}, "GITSScheduler": {"input": {"required": {"coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05}], "steps": ["INT", {"default": 10, "min": 2, "max": 1000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["coeff", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "GITSScheduler", "display_name": "GITSScheduler", "description": "", "python_module": "comfy_extras.nodes_gits", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SetUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetUnionControlNetType", "display_name": "SetUnionControlNetType", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "ControlNetInpaintingAliMamaApply": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "mask", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetInpaintingAliMamaApply", "display_name": "ControlNetInpaintingAliMamaApply", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "CLIPTextEncodeHunyuanDiT": {"input": {"required": {"clip": ["CLIP"], "bert": ["STRING", {"multiline": true, "dynamicPrompts": true}], "mt5xl": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "bert", "mt5xl"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeHunyuanDiT", "display_name": "CLIPTextEncodeHunyuanDiT", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "advanced/conditioning", "output_node": false}, "TextEncodeHunyuanVideo_ImageToVideo": {"input": {"required": {"clip": ["CLIP"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}], "image_interleave": ["INT", {"default": 2, "min": 1, "max": 512, "tooltip": "How much the image influences things vs the text prompt. Higher number means more influence from the text prompt."}]}}, "input_order": {"required": ["clip", "clip_vision_output", "prompt", "image_interleave"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "TextEncodeHunyuanVideo_ImageToVideo", "display_name": "TextEncodeHunyuanVideo_ImageToVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "advanced/conditioning", "output_node": false}, "EmptyHunyuanLatentVideo": {"input": {"required": {"width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 25, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyHunyuanLatentVideo", "display_name": "EmptyHunyuanLatentVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "latent/video", "output_node": false}, "HunyuanImageToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 53, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "guidance_type": [["v1 (concat)", "v2 (replace)", "custom"]]}, "optional": {"start_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "vae", "width", "height", "length", "batch_size", "guidance_type"], "optional": ["start_image"]}, "output": ["CONDITIONING", "LATENT"], "output_is_list": [false, false], "output_name": ["positive", "latent"], "name": "HunyuanImageToVideo", "display_name": "HunyuanImageToVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "conditioning/video_models", "output_node": false}, "CLIPTextEncodeFlux": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["clip", "clip_l", "t5xxl", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeFlux", "display_name": "CLIPTextEncodeFlux", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxGuidance": {"input": {"required": {"conditioning": ["CONDITIONING"], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["conditioning", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "FluxGuidance", "display_name": "FluxGuidance", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxDisableGuidance": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "FluxDisableGuidance", "display_name": "FluxDisableGuidance", "description": "This node completely disables the guidance embed on Flux and Flux like models", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxKontextImageScale": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FluxKontextImageScale", "display_name": "FluxKontextImageScale", "description": "This node resizes the image to one that is more optimal for flux kontext.", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "LoraSave": {"input": {"required": {"filename_prefix": ["STRING", {"default": "loras/ComfyUI_extracted_lora"}], "rank": ["INT", {"default": 8, "min": 1, "max": 4096, "step": 1}], "lora_type": [["standard", "full_diff"]], "bias_diff": ["BOOLEAN", {"default": true}]}, "optional": {"model_diff": ["MODEL", {"tooltip": "The ModelSubtract output to be converted to a lora."}], "text_encoder_diff": ["CLIP", {"tooltip": "The CLIPSubtract output to be converted to a lora."}]}}, "input_order": {"required": ["filename_prefix", "rank", "lora_type", "bias_diff"], "optional": ["model_diff", "text_encoder_diff"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LoraSave", "display_name": "Extract and Save Lora", "description": "", "python_module": "comfy_extras.nodes_lora_extract", "category": "_for_testing", "output_node": true}, "TorchCompileModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]]}}, "input_order": {"required": ["model", "backend"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModel", "display_name": "TorchCompileModel", "description": "", "python_module": "comfy_extras.nodes_torch_compile", "category": "_for_testing", "output_node": false, "experimental": true}, "EmptyMochiLatentVideo": {"input": {"required": {"width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 25, "min": 7, "max": 16384, "step": 6}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyMochiLatentVideo", "display_name": "EmptyMochiLatentVideo", "description": "", "python_module": "comfy_extras.nodes_mochi", "category": "latent/video", "output_node": false}, "SkipLayerGuidanceDiT": {"input": {"required": {"model": ["MODEL"], "double_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "single_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "start_percent": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1.0, "step": 0.001}], "rescaling_scale": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "double_layers", "single_layers", "scale", "start_percent", "end_percent", "rescaling_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceDiT", "display_name": "SkipLayerGuidanceDiT", "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.", "python_module": "comfy_extras.nodes_slg", "category": "advanced/guidance", "output_node": false, "experimental": true}, "SkipLayerGuidanceDiTSimple": {"input": {"required": {"model": ["MODEL"], "double_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "single_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "double_layers", "single_layers", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceDiTSimple", "display_name": "SkipLayerGuidanceDiTSimple", "description": "Simple version of the SkipLayerGuidanceDiT node that only modifies the uncond pass.", "python_module": "comfy_extras.nodes_slg", "category": "advanced/guidance", "output_node": false, "experimental": true}, "Mahiro": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "Mahiro", "display_name": "Mahiro is so cute that she deserves a better guidance function!! (\u3002\u30fb\u03c9\u30fb\u3002)", "description": "Modify the guidance to scale more on the 'direction' of the positive prompt rather than the difference between the negative prompt.", "python_module": "comfy_extras.nodes_mahiro", "category": "_for_testing", "output_node": false}, "EmptyLTXVLatentVideo": {"input": {"required": {"width": ["INT", {"default": 768, "min": 64, "max": 16384, "step": 32}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 32}], "length": ["INT", {"default": 97, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLTXVLatentVideo", "display_name": "EmptyLTXVLatentVideo", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "latent/video/ltxv", "output_node": false}, "LTXVImgToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "image": ["IMAGE"], "width": ["INT", {"default": 768, "min": 64, "max": 16384, "step": 32}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 32}], "length": ["INT", {"default": 97, "min": 9, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}]}}, "input_order": {"required": ["positive", "negative", "vae", "image", "width", "height", "length", "batch_size", "strength"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVImgToVideo", "display_name": "LTXVImgToVideo", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "ModelSamplingLTXV": {"input": {"required": {"model": ["MODEL"], "max_shift": ["FLOAT", {"default": 2.05, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.95, "min": 0.0, "max": 100.0, "step": 0.01}]}, "optional": {"latent": ["LATENT"]}}, "input_order": {"required": ["model", "max_shift", "base_shift"], "optional": ["latent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingLTXV", "display_name": "ModelSamplingLTXV", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "advanced/model", "output_node": false}, "LTXVConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "frame_rate": ["FLOAT", {"default": 25.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "frame_rate"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "LTXVConditioning", "display_name": "LTXVConditioning", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "LTXVScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "max_shift": ["FLOAT", {"default": 2.05, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.95, "min": 0.0, "max": 100.0, "step": 0.01}], "stretch": ["BOOLEAN", {"default": true, "tooltip": "Stretch the sigmas to be in the range [terminal, 1]."}], "terminal": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 0.99, "step": 0.01, "tooltip": "The terminal value of the sigmas after stretching."}]}, "optional": {"latent": ["LATENT"]}}, "input_order": {"required": ["steps", "max_shift", "base_shift", "stretch", "terminal"], "optional": ["latent"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "LTXVScheduler", "display_name": "LTXVScheduler", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "LTXVAddGuide": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "latent": ["LATENT"], "image": ["IMAGE", {"tooltip": "Image or video to condition the latent video on. Must be 8*n + 1 frames.If the video is not 8*n + 1 frames, it will be cropped to the nearest 8*n + 1 frames."}], "frame_idx": ["INT", {"default": 0, "min": -9999, "max": 9999, "tooltip": "Frame index to start the conditioning at. For single-frame images or videos with 1-8 frames, any frame_idx value is acceptable. For videos with 9+ frames, frame_idx must be divisible by 8, otherwise it will be rounded down to the nearest multiple of 8. Negative values are counted from the end of the video."}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "vae", "latent", "image", "frame_idx", "strength"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVAddGuide", "display_name": "LTXVAddGuide", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "LTXVPreprocess": {"input": {"required": {"image": ["IMAGE"], "img_compression": ["INT", {"default": 35, "min": 0, "max": 100, "tooltip": "Amount of compression to apply on image."}]}}, "input_order": {"required": ["image", "img_compression"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["output_image"], "name": "LTXVPreprocess", "display_name": "LTXVPreprocess", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "image", "output_node": false}, "LTXVCropGuides": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"]}}, "input_order": {"required": ["positive", "negative", "latent"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVCropGuides", "display_name": "LTXVCropGuides", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "CreateHookLora": {"input": {"required": {"lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["lora_name", "strength_model", "strength_clip"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookLora", "display_name": "Create Hook LoRA", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookLoraModelOnly": {"input": {"required": {"lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["lora_name", "strength_model"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookLoraModelOnly", "display_name": "Create Hook LoRA (MO)", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookModelAsLora": {"input": {"required": {"ckpt_name": [[]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["ckpt_name", "strength_model", "strength_clip"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookModelAsLora", "display_name": "Create Hook Model as LoRA", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookModelAsLoraModelOnly": {"input": {"required": {"ckpt_name": [[]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["ckpt_name", "strength_model"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookModelAsLoraModelOnly", "display_name": "Create Hook Model as LoRA (MO)", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "SetHookKeyframes": {"input": {"required": {"hooks": ["HOOKS"]}, "optional": {"hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["hooks"], "optional": ["hook_kf"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "SetHookKeyframes", "display_name": "Set Hook Keyframes", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframe": {"input": {"required": {"strength_mult": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["strength_mult", "start_percent"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframe", "display_name": "Create Hook Keyframe", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframesInterpolated": {"input": {"required": {"strength_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "keyframes_count": ["INT", {"default": 5, "min": 2, "max": 100, "step": 1}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["strength_start", "strength_end", "interpolation", "start_percent", "end_percent", "keyframes_count", "print_keyframes"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframesInterpolated", "display_name": "Create Hook Keyframes Interp.", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframesFromFloats": {"input": {"required": {"floats_strength": ["FLOATS", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["floats_strength", "start_percent", "end_percent", "print_keyframes"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframesFromFloats", "display_name": "Create Hook Keyframes From Floats", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CombineHooks2": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks2", "display_name": "Combine Hooks [2]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "CombineHooks4": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"], "hooks_C": ["HOOKS"], "hooks_D": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B", "hooks_C", "hooks_D"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks4", "display_name": "Combine Hooks [4]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "CombineHooks8": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"], "hooks_C": ["HOOKS"], "hooks_D": ["HOOKS"], "hooks_E": ["HOOKS"], "hooks_F": ["HOOKS"], "hooks_G": ["HOOKS"], "hooks_H": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B", "hooks_C", "hooks_D", "hooks_E", "hooks_F", "hooks_G", "hooks_H"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks8", "display_name": "Combine Hooks [8]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "ConditioningSetProperties": {"input": {"required": {"cond_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["cond_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetProperties", "display_name": "Cond Set Props", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "ConditioningSetPropertiesAndCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["cond", "cond_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetPropertiesAndCombine", "display_name": "Cond Set Props Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "PairConditioningSetProperties": {"input": {"required": {"positive_NEW": ["CONDITIONING"], "negative_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["positive_NEW", "negative_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetProperties", "display_name": "Cond Pair Set Props", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "PairConditioningSetPropertiesAndCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_NEW": ["CONDITIONING"], "negative_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["positive", "negative", "positive_NEW", "negative_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetPropertiesAndCombine", "display_name": "Cond Pair Set Props Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "ConditioningSetDefaultCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_DEFAULT": ["CONDITIONING"]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["cond", "cond_DEFAULT"], "optional": ["hooks"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetDefaultCombine", "display_name": "Cond Set Default Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "PairConditioningSetDefaultCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_DEFAULT": ["CONDITIONING"], "negative_DEFAULT": ["CONDITIONING"]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["positive", "negative", "positive_DEFAULT", "negative_DEFAULT"], "optional": ["hooks"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetDefaultCombine", "display_name": "Cond Pair Set Default Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "PairConditioningCombine": {"input": {"required": {"positive_A": ["CONDITIONING"], "negative_A": ["CONDITIONING"], "positive_B": ["CONDITIONING"], "negative_B": ["CONDITIONING"]}}, "input_order": {"required": ["positive_A", "negative_A", "positive_B", "negative_B"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningCombine", "display_name": "Cond Pair Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "SetClipHooks": {"input": {"required": {"clip": ["CLIP"], "apply_to_conds": ["BOOLEAN", {"default": true}], "schedule_clip": ["BOOLEAN", {"default": false}]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["clip", "apply_to_conds", "schedule_clip"], "optional": ["hooks"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "SetClipHooks", "display_name": "Set CLIP Hooks", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/clip", "output_node": false, "experimental": true}, "ConditioningTimestepsRange": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["start_percent", "end_percent"]}, "output": ["TIMESTEPS_RANGE", "TIMESTEPS_RANGE", "TIMESTEPS_RANGE"], "output_is_list": [false, false, false], "output_name": ["TIMESTEPS_RANGE", "BEFORE_RANGE", "AFTER_RANGE"], "name": "ConditioningTimestepsRange", "display_name": "Timesteps Range", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks", "output_node": false, "experimental": true}, "Load3D": {"input": {"required": {"model_file": [[], {"file_upload": true}], "image": ["LOAD_3D", {}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["model_file", "image", "width", "height"]}, "output": ["IMAGE", "MASK", "STRING", "IMAGE", "IMAGE", "LOAD3D_CAMERA", "VIDEO"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["image", "mask", "mesh_path", "normal", "lineart", "camera_info", "recording_video"], "name": "Load3D", "display_name": "Load 3D", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": false, "experimental": true}, "Load3DAnimation": {"input": {"required": {"model_file": [[], {"file_upload": true}], "image": ["LOAD_3D_ANIMATION", {}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["model_file", "image", "width", "height"]}, "output": ["IMAGE", "MASK", "STRING", "IMAGE", "LOAD3D_CAMERA", "VIDEO"], "output_is_list": [false, false, false, false, false, false], "output_name": ["image", "mask", "mesh_path", "normal", "camera_info", "recording_video"], "name": "Load3DAnimation", "display_name": "Load 3D - Animation", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": false, "experimental": true}, "Preview3D": {"input": {"required": {"model_file": ["STRING", {"default": "", "multiline": false}]}, "optional": {"camera_info": ["LOAD3D_CAMERA", {}]}}, "input_order": {"required": ["model_file"], "optional": ["camera_info"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Preview3D", "display_name": "Preview 3D", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": true, "experimental": true}, "Preview3DAnimation": {"input": {"required": {"model_file": ["STRING", {"default": "", "multiline": false}]}, "optional": {"camera_info": ["LOAD3D_CAMERA", {}]}}, "input_order": {"required": ["model_file"], "optional": ["camera_info"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Preview3DAnimation", "display_name": "Preview 3D - Animation", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": true, "experimental": true}, "EmptyCosmosLatentVideo": {"input": {"required": {"width": ["INT", {"default": 1280, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 704, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 121, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyCosmosLatentVideo", "display_name": "EmptyCosmosLatentVideo", "description": "", "python_module": "comfy_extras.nodes_cosmos", "category": "latent/video", "output_node": false}, "CosmosImageToVideoLatent": {"input": {"required": {"vae": ["VAE"], "width": ["INT", {"default": 1280, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 704, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 121, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["vae", "width", "height", "length", "batch_size"], "optional": ["start_image", "end_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CosmosImageToVideoLatent", "display_name": "CosmosImageToVideoLatent", "description": "", "python_module": "comfy_extras.nodes_cosmos", "category": "conditioning/inpaint", "output_node": false}, "CosmosPredict2ImageToVideoLatent": {"input": {"required": {"vae": ["VAE"], "width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 93, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["vae", "width", "height", "length", "batch_size"], "optional": ["start_image", "end_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CosmosPredict2ImageToVideoLatent", "display_name": "CosmosPredict2ImageToVideoLatent", "description": "", "python_module": "comfy_extras.nodes_cosmos", "category": "conditioning/inpaint", "output_node": false}, "SaveWEBM": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "codec": [["vp9", "av1"]], "fps": ["FLOAT", {"default": 24.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "crf": ["FLOAT", {"default": 32.0, "min": 0, "max": 63.0, "step": 1, "tooltip": "Higher crf means lower quality with a smaller file size, lower crf means higher quality higher filesize."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "codec", "fps", "crf"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveWEBM", "display_name": "SaveWEBM", "description": "", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": true, "experimental": true}, "SaveVideo": {"input": {"required": {"video": ["VIDEO", {"tooltip": "The video to save."}], "filename_prefix": ["STRING", {"default": "video/ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "format": [["auto", "mp4"], {"default": "auto", "tooltip": "The format to save the video as."}], "codec": [["auto", "h264"], {"default": "auto", "tooltip": "The codec to use for the video."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["video", "filename_prefix", "format", "codec"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveVideo", "display_name": "Save Video", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": true}, "CreateVideo": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to create a video from."}], "fps": ["FLOAT", {"default": 30.0, "min": 1.0, "max": 120.0, "step": 1.0}]}, "optional": {"audio": ["AUDIO", {"tooltip": "The audio to add to the video."}]}}, "input_order": {"required": ["images", "fps"], "optional": ["audio"]}, "output": ["VIDEO"], "output_is_list": [false], "output_name": ["VIDEO"], "name": "CreateVideo", "display_name": "Create Video", "description": "Create a video from images.", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": false}, "GetVideoComponents": {"input": {"required": {"video": ["VIDEO", {"tooltip": "The video to extract components from."}]}}, "input_order": {"required": ["video"]}, "output": ["IMAGE", "AUDIO", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["images", "audio", "fps"], "name": "GetVideoComponents", "display_name": "Get Video Components", "description": "Extracts all components from a video: frames, audio, and framerate.", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": false}, "LoadVideo": {"input": {"required": {"file": [[], {"video_upload": true}]}}, "input_order": {"required": ["file"]}, "output": ["VIDEO"], "output_is_list": [false], "output_name": ["VIDEO"], "name": "LoadVideo", "display_name": "Load Video", "description": "", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": false}, "CLIPTextEncodeLumina2": {"input": {"required": {"system_prompt": [["superior", "alignment"], {"tooltip": "Lumina2 provide two types of system prompts:Superior: You are an assistant designed to generate superior images with the superior degree of image-text alignment based on textual prompts or user prompts. Alignment: You are an assistant designed to generate high-quality images with the highest degree of image-text alignment based on textual prompts."}], "user_prompt": ["STRING", {"multiline": true, "dynamicPrompts": true, "tooltip": "The text to be encoded."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}}, "input_order": {"required": ["system_prompt", "user_prompt", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeLumina2", "display_name": "CLIP Text Encode for Lumina2", "description": "Encodes a system prompt and a user prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.", "python_module": "comfy_extras.nodes_lumina2", "category": "conditioning", "output_node": false, "output_tooltips": ["A conditioning containing the embedded text used to guide the diffusion model."]}, "RenormCFG": {"input": {"required": {"model": ["MODEL"], "cfg_trunc": ["FLOAT", {"default": 100, "min": 0.0, "max": 100.0, "step": 0.01}], "renorm_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "cfg_trunc", "renorm_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RenormCFG", "display_name": "RenormCFG", "description": "", "python_module": "comfy_extras.nodes_lumina2", "category": "advanced/model", "output_node": false}, "WanImageToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanImageToVideo", "display_name": "WanImageToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanFunControlToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "control_video": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image", "control_video"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanFunControlToVideo", "display_name": "WanFunControlToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanFunInpaintToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image", "end_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanFunInpaintToVideo", "display_name": "WanFunInpaintToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanFirstLastFrameToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_start_image": ["CLIP_VISION_OUTPUT"], "clip_vision_end_image": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_start_image", "clip_vision_end_image", "start_image", "end_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanFirstLastFrameToVideo", "display_name": "WanFirstLastFrameToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanVaceToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}, "optional": {"control_video": ["IMAGE"], "control_masks": ["MASK"], "reference_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size", "strength"], "optional": ["control_video", "control_masks", "reference_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["positive", "negative", "latent", "trim_latent"], "name": "WanVaceToVideo", "display_name": "WanVaceToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false, "experimental": true}, "TrimVideoLatent": {"input": {"required": {"samples": ["LATENT"], "trim_amount": ["INT", {"default": 0, "min": 0, "max": 99999}]}}, "input_order": {"required": ["samples", "trim_amount"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "TrimVideoLatent", "display_name": "TrimVideoLatent", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "latent/video", "output_node": false, "experimental": true}, "WanCameraImageToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "camera_conditions": ["WAN_CAMERA_EMBEDDING"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image", "camera_conditions"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanCameraImageToVideo", "display_name": "WanCameraImageToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanPhantomSubjectToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"images": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["images"]}, "output": ["CONDITIONING", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["positive", "negative_text", "negative_img_text", "latent"], "name": "WanPhantomSubjectToVideo", "display_name": "WanPhantomSubjectToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "LotusConditioning": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "LotusConditioning", "display_name": "LotusConditioning", "description": "", "python_module": "comfy_extras.nodes_lotus", "category": "conditioning/lotus", "output_node": false}, "EmptyLatentHunyuan3Dv2": {"input": {"required": {"resolution": ["INT", {"default": 3072, "min": 1, "max": 8192}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["resolution", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentHunyuan3Dv2", "display_name": "EmptyLatentHunyuan3Dv2", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "latent/3d", "output_node": false}, "Hunyuan3Dv2Conditioning": {"input": {"required": {"clip_vision_output": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": ["clip_vision_output"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Hunyuan3Dv2Conditioning", "display_name": "Hunyuan3Dv2Conditioning", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "conditioning/video_models", "output_node": false}, "Hunyuan3Dv2ConditioningMultiView": {"input": {"required": {}, "optional": {"front": ["CLIP_VISION_OUTPUT"], "left": ["CLIP_VISION_OUTPUT"], "back": ["CLIP_VISION_OUTPUT"], "right": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": [], "optional": ["front", "left", "back", "right"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Hunyuan3Dv2ConditioningMultiView", "display_name": "Hunyuan3Dv2ConditioningMultiView", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "conditioning/video_models", "output_node": false}, "VAEDecodeHunyuan3D": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "num_chunks": ["INT", {"default": 8000, "min": 1000, "max": 500000}], "octree_resolution": ["INT", {"default": 256, "min": 16, "max": 512}]}}, "input_order": {"required": ["samples", "vae", "num_chunks", "octree_resolution"]}, "output": ["VOXEL"], "output_is_list": [false], "output_name": ["VOXEL"], "name": "VAEDecodeHunyuan3D", "display_name": "VAEDecodeHunyuan3D", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "latent/3d", "output_node": false}, "VoxelToMeshBasic": {"input": {"required": {"voxel": ["VOXEL"], "threshold": ["FLOAT", {"default": 0.6, "min": -1.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["voxel", "threshold"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "VoxelToMeshBasic", "display_name": "VoxelToMeshBasic", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "3d", "output_node": false}, "VoxelToMesh": {"input": {"required": {"voxel": ["VOXEL"], "algorithm": [["surface net", "basic"]], "threshold": ["FLOAT", {"default": 0.6, "min": -1.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["voxel", "algorithm", "threshold"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "VoxelToMesh", "display_name": "VoxelToMesh", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "3d", "output_node": false}, "SaveGLB": {"input": {"required": {"mesh": ["MESH"], "filename_prefix": ["STRING", {"default": "mesh/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mesh", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveGLB", "display_name": "SaveGLB", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "3d", "output_node": true}, "PrimitiveString": {"input": {"required": {"value": ["STRING", {}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "PrimitiveString", "display_name": "String", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveStringMultiline": {"input": {"required": {"value": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "PrimitiveStringMultiline", "display_name": "String (Multiline)", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveInt": {"input": {"required": {"value": ["INT", {"min": -9223372036854775807, "max": 9223372036854775807, "control_after_generate": true}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "PrimitiveInt", "display_name": "Int", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveFloat": {"input": {"required": {"value": ["FLOAT", {"min": -9223372036854775807, "max": 9223372036854775807}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "PrimitiveFloat", "display_name": "Float", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveBoolean": {"input": {"required": {"value": ["BOOLEAN", {}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "PrimitiveBoolean", "display_name": "Boolean", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "CFGZeroStar": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "CFGZeroStar", "display_name": "CFGZeroStar", "description": "", "python_module": "comfy_extras.nodes_cfg", "category": "advanced/guidance", "output_node": false}, "CFGNorm": {"input": {"required": {"model": ["MODEL"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "CFGNorm", "display_name": "CFGNorm", "description": "", "python_module": "comfy_extras.nodes_cfg", "category": "advanced/guidance", "output_node": false, "experimental": true}, "OptimalStepsScheduler": {"input": {"required": {"model_type": [["FLUX", "Wan", "Chroma"]], "steps": ["INT", {"default": 20, "min": 3, "max": 1000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_type", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "OptimalStepsScheduler", "display_name": "OptimalStepsScheduler", "description": "", "python_module": "comfy_extras.nodes_optimalsteps", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "QuadrupleCLIPLoader": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name3": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name4": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3", "clip_name4"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "QuadrupleCLIPLoader", "display_name": "QuadrupleCLIPLoader", "description": "[Recipes]\n\nhidream: long clip-l, long clip-g, t5xxl, llama_8b_3.1_instruct", "python_module": "comfy_extras.nodes_hidream", "category": "advanced/loaders", "output_node": false}, "CLIPTextEncodeHiDream": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "llama": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "clip_l", "clip_g", "t5xxl", "llama"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeHiDream", "display_name": "CLIPTextEncodeHiDream", "description": "", "python_module": "comfy_extras.nodes_hidream", "category": "advanced/conditioning", "output_node": false}, "FreSca": {"input": {"required": {"model": ["MODEL"], "scale_low": ["FLOAT", {"default": 1.0, "min": 0, "max": 10, "step": 0.01, "tooltip": "Scaling factor for low-frequency components"}], "scale_high": ["FLOAT", {"default": 1.25, "min": 0, "max": 10, "step": 0.01, "tooltip": "Scaling factor for high-frequency components"}], "freq_cutoff": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1, "tooltip": "Number of frequency indices around center to consider as low-frequency"}]}}, "input_order": {"required": ["model", "scale_low", "scale_high", "freq_cutoff"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreSca", "display_name": "FreSca", "description": "Applies frequency-dependent scaling to the guidance", "python_module": "comfy_extras.nodes_fresca", "category": "_for_testing", "output_node": false}, "APG": {"input": {"required": {"model": ["MODEL"], "eta": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "tooltip": "Controls the scale of the parallel guidance vector. Default CFG behavior at a setting of 1."}], "norm_threshold": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 50.0, "step": 0.1, "tooltip": "Normalize guidance vector to this value, normalization disable at a setting of 0."}], "momentum": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 1.0, "step": 0.01, "tooltip": "Controls a running average of guidance during diffusion, disabled at a setting of 0."}]}}, "input_order": {"required": ["model", "eta", "norm_threshold", "momentum"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "APG", "display_name": "Adaptive Projected Guidance", "description": "", "python_module": "comfy_extras.nodes_apg", "category": "sampling/custom_sampling", "output_node": false}, "PreviewAny": {"input": {"required": {"source": ["*", {}]}}, "input_order": {"required": ["source"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAny", "display_name": "Preview Any", "description": "", "python_module": "comfy_extras.nodes_preview_any", "category": "utils", "output_node": true}, "TextEncodeAceStepAudio": {"input": {"required": {"clip": ["CLIP"], "tags": ["STRING", {"multiline": true, "dynamicPrompts": true}], "lyrics": ["STRING", {"multiline": true, "dynamicPrompts": true}], "lyrics_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "tags", "lyrics", "lyrics_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "TextEncodeAceStepAudio", "display_name": "TextEncodeAceStepAudio", "description": "", "python_module": "comfy_extras.nodes_ace", "category": "conditioning", "output_node": false}, "EmptyAceStepLatentAudio": {"input": {"required": {"seconds": ["FLOAT", {"default": 120.0, "min": 1.0, "max": 1000.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["seconds", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyAceStepLatentAudio", "display_name": "EmptyAceStepLatentAudio", "description": "", "python_module": "comfy_extras.nodes_ace", "category": "latent/audio", "output_node": false}, "StringConcatenate": {"input": {"required": {"string_a": ["STRING", {"multiline": true}], "string_b": ["STRING", {"multiline": true}], "delimiter": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["string_a", "string_b", "delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConcatenate", "display_name": "Concatenate", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringSubstring": {"input": {"required": {"string": ["STRING", {"multiline": true}], "start": ["INT", {}], "end": ["INT", {}]}}, "input_order": {"required": ["string", "start", "end"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringSubstring", "display_name": "Substring", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringLength": {"input": {"required": {"string": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["string"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["length"], "name": "StringLength", "display_name": "Length", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "CaseConverter": {"input": {"required": {"string": ["STRING", {"multiline": true}], "mode": ["COMBO", {"options": ["UPPERCASE", "lowercase", "Capitalize", "Title Case"]}]}}, "input_order": {"required": ["string", "mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "CaseConverter", "display_name": "Case Converter", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringTrim": {"input": {"required": {"string": ["STRING", {"multiline": true}], "mode": ["COMBO", {"options": ["Both", "Left", "Right"]}]}}, "input_order": {"required": ["string", "mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringTrim", "display_name": "Trim", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringReplace": {"input": {"required": {"string": ["STRING", {"multiline": true}], "find": ["STRING", {"multiline": true}], "replace": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["string", "find", "replace"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringReplace", "display_name": "Replace", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringContains": {"input": {"required": {"string": ["STRING", {"multiline": true}], "substring": ["STRING", {"multiline": true}], "case_sensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["string", "substring", "case_sensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["contains"], "name": "StringContains", "display_name": "Contains", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "StringCompare": {"input": {"required": {"string_a": ["STRING", {"multiline": true}], "string_b": ["STRING", {"multiline": true}], "mode": ["COMBO", {"options": ["Starts With", "Ends With", "Equal"]}], "case_sensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["string_a", "string_b", "mode", "case_sensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "StringCompare", "display_name": "Compare", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "RegexMatch": {"input": {"required": {"string": ["STRING", {"multiline": true}], "regex_pattern": ["STRING", {"multiline": true}], "case_insensitive": ["BOOLEAN", {"default": true}], "multiline": ["BOOLEAN", {"default": false}], "dotall": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["string", "regex_pattern", "case_insensitive", "multiline", "dotall"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["matches"], "name": "RegexMatch", "display_name": "Regex Match", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "RegexExtract": {"input": {"required": {"string": ["STRING", {"multiline": true}], "regex_pattern": ["STRING", {"multiline": true}], "mode": ["COMBO", {"options": ["First Match", "All Matches", "First Group", "All Groups"]}], "case_insensitive": ["BOOLEAN", {"default": true}], "multiline": ["BOOLEAN", {"default": false}], "dotall": ["BOOLEAN", {"default": false}], "group_index": ["INT", {"default": 1, "min": 0, "max": 100}]}}, "input_order": {"required": ["string", "regex_pattern", "mode", "case_insensitive", "multiline", "dotall", "group_index"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RegexExtract", "display_name": "Regex Extract", "description": "", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "RegexReplace": {"input": {"required": {"string": ["STRING", {"multiline": true}], "regex_pattern": ["STRING", {"multiline": true}], "replace": ["STRING", {"multiline": true}]}, "optional": {"case_insensitive": ["BOOLEAN", {"default": true}], "multiline": ["BOOLEAN", {"default": false}], "dotall": ["BOOLEAN", {"default": false, "tooltip": "When enabled, the dot (.) character will match any character including newline characters. When disabled, dots won't match newlines."}], "count": ["INT", {"default": 0, "min": 0, "max": 100, "tooltip": "Maximum number of replacements to make. Set to 0 to replace all occurrences (default). Set to 1 to replace only the first match, 2 for the first two matches, etc."}]}}, "input_order": {"required": ["string", "regex_pattern", "replace"], "optional": ["case_insensitive", "multiline", "dotall", "count"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "RegexReplace", "display_name": "Regex Replace", "description": "Find and replace text using regex patterns.", "python_module": "comfy_extras.nodes_string", "category": "utils/string", "output_node": false}, "WanCameraEmbedding": {"input": {"required": {"camera_pose": [["Static", "Pan Up", "Pan Down", "Pan Left", "Pan Right", "Zoom In", "Zoom Out", "Anti Clockwise (ACW)", "ClockWise (CW)"], {"default": "Static"}], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}]}, "optional": {"speed": ["FLOAT", {"default": 1.0, "min": 0, "max": 10.0, "step": 0.1}], "fx": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 1e-09}], "fy": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 1e-09}], "cx": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "cy": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["camera_pose", "width", "height", "length"], "optional": ["speed", "fx", "fy", "cx", "cy"]}, "output": ["WAN_CAMERA_EMBEDDING", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["camera_embedding", "width", "height", "length"], "name": "WanCameraEmbedding", "display_name": "WanCameraEmbedding", "description": "", "python_module": "comfy_extras.nodes_camera_trajectory", "category": "camera", "output_node": false}, "ReferenceLatent": {"input": {"required": {"conditioning": ["CONDITIONING"]}, "optional": {"latent": ["LATENT"]}}, "input_order": {"required": ["conditioning"], "optional": ["latent"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ReferenceLatent", "display_name": "ReferenceLatent", "description": "This node sets the guiding latent for an edit model. If the model supports it you can chain multiple to set multiple reference images.", "python_module": "comfy_extras.nodes_edit_model", "category": "advanced/conditioning/edit_models", "output_node": false}, "TCFG": {"input": {"required": {"model": ["MODEL", {}]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "TCFG", "display_name": "Tangential Damping CFG", "description": "TCFG \u2013 Tangential Damping CFG (2503.18137)\n\nRefine the uncond (negative) to align with the cond (positive) for improving quality.", "python_module": "comfy_extras.nodes_tcfg", "category": "advanced/guidance", "output_node": false}, "InpaintCropImproved": {"input": {"required": {"image": ["IMAGE"], "downscale_algorithm": [["nearest", "bilinear", "bicubic", "lanczos", "box", "hamming"], {"default": "bilinear"}], "upscale_algorithm": [["nearest", "bilinear", "bicubic", "lanczos", "box", "hamming"], {"default": "bicubic"}], "preresize": ["BOOLEAN", {"default": false, "tooltip": "Resize the original image before processing."}], "preresize_mode": [["ensure minimum resolution", "ensure maximum resolution", "ensure minimum and maximum resolution"], {"default": "ensure minimum resolution"}], "preresize_min_width": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "preresize_min_height": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "preresize_max_width": ["INT", {"default": 16384, "min": 0, "max": 16384, "step": 1}], "preresize_max_height": ["INT", {"default": 16384, "min": 0, "max": 16384, "step": 1}], "mask_fill_holes": ["BOOLEAN", {"default": true, "tooltip": "Mark as masked any areas fully enclosed by mask."}], "mask_expand_pixels": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1, "tooltip": "Expand the mask by a certain amount of pixels before processing."}], "mask_invert": ["BOOLEAN", {"default": false, "tooltip": "Invert mask so that anything masked will be kept."}], "mask_blend_pixels": ["INT", {"default": 32, "min": 0, "max": 64, "step": 1, "tooltip": "How many pixels to blend into the original image."}], "mask_hipass_filter": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.01, "tooltip": "Ignore mask values lower than this value."}], "extend_for_outpainting": ["BOOLEAN", {"default": false, "tooltip": "Extend the image for outpainting."}], "extend_up_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "extend_down_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "extend_left_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "extend_right_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "context_from_mask_extend_factor": ["FLOAT", {"default": 1.2, "min": 1.0, "max": 100.0, "step": 0.01, "tooltip": "Grow the context area from the mask by a certain factor in every direction. For example, 1.5 grabs extra 50% up, down, left, and right as context."}], "output_resize_to_target_size": ["BOOLEAN", {"default": true, "tooltip": "Force a specific resolution for sampling."}], "output_target_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 1}], "output_target_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 1}], "output_padding": [["0", "8", "16", "32", "64", "128", "256", "512"], {"default": "32"}]}, "optional": {"mask": ["MASK"], "optional_context_mask": ["MASK"]}}, "input_order": {"required": ["image", "downscale_algorithm", "upscale_algorithm", "preresize", "preresize_mode", "preresize_min_width", "preresize_min_height", "preresize_max_width", "preresize_max_height", "mask_fill_holes", "mask_expand_pixels", "mask_invert", "mask_blend_pixels", "mask_hipass_filter", "extend_for_outpainting", "extend_up_factor", "extend_down_factor", "extend_left_factor", "extend_right_factor", "context_from_mask_extend_factor", "output_resize_to_target_size", "output_target_width", "output_target_height", "output_padding"], "optional": ["mask", "optional_context_mask"]}, "output": ["STITCHER", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["stitcher", "cropped_image", "cropped_mask"], "name": "InpaintCropImproved", "display_name": "\u2702\ufe0f Inpaint Crop (Improved)", "description": "Crops an image around a mask for inpainting, the optional context mask defines an extra area to keep for the context.", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "InpaintStitchImproved": {"input": {"required": {"stitcher": ["STITCHER"], "inpainted_image": ["IMAGE"]}}, "input_order": {"required": ["stitcher", "inpainted_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "InpaintStitchImproved", "display_name": "\u2702\ufe0f Inpaint Stitch (Improved)", "description": "Stitches an image cropped with Inpaint Crop back into the original image", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "InpaintCrop": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "context_expand_pixels": ["INT", {"default": 20, "min": 0, "max": 16384, "step": 1}], "context_expand_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 100.0, "step": 0.01}], "fill_mask_holes": ["BOOLEAN", {"default": true}], "blur_mask_pixels": ["FLOAT", {"default": 16.0, "min": 0.0, "max": 256.0, "step": 0.1}], "invert_mask": ["BOOLEAN", {"default": false}], "blend_pixels": ["FLOAT", {"default": 16.0, "min": 0.0, "max": 32.0, "step": 0.1}], "rescale_algorithm": [["nearest", "bilinear", "bicubic", "bislerp", "lanczos", "box", "hamming"], {"default": "bicubic"}], "mode": [["ranged size", "forced size", "free size"], {"default": "ranged size"}], "force_width": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "force_height": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "rescale_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "min_width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "min_height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "max_width": ["INT", {"default": 768, "min": 0, "max": 16384, "step": 1}], "max_height": ["INT", {"default": 768, "min": 0, "max": 16384, "step": 1}], "padding": [[8, 16, 32, 64, 128, 256, 512], {"default": 32}]}, "optional": {"optional_context_mask": ["MASK"]}}, "input_order": {"required": ["image", "mask", "context_expand_pixels", "context_expand_factor", "fill_mask_holes", "blur_mask_pixels", "invert_mask", "blend_pixels", "rescale_algorithm", "mode", "force_width", "force_height", "rescale_factor", "min_width", "min_height", "max_width", "max_height", "padding"], "optional": ["optional_context_mask"]}, "output": ["STITCH", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["stitch", "cropped_image", "cropped_mask"], "name": "InpaintCrop", "display_name": "(OLD \ud83d\udc80, use the new \u2702\ufe0f Inpaint Crop node)", "description": "", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "InpaintStitch": {"input": {"required": {"stitch": ["STITCH"], "inpainted_image": ["IMAGE"], "rescale_algorithm": [["nearest", "bilinear", "bicubic", "bislerp", "lanczos", "box", "hamming"], {"default": "bislerp"}]}}, "input_order": {"required": ["stitch", "inpainted_image", "rescale_algorithm"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "InpaintStitch", "display_name": "(OLD \ud83d\udc80, use the new \u2702\ufe0f Inpaint Stitch node)", "description": "", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "InpaintExtendOutpaint": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "mode": [["factors", "pixels"], {"default": "factors"}], "expand_up_pixels": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "expand_up_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 100.0, "step": 0.01}], "expand_down_pixels": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "expand_down_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 100.0, "step": 0.01}], "expand_left_pixels": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "expand_left_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 100.0, "step": 0.01}], "expand_right_pixels": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "expand_right_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 100.0, "step": 0.01}]}, "optional": {"optional_context_mask": ["MASK"]}}, "input_order": {"required": ["image", "mask", "mode", "expand_up_pixels", "expand_up_factor", "expand_down_pixels", "expand_down_factor", "expand_left_pixels", "expand_left_factor", "expand_right_pixels", "expand_right_factor"], "optional": ["optional_context_mask"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "context_mask"], "name": "InpaintExtendOutpaint", "display_name": "(OLD \ud83d\udc80 use Crop instead) Extend Image for Outpainting", "description": "", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "InpaintResize": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "rescale_algorithm": [["nearest", "bilinear", "bicubic", "bislerp", "lanczos", "box", "hamming"], {"default": "bicubic"}], "mode": [["ensure minimum size", "factor"], {"default": "ensure minimum size"}], "min_width": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "min_height": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "rescale_factor": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}, "optional": {"optional_context_mask": ["MASK"]}}, "input_order": {"required": ["image", "mask", "rescale_algorithm", "mode", "min_width", "min_height", "rescale_factor"], "optional": ["optional_context_mask"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "context_mask"], "name": "InpaintResize", "display_name": "(OLD \ud83d\udc80 use Crop instead) Resize Image Before Inpainting", "description": "", "python_module": "custom_nodes.comfyui-inpaint-cropandstitch", "category": "inpaint", "output_node": false}, "easy showLoaderSettingsNames": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["pipe"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["ckpt_name", "vae_name", "lora_name"], "name": "easy showLoaderSettingsNames", "display_name": "Show Loader Settings Names", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Util", "output_node": true}, "easy sliderControl": {"input": {"required": {"mode": [["ipadapter layer weights"]], "model_type": [["sdxl", "sd1"]]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mode", "model_type"], "hidden": ["prompt", "my_unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["layer_weights"], "name": "easy sliderControl", "display_name": "Easy Slider Control", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Util", "output_node": false}, "easy ckptNames": {"input": {"required": {"ckpt_name": [[]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["*"], "output_is_list": [false], "output_name": ["ckpt_name"], "name": "easy ckptNames", "display_name": "Ckpt Names", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Util", "output_node": false}, "easy controlnetNames": {"input": {"required": {"controlnet_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}}, "input_order": {"required": ["controlnet_name"]}, "output": ["*"], "output_is_list": [false], "output_name": ["controlnet_name"], "name": "easy controlnetNames", "display_name": "ControlNet Names", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Util", "output_node": false}, "easy loraNames": {"input": {"required": {"lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]]}}, "input_order": {"required": ["lora_name"]}, "output": ["*"], "output_is_list": [false], "output_name": ["lora_name"], "name": "easy loraNames", "display_name": "Lora Names", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Util", "output_node": false}, "easy seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "easy seed", "display_name": "EasySeed", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Seed", "output_node": false}, "easy seedList": {"input": {"required": {"min_num": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "max_num": ["INT", {"default": 1125899906842624, "min": 0}], "method": [["random", "increment", "decrement"], {"default": "random"}], "total": ["INT", {"default": 1, "min": 1, "max": 100000}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["min_num", "max_num", "method", "total", "seed"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["seed", "total"], "name": "easy seedList", "display_name": "EasySeedList", "description": "Random number seed that can be used in a for loop, by connecting index and easy indexAny node to realize different seed values in the loop.", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Seed", "output_node": false}, "easy globalSeed": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "mode": ["BOOLEAN", {"default": true, "label_on": "control_before_generate", "label_off": "control_after_generate"}], "action": [["fixed", "increment", "decrement", "randomize", "increment for each node", "decrement for each node", "randomize for each node"]], "last_seed": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "mode", "action", "last_seed"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy globalSeed", "display_name": "EasyGlobalSeed", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Seed", "output_node": true}, "easy positive": {"input": {"required": {"positive": ["STRING", {"default": "", "multiline": true, "placeholder": "Positive"}]}}, "input_order": {"required": ["positive"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["positive"], "name": "easy positive", "display_name": "Positive", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy negative": {"input": {"required": {"negative": ["STRING", {"default": "", "multiline": true, "placeholder": "Negative"}]}}, "input_order": {"required": ["negative"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["negative"], "name": "easy negative", "display_name": "Negative", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy wildcards": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false, "placeholder": "(Support wildcard)"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text", "__example__"]], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "multiline_mode": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["text", "Select to add LoRA", "Select to add Wildcard", "seed", "multiline_mode"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [true, true], "output_name": ["text", "populated_text"], "name": "easy wildcards", "display_name": "Wildcards", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy wildcardsMatrix": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false, "placeholder": "(Support Lora Block Weight and wildcard)"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text", "__example__"]], "offset": ["INT", {"default": 0, "min": 0, "step": 1, "control_after_generate": true}]}, "optional": {"output_limit": ["INT", {"default": 1, "min": -1, "step": 1, "tooltip": "Output All Probilities"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["text", "Select to add LoRA", "Select to add Wildcard", "offset"], "optional": ["output_limit"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING", "INT", "INT"], "output_is_list": [true, false, true], "output_name": ["populated_text", "total", "factors"], "name": "easy wildcardsMatrix", "display_name": "Wildcards Matrix", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy prompt": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "placeholder": "Prompt"}], "prefix": [["Select the prefix add to the text", "Detailed photo of", "Amateur photo of", "Flicker 2008 photo of", "Fantastic artwork of", "Vintage photograph of", "Unreal 5 render of", "Surrealist painting of", "Professional advertising design of"], {"default": "Select the prefix add to the text"}], "subject": [["\ud83d\udc64Select the subject add to the text", "a man", "a woman", "a young man", "a young woman", "a handsome man", "a beautiful woman", "a monster", "a toy", "a product", "a buddha", "a dog", "a cat"], {"default": "\ud83d\udc64Select the subject add to the text"}], "action": [["\ud83c\udfacSelect the action add to the text", "looking at viewer", "looking away", "looking up", "looking down", "looking back", "open mouth", "half-closed mouth", "closed mouth", "open eyes", "half-closed eyes", "closed eyes", "wink", "standing", "sitting", "lying", "walking", "running", "adjusting hair", "waving", "hand on hip", "crossed arms", "smile", "sad", "angry", "sleepy", "tired", "expressionless"], {"default": "\ud83c\udfacSelect the action add to the text"}], "clothes": [["\ud83d\udc5aSelect the clothes add to the text", "underwear", "clothed", "casual", "dress", "swimsuit", "uniform", "bikini", "one-piece swimsuit", "shirt", "blouse", "sweater", "hoodie", "jeans", "pants", "shorts", "skirt", "vest", "coat", "trenchoat", "jacket", "short dress", "long dress", "off-shoulder", "backless", "hairbow", "hair ribbon", "hair tie", "hairband", "cap", "beanie", "bucket hat", "sun hat", "straw hat", "rice hat", "witch hat", "crown", "chain necklace", "tooth necklace", "choker", "pendant", "bracelet", "watch", "ring", "earring", "anklet", "belt", "scarf", "gloves", "mittens", "socks", "stockings", "tights", "leggings", "boots", "sneakers", "heels", "sandals", "flip-flops", "slippers", "loafers", "mules", "oxfords", "brogues", "derbies", "monk shoes", "chelsea boots", "combat boots", "riding boots", "rain boots", "wedge heels", "platform heels", "stilettos", "block heels", "kitten heels", "moccasins", "espadrilles", "pumps", "flats", "ballet flats", "mary janes", "slingbacks", "peep-toe", "mule sandals", "gladiator sandals", "thong sandals", "slide sandals", "espadrille sandals", "wedge sandals", "platform sandals", "ankle boots", "knee-high boots", "over-the-knee boots", "thigh-high boots", "wellington boots", "chukka boots", "desert boots", "chelsea boots", "hiking boots", "work boots", "snow boots", "rain boots", "riding boots", "cowboy boots", "combat boots", "biker boots", "duck boots", "military boots", "western boots", "ankle strap heels", "block heels", "chunky heels", "cone heels", "kitten heels", "platform heels", "pumps", "slingback heels", "stiletto heels", "wedge heels", "mules", "slingbacks", "slides", "thong sandals", "gladiator sandals", "espadrilles", "wedge sandals", "platform sandals", "ankle boots", "knee-high boots", "over-the-knee boots", "thigh-high boots", "wellington boots", "chukka boots", "desert boots", "chelsea boots", "hiking boots", "work boots", "snow boots", "rain boots", "riding boots", "cowboy boots", "combat boots", "biker boots", "duck boots", "military boots", "western boots", "ankle strap heels", "block heels"], {"default": "\ud83d\udc5aSelect the clothes add to the text"}], "environment": [["\u2600\ufe0fSelect the illumination environment add to the text", "sunshine from window", "neon night, city", "sunset over sea", "golden time", "sci-fi RGB glowing, cyberpunk", "natural lighting", "warm atmosphere, at home, bedroom", "magic lit", "evil, gothic, in a cave", "light and shadow", "shadow from window", "soft studio lighting", "home atmosphere, cozy bedroom illumination", "neon, Wong Kar-wai, warm", "moonlight through curtains", "stormy sky lighting", "underwater glow, deep sea", "foggy forest at dawn", "golden hour in a meadow", "rainbow reflections, neon", "cozy candlelight", "apocalyptic, smoky atmosphere", "red glow, emergency lights", "mystical glow, enchanted forest", "campfire light", "harsh, industrial lighting", "sunrise in the mountains", "evening glow in the desert", "moonlight in a dark alley", "golden glow at a fairground", "midnight in the forest", "purple and pink hues at twilight", "foggy morning, muted light", "candle-lit room, rustic vibe", "fluorescent office lighting", "lightning flash in storm", "night, cozy warm light from fireplace", "ethereal glow, magical forest", "dusky evening on a beach", "afternoon light filtering through trees", "blue neon light, urban street", "red and blue police lights in rain", "aurora borealis glow, arctic landscape", "sunrise through foggy mountains", "golden hour on a city skyline", "mysterious twilight, heavy mist", "early morning rays, forest clearing", "colorful lantern light at festival", "soft glow through stained glass", "harsh spotlight in dark room", "mellow evening glow on a lake", "crystal reflections in a cave", "vibrant autumn lighting in a forest", "gentle snowfall at dusk", "hazy light of a winter morning", "soft, diffused foggy glow", "underwater luminescence", "rain-soaked reflections in city lights", "golden sunlight streaming through trees", "fireflies lighting up a summer night", "glowing embers from a forge", "dim candlelight in a gothic castle", "midnight sky with bright starlight", "warm sunset in a rural village", "flickering light in a haunted house", "desert sunset with mirage-like glow", "golden beams piercing through storm clouds"], {"default": "\u2600\ufe0fSelect the illumination environment add to the text"}], "background": [["\ud83c\udf9e\ufe0fSelect the background add to the text", "cars and people", "a cozy bed and a lamp", "a forest clearing with mist", "a bustling marketplace", "a quiet beach at dusk", "an old, cobblestone street", "a futuristic cityscape", "a tranquil lake with mountains", "a mysterious cave entrance", "bookshelves and plants in the background", "an ancient temple in ruins", "tall skyscrapers and neon signs", "a starry sky over a desert", "a bustling caf\u00e9", "rolling hills and farmland", "a modern living room with a fireplace", "an abandoned warehouse", "a picturesque mountain range", "a starry night sky", "the interior of a futuristic spaceship", "the cluttered workshop of an inventor", "the glowing embers of a bonfire", "a misty lake surrounded by trees", "an ornate palace hall", "a busy street market", "a vast desert landscape", "a peaceful library corner", "bustling train station", "a mystical, enchanted forest", "an underwater reef with colorful fish", "a quiet rural village", "a sandy beach with palm trees", "a vibrant coral reef, teeming with life", "snow-capped mountains in distance", "a stormy ocean, waves crashing", "a rustic barn in open fields", "a futuristic lab with glowing screens", "a dark, abandoned castle", "the ruins of an ancient civilization", "a bustling urban street in rain", "an elegant grand ballroom", "a sprawling field of wildflowers", "a dense jungle with sunlight filtering through", "a dimly lit, vintage bar", "an ice cave with sparkling crystals", "a serene riverbank at sunset", "a narrow alley with graffiti walls", "a peaceful zen garden with koi pond", "a high-tech control room", "a quiet mountain village at dawn", "a lighthouse on a rocky coast", "a rainy street with flickering lights", "a frozen lake with ice formations", "an abandoned theme park", "a small fishing village on a pier", "rolling sand dunes in a desert", "a dense forest with towering redwoods", "a snowy cabin in the mountains", "a mystical cave with bioluminescent plants", "a castle courtyard under moonlight", "a bustling open-air night market", "an old train station with steam", "a tranquil waterfall surrounded by trees", "a vineyard in the countryside", "a quaint medieval village", "a bustling harbor with boats", "a high-tech futuristic mall", "a lush tropical rainforest"], {"default": "\ud83c\udf9e\ufe0fSelect the background add to the text"}], "nsfw": [["\ud83d\udd1eSelect the nsfw add to the text", "nude", "breast", "small breast", "middle breast", "large breast", "nipples", "clothes lift", "pussy juice trail", "pussy juice puddle", "small testicles", "medium testicles", "large testicles", "disembodied penis", "cum on body", "cum inside", "cum outside", "fingering", "handjob", "fellatio", "licking penis", "paizuri", "doggystyle", "cowgirl", "reversed cowgirl", "piledriver", "suspended congress", "full nelson"], {"default": "\ud83d\udd1e\ufe0fSelect the nsfw add to the text"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["text", "prefix", "subject", "action", "clothes", "environment", "background", "nsfw"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy prompt", "display_name": "Prompt", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptList": {"input": {"required": {"prompt_1": ["STRING", {"multiline": true, "default": ""}], "prompt_2": ["STRING", {"multiline": true, "default": ""}], "prompt_3": ["STRING", {"multiline": true, "default": ""}], "prompt_4": ["STRING", {"multiline": true, "default": ""}], "prompt_5": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"optional_prompt_list": ["LIST"]}}, "input_order": {"required": ["prompt_1", "prompt_2", "prompt_3", "prompt_4", "prompt_5"], "optional": ["optional_prompt_list"]}, "output": ["LIST", "STRING"], "output_is_list": [false, true], "output_name": ["prompt_list", "prompt_strings"], "name": "easy promptList", "display_name": "PromptList", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptLine": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "text"}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}, "hidden": {"workflow_prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["prompt", "start_index", "max_rows"], "hidden": ["workflow_prompt", "my_unique_id"]}, "output": ["STRING", "*"], "output_is_list": [true, true], "output_name": ["STRING", "COMBO"], "name": "easy promptLine", "display_name": "PromptLine", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptConcat": {"input": {"required": {}, "optional": {"prompt1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "prompt2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["prompt1", "prompt2", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy promptConcat", "display_name": "PromptConcat", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptReplace": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}, "optional": {"find1": ["STRING", {"multiline": false, "default": ""}], "replace1": ["STRING", {"multiline": false, "default": ""}], "find2": ["STRING", {"multiline": false, "default": ""}], "replace2": ["STRING", {"multiline": false, "default": ""}], "find3": ["STRING", {"multiline": false, "default": ""}], "replace3": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["prompt"], "optional": ["find1", "replace1", "find2", "replace2", "find3", "replace3"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy promptReplace", "display_name": "PromptReplace", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy stylesSelector": {"input": {"required": {"styles": [["fooocus_styles"], {"default": "fooocus_styles"}]}, "optional": {"positive": ["STRING", {"forceInput": true}], "negative": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["styles"], "optional": ["positive", "negative"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "easy stylesSelector", "display_name": "Styles Selector", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy portraitMaster": {"input": {"required": {"shot": [["-", "Head portrait", "Head and shoulders portrait", "Half-length portrait", "Full-length portrait", "Face", "Portrait", "Full body", "Close-up"], {"key": "shot_list"}], "shot_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "gender": [["-", "Man", "Woman"], {"default": "Woman", "key": "gender_list"}], "age": ["INT", {"default": 30, "min": 18, "max": 90, "step": 1, "display": "slider"}], "nationality_1": [["-", "Afghan", "Albanian", "Algerian", "Andorran", "Angolan", "Antiguans Barbudans", "Argentine", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian Herzegovinian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdian", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kiribati", "North Korean", "South Korean", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourgish", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivan", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monegasque", "Mongolian", "Montenegrin", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Palestinian", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "South Sudanese", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Tajikistani", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian Tobagonian", "Tunisian", "Turkish", "Turkmen", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemeni", "Zambian", "Zimbabwean"], {"default": "Chinese", "key": "nationality_list"}], "nationality_2": [["-", "Afghan", "Albanian", "Algerian", "Andorran", "Angolan", "Antiguans Barbudans", "Argentine", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian Herzegovinian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdian", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kiribati", "North Korean", "South Korean", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourgish", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivan", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monegasque", "Mongolian", "Montenegrin", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Palestinian", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "South Sudanese", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Tajikistani", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian Tobagonian", "Tunisian", "Turkish", "Turkmen", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemeni", "Zambian", "Zimbabwean"], {"key": "nationality_list"}], "nationality_mix": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "body_type": [["-", "Underweight", "Normal weight", "Overweight", "Obese"], {"key": "body_type_list"}], "body_type_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "model_pose": [["-", "Power Pose", "Walking Pose", "The Over-the-Shoulder Look", "S-curve Pose", "Sitting Pose", "Close-Up Beauty Shot Pose", "Leaning Pose", "Arms Up Pose", "Casual Stroll Pose", "Headshot Pose", "Sitting Cross-Legged Pose", "Back Arch Pose", "Hand-on-Hip Pose", "Gazing into the Distance Pose", "Candid Laugh Pose", "Dynamic Action Pose", "Contrapposto Pose", "High Fashion Pose"], {"key": "model_pose_list"}], "eyes_color": [["-", "Brown", "Blue", "Green", "Hazel", "Gray", "Amber", "Red", "Violet"], {"key": "eyes_color_list"}], "facial_expression": [["-", "Happy", "Sad", "Angry", "Surprised", "Fearful", "Disgusted", "Contemptuous", "Excited", "Nervous", "Confused", "Amused", "Content", "Disappointed", "Bored", "Relieved", "In love", "Shy", "Envious", "Proud", "Cautious", "Serious", "Serene", "Peaceful", "Calm"], {"key": "face_expression_list"}], "facial_expression_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "face_shape": [["-", "Oval", "Round", "Square", "Heart-shaped", "Long", "Rectangle", "Triangle", "Inverted Triangle", "Pear-shaped", "Oblong", "Square Round", "Square Oval"], {"key": "face_shape_list"}], "face_shape_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "facial_asymmetry": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "hair_style": [["-", "Asymmetrical cut", "Blunt cut", "Bob cut", "Braided bob", "Buzz cut", "Choppy cut", "Curly bob", "Curtain bangs", "Faux hawk", "Feathered cut", "French bob", "Layered cut", "Long bob", "Mohawk", "Pixie cut", "Shag cut", "Side-swept bangs", "Textured cut", "Undercut", "Wavy bob", "Faux hawk short pixie", "Brave short haircut with shaved sides", "Tapered haricut wuth shaved side", "Stacked bob", "Lemonade braids", "Middle part ponytails", "Stitch braids", "Deep side part", "French braids", "Box braids", "Two dutch braids", "Wavy cut with curtains bangs", "Right side shaved", "Sweeping pixie", "Smooth lob", "Long pixie", "Sideswept pixie", "Italian bob", "Shullet"], {"key": "hair_style_list"}], "hair_color": [["-", "Black", "Brown", "Blonde", "Red", "Auburn", "Chestnut", "Gray", "White", "Salt and pepper"], {"key": "hair_color_list"}], "disheveled": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "beard": [["-", "Stubble Beard", "Goatee", "Full Beard", "Van Dyke Beard", "Soul Patch", "Garibaldi Beard", "Mutton Chops", "Circle Beard", "Corporate Beard", "Balbo Beard", "Ducktail Beard", "Chinstrap Beard", "Anchor Beard", "Chevron Mustache", "Horseshoe Mustache", "Handlebar Mustache", "Imperial Mustache", "Pencil Mustache", "Friendly Mutton Chops", "Zappa Mustache"], {"key": "beard_list"}], "skin_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_pores": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "dimples": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "freckles": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "moles": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_imperfections": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_acne": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "tanned_skin": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "eyes_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "iris_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "circular_iris": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "circular_pupil": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "light_type": [["-", "Natural sunlight", "Soft ambient light", "Harsh sunlight", "Overcast sky", "Sunset glow", "Sunrise warmth", "Twilight hues", "Candlelight", "Incandescent lighting", "Fluorescent lighting", "Moonlight", "Dappled sunlight", "Backlit silhouette", "Spotlight", "Rim lighting", "Firelight", "City streetlights", "Studio lighting", "Lantern light", "Tungsten lighting", "Cloudy day diffused light", "Skylight", "Golden hour light", "Blue hour light", "Flash photography", "Stage lighting", "Neon lights", "Torchlight", "Softbox lighting", "Rim light", "Lightning", "Abstract light patterns"], {"key": "light_type_list"}], "light_direction": [["-", "top", "bottom", "right", "left", "front", "rear", "top-right", "top-left", "bottom-right", "bottom-left"], {"key": "light_direction_list"}], "light_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "photorealism_improvement": [["enable", "disable"]], "prompt_start": ["STRING", {"multiline": true, "default": "raw photo, (realistic:1.5)"}], "prompt_additional": ["STRING", {"multiline": true, "default": ""}], "prompt_end": ["STRING", {"multiline": true, "default": ""}], "negative_prompt": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["shot", "shot_weight", "gender", "age", "nationality_1", "nationality_2", "nationality_mix", "body_type", "body_type_weight", "model_pose", "eyes_color", "facial_expression", "facial_expression_weight", "face_shape", "face_shape_weight", "facial_asymmetry", "hair_style", "hair_color", "disheveled", "beard", "skin_details", "skin_pores", "dimples", "freckles", "moles", "skin_imperfections", "skin_acne", "tanned_skin", "eyes_details", "iris_details", "circular_iris", "circular_pupil", "light_type", "light_direction", "light_weight", "photorealism_improvement", "prompt_start", "prompt_additional", "prompt_end", "negative_prompt"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "easy portraitMaster", "display_name": "Portrait Master", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Prompt", "output_node": false}, "easy fullLoader": {"input": {"required": {"ckpt_name": [["None"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "a1111_prompt_style": ["BOOLEAN", {"default": false}]}, "hidden": {"video_length": "INT", "prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "batch_size"], "optional": ["model_override", "clip_override", "vae_override", "optional_lora_stack", "optional_controlnet_stack", "a1111_prompt_style"], "hidden": ["video_length", "prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE", "CLIP", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["pipe", "model", "vae", "clip", "positive", "negative", "latent"], "name": "easy fullLoader", "display_name": "EasyLoader (Full)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy a1111Loader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "a1111_prompt_style": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack", "a1111_prompt_style"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy a1111Loader", "display_name": "EasyLoader (A1111)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy comfyLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy comfyLoader", "display_name": "EasyLoader (Comfy)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy svdLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "clip_name": [["None", "EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "init_image": ["IMAGE"], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 576"}], "empty_latent_width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 14, "min": 1, "max": 4096}], "motion_bucket_id": ["INT", {"default": 127, "min": 1, "max": 1023}], "fps": ["INT", {"default": 6, "min": 1, "max": 1024}], "augmentation_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"optional_positive": ["STRING", {"default": "", "multiline": true}], "optional_negative": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_name", "init_image", "resolution", "empty_latent_width", "empty_latent_height", "video_frames", "motion_bucket_id", "fps", "augmentation_level"], "optional": ["optional_positive", "optional_negative"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy svdLoader", "display_name": "EasyLoader (SVD)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy sv3dLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "init_image": ["IMAGE"], "empty_latent_width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 21, "min": 1, "max": 4096}], "interp_easing": [["linear", "ease_in", "ease_out", "ease_in_out"], {"default": "linear"}], "easing_mode": [["azimuth", "elevation", "custom"], {"default": "azimuth"}]}, "optional": {"scheduler": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "init_image", "empty_latent_width", "empty_latent_height", "batch_size", "interp_easing", "easing_mode"], "optional": ["scheduler"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "STRING"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "interp_log"], "name": "easy sv3dLoader", "display_name": "EasyLoader (SV3D)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy zero123Loader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "init_image": ["IMAGE"], "empty_latent_width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "init_image", "empty_latent_width", "empty_latent_height", "batch_size", "elevation", "azimuth"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy zero123Loader", "display_name": "EasyLoader (Zero123)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy cascadeLoader": {"input": {"required": {"stage_c": [[]], "stage_b": [[]], "stage_a": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "clip_name": [["None", "EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "compression": ["INT", {"default": 42, "min": 32, "max": 64, "step": 1}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["stage_c", "stage_b", "stage_a", "clip_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "compression", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "LATENT", "VAE"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model_c", "latent_c", "vae"], "name": "easy cascadeLoader", "display_name": "EasyCascadeLoader", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy kolorsLoader": {"input": {"required": {"unet_name": [[]], "vae_name": [["FLUX1/ae.safetensors", "ae.safetensors"]], "chatglm3_name": [[]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 576"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"model_override": ["MODEL"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "auto_clean_gpu": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["unet_name", "vae_name", "chatglm3_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["model_override", "vae_override", "optional_lora_stack", "auto_clean_gpu"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy kolorsLoader", "display_name": "EasyLoader (Kolors)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy fluxLoader": {"input": {"required": {"ckpt_name": [["None"]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "batch_size"], "optional": ["model_override", "clip_override", "vae_override", "optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy fluxLoader", "display_name": "EasyLoader (Flux)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy hunyuanDiTLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy hunyuanDiTLoader", "display_name": "EasyLoader (HunyuanDiT)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy pixArtLoader": {"input": {"required": {"ckpt_name": [[]], "model_name": [["PixArtMS_XL_2", "PixArtMS_Sigma_XL_2", "PixArtMS_Sigma_XL_2_900M", "PixArtMS_Sigma_XL_2_2K", "PixArt_XL_2", "ControlPixArtHalf", "ControlPixArtMSHalf"]], "vae_name": [["FLUX1/ae.safetensors", "ae.safetensors"]], "t5_type": [["sd3"]], "clip_name": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "padding": ["INT", {"default": 1, "min": 1, "max": 300}], "t5_name": [[]], "device": [["auto", "cpu", "gpu"], {"default": "cpu"}], "dtype": [["default", "auto (comfy)", "FP32", "FP16", "BF16"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "ratio": [["custom", "0.25", "0.26", "0.27", "0.28", "0.32", "0.33", "0.35", "0.40", "0.42", "0.48", "0.50", "0.52", "0.57", "0.60", "0.68", "0.72", "0.78", "0.82", "0.88", "0.94", "1.00", "1.07", "1.13", "1.21", "1.29", "1.38", "1.46", "1.67", "1.75", "2.00", "2.09", "2.40", "2.50", "2.89", "3.00", "3.11", "3.62", "3.75", "3.88", "4.00"], {"default": "1.00"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "model_name", "vae_name", "t5_type", "clip_name", "padding", "t5_name", "device", "dtype", "lora_name", "lora_model_strength", "ratio", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy pixArtLoader", "display_name": "EasyLoader (PixArt)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy mochiLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"], {"default": "mochi_vae.safetensors"}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "width x height (custom)"}], "empty_latent_width": ["INT", {"default": 848, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 480, "min": 64, "max": 16384, "step": 8}], "length": ["INT", {"default": 25, "min": 7, "max": 16384, "step": 6}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "positive", "negative", "resolution", "empty_latent_width", "empty_latent_height", "length", "batch_size"], "optional": ["model_override", "clip_override", "vae_override"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy mochiLoader", "display_name": "EasyLoader (Mochi)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy loraStack": {"input": {"required": {"toggle": ["BOOLEAN", {"label_on": "enabled", "label_off": "disabled"}], "mode": [["simple", "advanced"]], "num_loras": ["INT", {"default": 1, "min": 1, "max": 10}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "lora_1_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_1_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_2_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_3_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_4_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_5_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_6_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_7_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_8_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_9_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"default": "None"}], "lora_10_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["toggle", "mode", "num_loras"], "optional": ["optional_lora_stack", "lora_1_name", "lora_1_strength", "lora_1_model_strength", "lora_1_clip_strength", "lora_2_name", "lora_2_strength", "lora_2_model_strength", "lora_2_clip_strength", "lora_3_name", "lora_3_strength", "lora_3_model_strength", "lora_3_clip_strength", "lora_4_name", "lora_4_strength", "lora_4_model_strength", "lora_4_clip_strength", "lora_5_name", "lora_5_strength", "lora_5_model_strength", "lora_5_clip_strength", "lora_6_name", "lora_6_strength", "lora_6_model_strength", "lora_6_clip_strength", "lora_7_name", "lora_7_strength", "lora_7_model_strength", "lora_7_clip_strength", "lora_8_name", "lora_8_strength", "lora_8_model_strength", "lora_8_clip_strength", "lora_9_name", "lora_9_strength", "lora_9_model_strength", "lora_9_clip_strength", "lora_10_name", "lora_10_strength", "lora_10_model_strength", "lora_10_clip_strength"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["lora_stack"], "name": "easy loraStack", "display_name": "EasyLoraStack", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetStack": {"input": {"required": {"toggle": ["BOOLEAN", {"label_on": "enabled", "label_off": "disabled"}], "mode": [["simple", "advanced"]], "num_controlnet": ["INT", {"default": 1, "min": 1, "max": 3}]}, "optional": {"optional_controlnet_stack": ["CONTROL_NET_STACK"], "controlnet_1": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"], {"default": "None"}], "controlnet_1_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "controlnet_2": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"], {"default": "None"}], "controlnet_2_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_2": ["IMAGE"], "controlnet_3": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"], {"default": "None"}], "controlnet_3_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_3": ["IMAGE"]}}, "input_order": {"required": ["toggle", "mode", "num_controlnet"], "optional": ["optional_controlnet_stack", "controlnet_1", "controlnet_1_strength", "start_percent_1", "end_percent_1", "scale_soft_weight_1", "image_1", "controlnet_2", "controlnet_2_strength", "start_percent_2", "end_percent_2", "scale_soft_weight_2", "image_2", "controlnet_3", "controlnet_3_strength", "start_percent_3", "end_percent_3", "scale_soft_weight_3", "image_3"]}, "output": ["CONTROL_NET_STACK"], "output_is_list": [false], "output_name": ["controlnet_stack"], "name": "easy controlnetStack", "display_name": "EasyControlnetStack", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoader": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "scale_soft_weights"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoader", "display_name": "EasyControlnet", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoaderADV": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "start_percent", "end_percent", "scale_soft_weights"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoaderADV", "display_name": "EasyControlnet (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoader++": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "union_type": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "start_percent", "end_percent", "scale_soft_weights", "union_type"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoader++", "display_name": "EasyControlnet++", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy LLLiteLoader": {"input": {"required": {"model": ["MODEL"], "model_name": [[]], "cond_image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "steps": ["INT", {"default": 0, "min": 0, "max": 200, "step": 1}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "end_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["model", "model_name", "cond_image", "strength", "steps", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "easy LLLiteLoader", "display_name": "EasyLLLite", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Loaders", "output_node": false}, "easy loraStackApply": {"input": {"required": {"lora_stack": ["LORA_STACK"], "model": ["MODEL"]}, "optional": {"optional_clip": ["CLIP"]}}, "input_order": {"required": ["lora_stack", "model"], "optional": ["optional_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["model", "clip"], "name": "easy loraStackApply", "display_name": "Easy Apply LoraStack", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy controlnetStackApply": {"input": {"required": {"controlnet_stack": ["CONTROL_NET_STACK"], "pipe": ["PIPE_LINE"]}, "optional": {}}, "input_order": {"required": ["controlnet_stack", "pipe"], "optional": []}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy controlnetStackApply", "display_name": "Easy Apply CnetStack", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApply": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION", "FACEID", "FACEID PLUS - SD1.5 only", "FACEID PLUS KOLORS", "FACEID PLUS V2", "FACEID PORTRAIT (style transfer)", "FACEID PORTRAIT UNNORM - SDXL only (strong)"]], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}]}, "optional": {"attn_mask": ["MASK"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "start_at", "end_at", "cache_mode", "use_tiled"], "optional": ["attn_mask", "optional_ipadapter"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApply", "display_name": "Easy Apply IPAdapter", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyADV": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION", "FACEID", "FACEID PLUS - SD1.5 only", "FACEID PLUS KOLORS", "FACEID PLUS V2", "FACEID PORTRAIT (style transfer)", "FACEID PORTRAIT UNNORM - SDXL only (strong)"]], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}], "use_batch": ["BOOLEAN", {"default": false}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"], "layer_weights": ["STRING", {"default": "", "multiline": true, "placeholder": "Mad Scientist Layer Weights"}]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode", "use_tiled", "use_batch", "sharpening"], "optional": ["image_negative", "attn_mask", "clip_vision", "optional_ipadapter", "layer_weights"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApplyADV", "display_name": "Easy Apply IPAdapter (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyFaceIDKolors": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["FACEID PLUS KOLORS"], {"default": "FACEID PLUS KOLORS"}], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 0.8, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_kolors": ["FLOAT", {"default": 0.8, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}], "use_batch": ["BOOLEAN", {"default": false}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "weight_kolors", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode", "use_tiled", "use_batch", "sharpening"], "optional": ["image_negative", "attn_mask", "clip_vision", "optional_ipadapter"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApplyFaceIDKolors", "display_name": "Easy Apply IPAdapter (FaceID Kolors)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyEncoder": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "image1": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "num_embeds": ["INT", {"default": 2, "min": 1, "max": 4}]}, "optional": {"image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "mask1": ["MASK"], "weight1": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask2": ["MASK"], "weight2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask3": ["MASK"], "weight3": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask4": ["MASK"], "weight4": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_method": [["concat", "add", "subtract", "average", "norm average", "max", "min"]], "optional_ipadapter": ["IPADAPTER"], "pos_embeds": ["EMBEDS"], "neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["model", "clip_vision", "image1", "preset", "num_embeds"], "optional": ["image2", "image3", "image4", "mask1", "weight1", "mask2", "weight2", "mask3", "weight3", "mask4", "weight4", "combine_method", "optional_ipadapter", "pos_embeds", "neg_embeds"]}, "output": ["MODEL", "CLIP_VISION", "IPADAPTER", "EMBEDS", "EMBEDS"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "clip_vision", "ipadapter", "pos_embed", "neg_embed"], "name": "easy ipadapterApplyEncoder", "display_name": "Easy Apply IPAdapter (Encoder)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyEmbeds": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "ipadapter": ["IPADAPTER"], "pos_embed": ["EMBEDS"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"neg_embed": ["EMBEDS"], "attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "clip_vision", "ipadapter", "pos_embed", "weight", "weight_type", "start_at", "end_at", "embeds_scaling"], "optional": ["neg_embed", "attn_mask"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterApplyEmbeds", "display_name": "Easy Apply IPAdapter (Embeds)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyRegional": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "positive": ["STRING", {"default": "", "placeholder": "positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "negative", "multiline": true}], "image_weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 3.0, "step": 0.05}], "prompt_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask": ["MASK"], "optional_ipadapter_params": ["IPADAPTER_PARAMS"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "positive", "negative", "image_weight", "prompt_weight", "weight_type", "start_at", "end_at"], "optional": ["mask", "optional_ipadapter_params"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "IPADAPTER_PARAMS", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "ipadapter_params", "positive", "negative"], "name": "easy ipadapterApplyRegional", "display_name": "Easy Apply IPAdapter (Regional)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyFromParams": {"input": {"required": {"model": ["MODEL"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "ipadapter_params": ["IPADAPTER_PARAMS"], "combine_embeds": [["concat", "add", "subtract", "average", "norm average", "max", "min"]], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "insightface only"}]}, "optional": {"optional_ipadapter": ["IPADAPTER"], "image_negative": ["IMAGE"]}}, "input_order": {"required": ["model", "preset", "ipadapter_params", "combine_embeds", "embeds_scaling", "cache_mode"], "optional": ["optional_ipadapter", "image_negative"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterApplyFromParams", "display_name": "Easy Apply IPAdapter (From Params)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterStyleComposition": {"input": {"required": {"model": ["MODEL"], "image_style": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "weight_style": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_composition": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "expand_style": ["BOOLEAN", {"default": false}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"], {"default": "average"}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}]}, "optional": {"image_composition": ["IMAGE"], "image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image_style", "preset", "weight_style", "weight_composition", "expand_style", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode"], "optional": ["image_composition", "image_negative", "attn_mask", "clip_vision", "optional_ipadapter"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterStyleComposition", "display_name": "Easy Apply IPAdapter (StyleComposition)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy instantIDApply": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "instantid_file": [["ip-adapter.bin"]], "insightface": [["CPU", "CUDA", "ROCM"]], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]], "cn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cn_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"], "control_net": ["CONTROL_NET"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "instantid_file", "insightface", "control_net_name", "cn_strength", "cn_soft_weights", "weight", "start_at", "end_at", "noise"], "optional": ["image_kps", "mask", "control_net"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model", "positive", "negative"], "name": "easy instantIDApply", "display_name": "Easy Apply InstantID", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy instantIDApplyADV": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "instantid_file": [["ip-adapter.bin"]], "insightface": [["CPU", "CUDA", "ROCM"]], "control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]], "cn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cn_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"], "control_net": ["CONTROL_NET"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "instantid_file", "insightface", "control_net_name", "cn_strength", "cn_soft_weights", "weight", "start_at", "end_at", "noise"], "optional": ["image_kps", "mask", "control_net", "positive", "negative"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model", "positive", "negative"], "name": "easy instantIDApplyADV", "display_name": "Easy Apply InstantID (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy pulIDApply": {"input": {"required": {"model": ["MODEL"], "pulid_file": [["pulid_flux_v0.9.1.safetensors"]], "insightface": [["CPU", "CUDA", "ROCM"]], "image": ["IMAGE"], "method": [["fidelity", "style", "neutral"]], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 5.0, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "pulid_file", "insightface", "image", "method", "weight", "start_at", "end_at"], "optional": ["attn_mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy pulIDApply", "display_name": "Easy Apply PuLID", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy pulIDApplyADV": {"input": {"required": {"model": ["MODEL"], "pulid_file": [["pulid_flux_v0.9.1.safetensors"]], "insightface": [["CPU", "CUDA", "ROCM"]], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 5.0, "step": 0.05}], "projection": [["ortho_v2", "ortho", "none"], {"default": "ortho_v2"}], "fidelity": ["INT", {"default": 8, "min": 0, "max": 32, "step": 1}], "noise": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.1}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "pulid_file", "insightface", "image", "weight", "projection", "fidelity", "noise", "start_at", "end_at"], "optional": ["attn_mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy pulIDApplyADV", "display_name": "Easy Apply PuLID (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy styleAlignedBatchAlign": {"input": {"required": {"model": ["MODEL"], "share_norm": [["both", "group", "layer", "disabled"]], "share_attn": [["q+k", "q+k+v", "disabled"]], "scale": ["FLOAT", {"default": 1, "min": 0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["model", "share_norm", "share_attn", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "easy styleAlignedBatchAlign", "display_name": "Easy Apply StyleAlign", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy icLightApply": {"input": {"required": {"mode": [["Foreground", "Foreground&Background"]], "model": ["MODEL"], "image": ["IMAGE"], "vae": ["VAE"], "lighting": [["None", "Left Light", "Right Light", "Top Light", "Bottom Light", "Circle Light"], {"default": "None"}], "source": [["Use Background Image", "Use Flipped Background Image", "Left Light", "Right Light", "Top Light", "Bottom Light", "Ambient"], {"default": "Use Background Image"}], "remove_bg": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mode", "model", "image", "vae", "lighting", "source", "remove_bg"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["model", "lighting_image"], "name": "easy icLightApply", "display_name": "Easy Apply ICLight", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Adapter", "output_node": false}, "easy applyFooocusInpaint": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT"], "head": [["fooocus_inpaint_head"]], "patch": [["inpaint_v26 (1.32GB)", "inpaint_v25 (2.58GB)", "inpaint (1.32GB)"]]}}, "input_order": {"required": ["model", "latent", "head", "patch"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy applyFooocusInpaint", "display_name": "Easy Apply Fooocus Inpaint", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyBrushNet": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "brushnet": [[]], "dtype": [["float16", "bfloat16", "float32", "float64"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}]}}, "input_order": {"required": ["pipe", "image", "mask", "brushnet", "dtype", "scale", "start_at", "end_at"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyBrushNet", "display_name": "Easy Apply BrushNet", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyPowerPaint": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "powerpaint_model": [[]], "powerpaint_clip": [[]], "dtype": [["float16", "bfloat16", "float32", "float64"]], "fitting": ["FLOAT", {"default": 1.0, "min": 0.3, "max": 1.0}], "function": [["text guided", "shape guided", "object removal", "context aware", "image outpainting"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}], "save_memory": [["none", "auto", "max"]]}}, "input_order": {"required": ["pipe", "image", "mask", "powerpaint_model", "powerpaint_clip", "dtype", "fitting", "function", "scale", "start_at", "end_at", "save_memory"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyPowerPaint", "display_name": "Easy Apply PowerPaint", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyInpaint": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "inpaint_mode": [["normal", "fooocus_inpaint", "brushnet_random", "brushnet_segmentation", "powerpaint"]], "encode": [["none", "vae_encode_inpaint", "inpaint_model_conditioning", "different_diffusion"], {"default": "none"}], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "dtype": [["float16", "bfloat16", "float32", "float64"]], "fitting": ["FLOAT", {"default": 1.0, "min": 0.3, "max": 1.0}], "function": [["text guided", "shape guided", "object removal", "context aware", "image outpainting"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}]}, "optional": {"noise_mask": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["pipe", "image", "mask", "inpaint_mode", "encode", "grow_mask_by", "dtype", "fitting", "function", "scale", "start_at", "end_at"], "optional": ["noise_mask"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyInpaint", "display_name": "Easy Apply Inpaint", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Inpaint", "output_node": false}, "easy preSampling": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSampling", "display_name": "PreSampling", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingAdvanced": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"]], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "add_noise": [["enable (CPU)", "enable (GPU=A1111)", "disable"], {"default": "enable (CPU)"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "return_with_leftover_noise": [["disable", "enable"]]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "start_at_step", "end_at_step", "add_noise", "seed", "return_with_leftover_noise"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingAdvanced", "display_name": "PreSampling (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingNoiseIn": {"input": {"required": {"pipe": ["PIPE_LINE"], "factor": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"optional_noise_seed": ["INT", {"forceInput": true}], "optional_latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "factor", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["optional_noise_seed", "optional_latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingNoiseIn", "display_name": "PreSampling (NoiseIn)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingCustom": {"input": {"required": {"pipe": ["PIPE_LINE"], "guider": [["CFG", "DualCFG", "Basic", "IP2P+CFG", "IP2P+DualCFG", "IP2P+Basic"], {"default": "Basic"}], "cfg": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0}], "cfg_negative": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2", "inversed_euler"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "karrasADV", "exponentialADV", "polyExponential", "sdturbo", "vp", "alignYourSteps", "gits"]], "coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "beta_d": ["FLOAT", {"default": 19.9, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "beta_min": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "eps_s": ["FLOAT", {"default": 0.001, "min": 0.0, "max": 1.0, "step": 0.0001, "round": false}], "flip_sigmas": ["BOOLEAN", {"default": false}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "add_noise": [["enable (CPU)", "enable (GPU=A1111)", "disable"], {"default": "enable (CPU)"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"], "optional_sampler": ["SAMPLER"], "optional_sigmas": ["SIGMAS"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "guider", "cfg", "cfg_negative", "sampler_name", "scheduler", "coeff", "steps", "sigma_max", "sigma_min", "rho", "beta_d", "beta_min", "eps_s", "flip_sigmas", "denoise", "add_noise", "seed"], "optional": ["image_to_latent", "latent", "optional_sampler", "optional_sigmas"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingCustom", "display_name": "PreSampling (Custom)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingSdTurbo": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 1, "min": 1, "max": 10}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "upscale_ratio": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 16.0, "step": 0.01, "round": false}], "start_step": ["INT", {"default": 5, "min": 0, "max": 1000, "step": 1}], "end_step": ["INT", {"default": 15, "min": 0, "max": 1000, "step": 1}], "upscale_n_step": ["INT", {"default": 3, "min": 0, "max": 1000, "step": 1}], "unsharp_kernel_size": ["INT", {"default": 3, "min": 1, "max": 21, "step": 1}], "unsharp_sigma": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "unsharp_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "eta", "s_noise", "upscale_ratio", "start_step", "end_step", "upscale_n_step", "unsharp_kernel_size", "unsharp_sigma", "unsharp_strength", "seed"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingSdTurbo", "display_name": "PreSampling (SDTurbo)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingDynamicCFG": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "cfg_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "cfg_scale_min": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "cfg_mode", "cfg_scale_min", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingDynamicCFG", "display_name": "PreSampling (DynamicCFG)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingCascade": {"input": {"required": {"pipe": ["PIPE_LINE"], "encode_vae_name": [["None", "FLUX1/ae.safetensors", "ae.safetensors"]], "decode_vae_name": [["None", "FLUX1/ae.safetensors", "ae.safetensors"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"default": "euler_ancestral"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"default": "simple"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent_c": ["IMAGE"], "latent_c": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "encode_vae_name", "decode_vae_name", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent_c", "latent_c"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingCascade", "display_name": "PreSampling (Cascade)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingLayerDiffusion": {"input": {"required": {"pipe": ["PIPE_LINE"], "method": [["Attention Injection", "Conv Injection", "Everything", "Foreground", "Background"]], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"default": "euler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"], {"default": "normal"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image": ["IMAGE"], "blended_image": ["IMAGE"], "mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "method", "weight", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image", "blended_image", "mask"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingLayerDiffusion", "display_name": "PreSampling (LayerDiffuse)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingLayerDiffusionADDTL": {"input": {"required": {"pipe": ["PIPE_LINE"], "foreground_prompt": ["STRING", {"default": "", "placeholder": "Foreground Additional Prompt", "multiline": true}], "background_prompt": ["STRING", {"default": "", "placeholder": "Background Additional Prompt", "multiline": true}], "blended_prompt": ["STRING", {"default": "", "placeholder": "Blended Additional Prompt", "multiline": true}]}, "optional": {"optional_fg_cond": ["CONDITIONING"], "optional_bg_cond": ["CONDITIONING"], "optional_blended_cond": ["CONDITIONING"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "foreground_prompt", "background_prompt", "blended_prompt"], "optional": ["optional_fg_cond", "optional_bg_cond", "optional_blended_cond"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingLayerDiffusionADDTL", "display_name": "PreSampling (LayerDiffuse ADDTL)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "dynamicThresholdingFull": {"input": {"required": {"model": ["MODEL"], "mimic_scale": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.5}], "threshold_percentile": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mimic_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "mimic_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "cfg_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "cfg_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sched_val": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}], "separate_feature_channels": [["enable", "disable"]], "scaling_startpoint": [["MEAN", "ZERO"]], "variability_measure": [["AD", "STD"]], "interpolate_phi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "mimic_scale", "threshold_percentile", "mimic_mode", "mimic_scale_min", "cfg_mode", "cfg_scale_min", "sched_val", "separate_feature_channels", "scaling_startpoint", "variability_measure", "interpolate_phi"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "dynamicThresholdingFull", "display_name": "DynamicThresholdingFull", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/PreSampling", "output_node": false}, "easy fullkSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "xyPlot": ["XYPLOT"], "image": ["IMAGE"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "link_id", "save_prefix"], "optional": ["seed", "model", "positive", "negative", "latent", "vae", "clip", "xyPlot", "image"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "image", "model", "positive", "negative", "latent", "vae", "clip", "seed"], "name": "easy fullkSampler", "display_name": "EasyKSampler (Full)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSampler", "display_name": "EasyKSampler", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerCustom": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "None"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "LATENT", "LATENT", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "output", "denoised_output", "image"], "name": "easy kSamplerCustom", "display_name": "EasyKSampler (Custom)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerTiled": {"input": {"required": {"pipe": ["PIPE_LINE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "tile_size", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerTiled", "display_name": "EasyKSampler (Tiled Decode)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerLayerDiffusion": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false, true], "output_name": ["pipe", "final_image", "original_image", "alpha"], "name": "easy kSamplerLayerDiffusion", "display_name": "EasyKSampler (LayerDiffuse)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerInpainting": {"input": {"required": {"pipe": ["PIPE_LINE"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "additional": [["None", "InpaintModelCond", "Differential Diffusion", "Fooocus Inpaint", "Fooocus Inpaint + DD", "Brushnet Random", "Brushnet Random + DD", "Brushnet Segmentation", "Brushnet Segmentation + DD"], {"default": "None"}]}, "optional": {"model": ["MODEL"], "mask": ["MASK"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "grow_mask_by", "image_output", "link_id", "save_prefix", "additional"], "optional": ["model", "mask"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "image", "vae"], "name": "easy kSamplerInpainting", "display_name": "EasyKSampler (Inpainting)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerDownscaleUnet": {"input": {"required": {"pipe": ["PIPE_LINE"], "downscale_mode": [["None", "Auto", "Custom"], {"default": "Auto"}], "block_number": ["INT", {"default": 3, "min": 1, "max": 32, "step": 1}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 9.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001}], "downscale_after_skip": ["BOOLEAN", {"default": true}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "downscale_mode", "block_number", "downscale_factor", "start_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerDownscaleUnet", "display_name": "EasyKsampler (Downscale Unet)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerSDTurbo": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerSDTurbo", "display_name": "EasyKSampler (SDTurbo)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy fullCascadeKSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "encode_vae_name": [["None", "FLUX1/ae.safetensors", "ae.safetensors"]], "decode_vae_name": [["None", "FLUX1/ae.safetensors", "ae.safetensors"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"default": "euler_ancestral"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"default": "simple"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent_c": ["IMAGE"], "latent_c": ["LATENT"], "model_c": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "encode_vae_name", "decode_vae_name", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "link_id", "save_prefix", "seed"], "optional": ["image_to_latent_c", "latent_c", "model_c"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "MODEL", "LATENT"], "output_is_list": [false, false, false], "output_name": ["pipe", "model_b", "latent_b"], "name": "easy fullCascadeKSampler", "display_name": "EasyCascadeKsampler (Full)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy cascadeKSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model_c": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [[]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model_c"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy cascadeKSampler", "display_name": "EasyCascadeKsampler", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": true}, "easy unSampler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "end_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "normalize": [["disable", "enable"]]}, "optional": {"pipe": ["PIPE_LINE"], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["steps", "end_at_step", "cfg", "sampler_name", "scheduler", "normalize"], "optional": ["pipe", "optional_model", "optional_positive", "optional_negative", "optional_latent"]}, "output": ["PIPE_LINE", "LATENT"], "output_is_list": [false, false], "output_name": ["pipe", "latent"], "name": "easy unSampler", "display_name": "EasyUnSampler", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Sampler", "output_node": false}, "easy hiresFix": {"input": {"required": {"model_name": [["1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]], "rescale_after_model": [[false, true], {"default": true}], "rescale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "vae": ["VAE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model_name", "rescale_after_model", "rescale_method", "rescale", "percent", "width", "height", "longer_side", "crop", "image_output", "link_id", "save_prefix"], "optional": ["pipe", "image", "vae"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "IMAGE", "LATENT"], "output_is_list": [false, false, false], "output_name": ["pipe", "image", "latent"], "name": "easy hiresFix", "display_name": "HiresFix", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": true}, "easy preDetailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "guide_size": ["FLOAT", {"default": 256, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "align_your_steps"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"bbox_segm_pipe": ["PIPE_LINE"], "sam_pipe": ["PIPE_LINE"], "optional_image": ["IMAGE"]}}, "input_order": {"required": ["pipe", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "drop_size", "wildcard", "cycle"], "optional": ["bbox_segm_pipe", "sam_pipe", "optional_image"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preDetailerFix", "display_name": "PreDetailerFix", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": false}, "easy preMaskDetailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "mask": ["MASK"], "guide_size": ["FLOAT", {"default": 384, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "mask_mode": ["BOOLEAN", {"default": true, "label_on": "masked only", "label_off": "whole"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"optional_image": ["IMAGE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["pipe", "mask", "guide_size", "guide_size_for", "max_size", "mask_mode", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "crop_factor", "drop_size", "refiner_ratio", "batch_size", "cycle"], "optional": ["optional_image", "inpaint_model", "noise_mask_feather"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preMaskDetailerFix", "display_name": "preMaskDetailerFix", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": false}, "easy ultralyticsDetectorPipe": {"input": {"required": {"model_name": [["bbox/face_yolov8m.pt", "bbox/hand_yolov8s.pt", "segm/person_yolov8m-seg.pt"]], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}]}}, "input_order": {"required": ["model_name", "bbox_threshold", "bbox_dilation", "bbox_crop_factor"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["bbox_segm_pipe"], "name": "easy ultralyticsDetectorPipe", "display_name": "UltralyticsDetector (Pipe)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": false}, "easy samLoaderPipe": {"input": {"required": {"model_name": [["sam_vit_b_01ec64.pth", "sam_vit_h_4b8939.pth"]], "device_mode": [["AUTO", "Prefer GPU", "CPU"], {"default": "AUTO"}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]]}}, "input_order": {"required": ["model_name", "device_mode", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["sam_pipe"], "name": "easy samLoaderPipe", "display_name": "SAMLoader (Pipe)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": false}, "easy detailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, true, true], "output_name": ["pipe", "image", "cropped_refined", "cropped_enhanced_alpha"], "name": "easy detailerFix", "display_name": "DetailerFix", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Fix", "output_node": true}, "easy pipeIn": {"input": {"required": {}, "optional": {"pipe": ["PIPE_LINE"], "model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "image": ["IMAGE"], "xyPlot": ["XYPLOT"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "xyPlot"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeIn", "display_name": "Pipe In", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeOut": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "seed"], "name": "easy pipeOut", "display_name": "Pipe Out", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeEdit": {"input": {"required": {"clip_skip": ["INT", {"default": -1, "min": -24, "max": 0, "step": 1}], "optional_positive": ["STRING", {"default": "", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "optional_negative": ["STRING", {"default": "", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "a1111_prompt_style": ["BOOLEAN", {"default": false}], "conditioning_mode": [["replace", "concat", "combine", "average", "timestep"], {"default": "replace"}], "average_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "old_cond_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "old_cond_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "new_cond_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "new_cond_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"pipe": ["PIPE_LINE"], "model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "image": ["IMAGE"]}, "hidden": {"my_unique_id": "UNIQUE_ID", "prompt": "PROMPT"}}, "input_order": {"required": ["clip_skip", "optional_positive", "positive_token_normalization", "positive_weight_interpretation", "optional_negative", "negative_token_normalization", "negative_weight_interpretation", "a1111_prompt_style", "conditioning_mode", "average_strength", "old_cond_start", "old_cond_end", "new_cond_start", "new_cond_end"], "optional": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image"], "hidden": ["my_unique_id", "prompt"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image"], "name": "easy pipeEdit", "display_name": "Pipe Edit", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeEditPrompt": {"input": {"required": {"pipe": ["PIPE_LINE"], "positive": ["STRING", {"default": "", "multiline": true}], "negative": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"my_unique_id": "UNIQUE_ID", "prompt": "PROMPT"}}, "input_order": {"required": ["pipe", "positive", "negative"], "hidden": ["my_unique_id", "prompt"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeEditPrompt", "display_name": "Pipe Edit Prompt", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeToBasicPipe": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe"], "hidden": ["my_unique_id"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "easy pipeToBasicPipe", "display_name": "Pipe -> BasicPipe", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeBatchIndex": {"input": {"required": {"pipe": ["PIPE_LINE"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 63}], "length": ["INT", {"default": 1, "min": 1, "max": 64}]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "batch_index", "length"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeBatchIndex", "display_name": "Pipe Batch Index", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYPlot": {"input": {"required": {"grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "output_individuals": [["False", "True"], {"default": "False"}], "flip_xy": [["False", "True"], {"default": "False"}], "x_axis": [["None", "---------------------", "preSampling: steps", "preSampling: cfg", "preSampling: sampler_name", "preSampling: scheduler", "preSampling: denoise", "preSampling: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora_name", "loader: lora_model_strength", "loader: lora_clip_strength", "loader: positive", "loader: negative"], {"default": "None"}], "x_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}], "y_axis": [["None", "---------------------", "preSampling: steps", "preSampling: cfg", "preSampling: sampler_name", "preSampling: scheduler", "preSampling: denoise", "preSampling: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora_name", "loader: lora_model_strength", "loader: lora_clip_strength", "loader: positive", "loader: negative"], {"default": "None"}], "y_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}]}, "optional": {"pipe": ["PIPE_LINE"]}, "hidden": {"plot_dict": [{"steps": {"min": 1, "max": 100, "step": 1}, "cfg": {"min": 0.0, "max": 100.0, "step": 1.0}, "sampler_name": ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], "scheduler": ["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], "denoise": {"min": 0.0, "max": 1.0, "step": 0.01}, "seed": {"min": 0, "max": 1125899906842624}, "ckpt_name": [], "vae_name": ["Baked-VAE", "FLUX1/ae.safetensors"], "clip_skip": {"min": -24, "max": -1, "step": 1}, "lora_name": ["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "GrainScape.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "quicktake150-flux.safetensors"], "lora_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "positive": [], "negative": []}]}}, "input_order": {"required": ["grid_spacing", "output_individuals", "flip_xy", "x_axis", "x_values", "y_axis", "y_values"], "optional": ["pipe"], "hidden": ["plot_dict"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy XYPlot", "display_name": "XY Plot", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYPlotAdvanced": {"input": {"required": {"pipe": ["PIPE_LINE"], "grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "output_individuals": [["False", "True"], {"default": "False"}], "flip_xy": [["False", "True"], {"default": "False"}]}, "optional": {"X": ["X_Y"], "Y": ["X_Y"], "font": [["None"]]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "grid_spacing", "output_individuals", "flip_xy"], "optional": ["X", "Y", "font"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy XYPlotAdvanced", "display_name": "XY Plot Advanced", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYInputs: Seeds++ Batch": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 1, "max": 50}]}}, "input_order": {"required": ["batch_count"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Seeds++ Batch", "display_name": "XY Inputs: Seeds++ Batch //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Steps": {"input": {"required": {"target_parameter": [["steps", "start_at_step", "end_at_step"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_step": ["INT", {"default": 10, "min": 1, "max": 10000}], "last_step": ["INT", {"default": 20, "min": 1, "max": 10000}], "first_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "last_start_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "first_end_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "last_end_step": ["INT", {"default": 20, "min": 0, "max": 10000}]}}, "input_order": {"required": ["target_parameter", "batch_count", "first_step", "last_step", "first_start_step", "last_start_step", "first_end_step", "last_end_step"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Steps", "display_name": "XY Inputs: Steps //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: CFG Scale": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "last_cfg": ["FLOAT", {"default": 9.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["batch_count", "first_cfg", "last_cfg"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: CFG Scale", "display_name": "XY Inputs: CFG Scale //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: FluxGuidance": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_guidance": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "last_guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["batch_count", "first_guidance", "last_guidance"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: FluxGuidance", "display_name": "XY Inputs: Flux Guidance //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Sampler/Scheduler": {"input": {"required": {"target_parameter": [["sampler", "scheduler", "sampler & scheduler"]], "input_count": ["INT", {"default": 1, "min": 1, "max": 30, "step": 1}], "sampler_1": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_1": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_2": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_2": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_3": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_3": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_4": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_4": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_5": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_5": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_6": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_6": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_7": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_7": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_8": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_8": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_9": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_9": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_10": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_10": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_11": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_11": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_12": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_12": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_13": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_13": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_14": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_14": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_15": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_15": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_16": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_16": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_17": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_17": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_18": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_18": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_19": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_19": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_20": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_20": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_21": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_21": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_22": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_22": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_23": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_23": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_24": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_24": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_25": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_25": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_26": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_26": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_27": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_27": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_28": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_28": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_29": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_29": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "sampler_30": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler_30": [["None", "simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]]}}, "input_order": {"required": ["target_parameter", "input_count", "sampler_1", "scheduler_1", "sampler_2", "scheduler_2", "sampler_3", "scheduler_3", "sampler_4", "scheduler_4", "sampler_5", "scheduler_5", "sampler_6", "scheduler_6", "sampler_7", "scheduler_7", "sampler_8", "scheduler_8", "sampler_9", "scheduler_9", "sampler_10", "scheduler_10", "sampler_11", "scheduler_11", "sampler_12", "scheduler_12", "sampler_13", "scheduler_13", "sampler_14", "scheduler_14", "sampler_15", "scheduler_15", "sampler_16", "scheduler_16", "sampler_17", "scheduler_17", "sampler_18", "scheduler_18", "sampler_19", "scheduler_19", "sampler_20", "scheduler_20", "sampler_21", "scheduler_21", "sampler_22", "scheduler_22", "sampler_23", "scheduler_23", "sampler_24", "scheduler_24", "sampler_25", "scheduler_25", "sampler_26", "scheduler_26", "sampler_27", "scheduler_27", "sampler_28", "scheduler_28", "sampler_29", "scheduler_29", "sampler_30", "scheduler_30"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Sampler/Scheduler", "display_name": "XY Inputs: Sampler/Scheduler //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Denoise": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_denoise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1}], "last_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["batch_count", "first_denoise", "last_denoise"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Denoise", "display_name": "XY Inputs: Denoise //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Checkpoint": {"input": {"required": {"input_mode": [["Ckpt Names", "Ckpt Names+ClipSkip", "Ckpt Names+ClipSkip+VAE"]], "ckpt_count": ["INT", {"default": 3, "min": 0, "max": 10, "step": 1}], "ckpt_name_1": [["None"]], "clip_skip_1": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_1": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_2": [["None"]], "clip_skip_2": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_2": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_3": [["None"]], "clip_skip_3": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_3": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_4": [["None"]], "clip_skip_4": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_4": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_5": [["None"]], "clip_skip_5": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_5": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_6": [["None"]], "clip_skip_6": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_6": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_7": [["None"]], "clip_skip_7": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_7": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_8": [["None"]], "clip_skip_8": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_8": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_9": [["None"]], "clip_skip_9": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_9": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]], "ckpt_name_10": [["None"]], "clip_skip_10": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_10": [["Baked VAE", "FLUX1/ae.safetensors", "ae.safetensors"]]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["input_mode", "ckpt_count", "ckpt_name_1", "clip_skip_1", "vae_name_1", "ckpt_name_2", "clip_skip_2", "vae_name_2", "ckpt_name_3", "clip_skip_3", "vae_name_3", "ckpt_name_4", "clip_skip_4", "vae_name_4", "ckpt_name_5", "clip_skip_5", "vae_name_5", "ckpt_name_6", "clip_skip_6", "vae_name_6", "ckpt_name_7", "clip_skip_7", "vae_name_7", "ckpt_name_8", "clip_skip_8", "vae_name_8", "ckpt_name_9", "clip_skip_9", "vae_name_9", "ckpt_name_10", "clip_skip_10", "vae_name_10"], "optional": ["optional_lora_stack"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Checkpoint", "display_name": "XY Inputs: Checkpoint //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Lora": {"input": {"required": {"input_mode": [["Lora Names", "Lora Names+Weights"]], "lora_count": ["INT", {"default": 3, "min": 0, "max": 10, "step": 1}], "model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_1": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_4": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_5": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_6": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_7": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_8": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_9": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_10": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "display_trigger_word": ["BOOLEAN", {"display_trigger_word": true, "tooltip": "Trigger words showing lora model pass through the model's metadata, but not necessarily accurately."}]}}, "input_order": {"required": ["input_mode", "lora_count", "model_strength", "clip_strength", "lora_name_1", "model_str_1", "clip_str_1", "lora_name_2", "model_str_2", "clip_str_2", "lora_name_3", "model_str_3", "clip_str_3", "lora_name_4", "model_str_4", "clip_str_4", "lora_name_5", "model_str_5", "clip_str_5", "lora_name_6", "model_str_6", "clip_str_6", "lora_name_7", "model_str_7", "clip_str_7", "lora_name_8", "model_str_8", "clip_str_8", "lora_name_9", "model_str_9", "clip_str_9", "lora_name_10", "model_str_10", "clip_str_10"], "optional": ["optional_lora_stack", "display_trigger_word"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Lora", "display_name": "XY Inputs: Lora //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: ModelMergeBlocks": {"input": {"required": {"ckpt_name_1": [[]], "ckpt_name_2": [[]], "vae_use": [["Use Model 1", "Use Model 2", "FLUX1/ae.safetensors", "ae.safetensors"], {"default": "Use Model 1"}], "preset": [["Preset", "MMB-ALL:1,1,1", "MMB-IN:1,0,0", "MMB-MID:0,1,0", "MMB-OUT:0,0,1", "MMB-INMID:1,1,0", "MMB-INOUT:1,0,1", "MMB-MIDOUT:0,1,1", "MMB-NONE:0,0,0", "@MMBN-FULL-TEST:27"], {"default": "preset"}], "values": ["STRING", {"default": "1,0,0; \n0,1,0; \n0,0,1; \n1,1,0; \n1,0,1; \n0,1,1; ", "multiline": true, "placeholder": "Support 2 methods:\n\n1.input, middle, out in same line and insert values seperated by \"; \"\n\n2.model merge block number seperated by \", \" in same line and insert values seperated by \"; \""}]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name_1", "ckpt_name_2", "vae_use", "preset", "values"], "hidden": ["my_unique_id"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: ModelMergeBlocks", "display_name": "XY Inputs: ModelMergeBlocks //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PromptSR": {"input": {"required": {"target_prompt": [["positive", "negative"]], "search_txt": ["STRING", {"default": "", "multiline": false}], "replace_all_text": ["BOOLEAN", {"default": false}], "replace_count": ["INT", {"default": 3, "min": 1, "max": 29}], "replace_1": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_1"}], "replace_2": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_2"}], "replace_3": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_3"}], "replace_4": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_4"}], "replace_5": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_5"}], "replace_6": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_6"}], "replace_7": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_7"}], "replace_8": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_8"}], "replace_9": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_9"}], "replace_10": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_10"}], "replace_11": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_11"}], "replace_12": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_12"}], "replace_13": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_13"}], "replace_14": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_14"}], "replace_15": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_15"}], "replace_16": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_16"}], "replace_17": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_17"}], "replace_18": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_18"}], "replace_19": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_19"}], "replace_20": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_20"}], "replace_21": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_21"}], "replace_22": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_22"}], "replace_23": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_23"}], "replace_24": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_24"}], "replace_25": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_25"}], "replace_26": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_26"}], "replace_27": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_27"}], "replace_28": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_28"}], "replace_29": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_29"}]}}, "input_order": {"required": ["target_prompt", "search_txt", "replace_all_text", "replace_count", "replace_1", "replace_2", "replace_3", "replace_4", "replace_5", "replace_6", "replace_7", "replace_8", "replace_9", "replace_10", "replace_11", "replace_12", "replace_13", "replace_14", "replace_15", "replace_16", "replace_17", "replace_18", "replace_19", "replace_20", "replace_21", "replace_22", "replace_23", "replace_24", "replace_25", "replace_26", "replace_27", "replace_28", "replace_29"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PromptSR", "display_name": "XY Inputs: PromptSR //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: ControlNet": {"input": {"required": {"control_net_name": [["ControlNetModel/diffusion_pytorch_model.safetensors"]], "image": ["IMAGE"], "target_parameter": [["strength", "start_percent", "end_percent"]], "batch_count": ["INT", {"default": 3, "min": 1, "max": 30}], "first_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "last_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "first_start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_start_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "first_end_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["control_net_name", "image", "target_parameter", "batch_count", "first_strength", "last_strength", "first_start_percent", "last_start_percent", "first_end_percent", "last_end_percent", "strength", "start_percent", "end_percent"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: ControlNet", "display_name": "XY Inputs: Controlnet //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PositiveCond": {"input": {"optional": {"positive_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"]}}, "input_order": {"optional": ["positive_1", "positive_2", "positive_3", "positive_4"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PositiveCond", "display_name": "XY Inputs: PosCond //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PositiveCondList": {"input": {"required": {"positive": ["CONDITIONING"]}}, "input_order": {"required": ["positive"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PositiveCondList", "display_name": "XY Inputs: PosCondList //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: NegativeCond": {"input": {"optional": {"negative_1": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "negative_4": ["CONDITIONING"]}}, "input_order": {"optional": ["negative_1", "negative_2", "negative_3", "negative_4"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: NegativeCond", "display_name": "XY Inputs: NegCond //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: NegativeCondList": {"input": {"required": {"negative": ["CONDITIONING"]}}, "input_order": {"required": ["negative"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: NegativeCondList", "display_name": "XY Inputs: NegCondList //EasyUse", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy imageInsetCrop": {"input": {"required": {"image": ["IMAGE"], "measurement": [["Pixels", "Percentage"]], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "measurement", "left", "right", "top", "bottom"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageInsetCrop", "display_name": "ImageInsetCrop", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageCount": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "easy imageCount", "display_name": "ImageCount", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imagesCountInDirectory": {"input": {"required": {"directory": ["STRING"], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "limit": ["INT", {"default": -1, "min": -1, "max": 10000}]}}, "input_order": {"required": ["directory", "start_index", "limit"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "easy imagesCountInDirectory", "display_name": "imagesCountInDirectory", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageSize": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width_int", "height_int"], "name": "easy imageSize", "display_name": "ImageSize", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageSizeBySide": {"input": {"required": {"image": ["IMAGE"], "side": [["Longest", "Shortest"]]}}, "input_order": {"required": ["image", "side"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imageSizeBySide", "display_name": "ImageSize (Side)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageSizeByLongerSide": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imageSizeByLongerSide", "display_name": "ImageSize (LongerSide)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imagePixelPerfect": {"input": {"required": {"image": ["IMAGE"], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["image", "resize_mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imagePixelPerfect", "display_name": "ImagePixelPerfect", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageScaleDown": {"input": {"required": {"images": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["images", "width", "height", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDown", "display_name": "Image Scale Down", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleDownBy": {"input": {"required": {"images": ["IMAGE"], "scale_by": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDownBy", "display_name": "Image Scale Down By", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleDownToSize": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "mode": ["BOOLEAN", {"default": true, "label_on": "max", "label_off": "min"}]}}, "input_order": {"required": ["images", "size", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDownToSize", "display_name": "Image Scale Down To Size", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleToNormPixels": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageScaleToNormPixels", "display_name": "ImageScaleToNormPixels", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageRatio": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["width_ratio_int", "height_ratio_int", "width_ratio_float", "height_ratio_float"], "name": "easy imageRatio", "display_name": "ImageRatio", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageConcat": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image1", "image2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageConcat", "display_name": "imageConcat", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageListToImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageListToImageBatch", "display_name": "Image List To Image Batch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageBatchToImageList": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "easy imageBatchToImageList", "display_name": "Image Batch To Image List", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitList": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["images", "images", "images"], "name": "easy imageSplitList", "display_name": "imageSplitList", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitGrid": {"input": {"required": {"images": ["IMAGE"], "row": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "column": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["images", "row", "column"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "easy imageSplitGrid", "display_name": "imageSplitGrid", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imagesSplitImage": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["image1", "image2", "image3", "image4", "image5"], "name": "easy imagesSplitImage", "display_name": "imagesSplitImage", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitTiles": {"input": {"required": {"image": ["IMAGE"], "overlap_ratio": ["FLOAT", {"default": 0, "min": 0, "max": 0.5, "step": 0.01}], "overlap_offset": ["INT", {"default": 0, "min": -8192, "max": 8192, "step": 1}], "tiles_rows": ["INT", {"default": 2, "min": 1, "max": 50, "step": 1}], "tiles_cols": ["INT", {"default": 2, "min": 1, "max": 50, "step": 1}]}, "optional": {"norm": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "overlap_ratio", "overlap_offset", "tiles_rows", "tiles_cols"], "optional": ["norm"]}, "output": ["IMAGE", "MASK", "OVERLAP", "INT"], "output_is_list": [false, false, false, false], "output_name": ["tiles", "masks", "overlap", "total"], "name": "easy imageSplitTiles", "display_name": "imageSplitTiles", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageTilesFromBatch": {"input": {"required": {"tiles": ["IMAGE"], "masks": ["MASK"], "overlap": ["OVERLAP"], "index": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}]}}, "input_order": {"required": ["tiles", "masks", "overlap", "index"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "x", "y"], "name": "easy imageTilesFromBatch", "display_name": "imageTilesFromBatch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageCropFromMask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "image_crop_multi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "mask_crop_multi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "bbox_smooth_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "mask", "image_crop_multi", "mask_crop_multi", "bbox_smooth_alpha"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["crop_image", "crop_mask", "bbox"], "name": "easy imageCropFromMask", "display_name": "imageCropFromMask", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageUncropFromBBOX": {"input": {"required": {"original_image": ["IMAGE"], "crop_image": ["IMAGE"], "bbox": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "use_square_mask": ["BOOLEAN", {"default": true}]}, "optional": {"optional_mask": ["MASK"]}}, "input_order": {"required": ["original_image", "crop_image", "bbox", "border_blending", "use_square_mask"], "optional": ["optional_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageUncropFromBBOX", "display_name": "imageUncropFromBBOX", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy imageSave": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "only_preview": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "only_preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy imageSave", "display_name": "Save Image (Simple)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageRemBg": {"input": {"required": {"images": ["IMAGE"], "rem_mode": [["RMBG-2.0", "RMBG-1.4", "Inspyrenet", "BEN2"], {"default": "RMBG-1.4"}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"torchscript_jit": ["BOOLEAN", {"default": false}], "add_background": [["none", "white", "black"], {"default": "none"}], "refine_foreground": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "rem_mode", "image_output", "save_prefix"], "optional": ["torchscript_jit", "add_background", "refine_foreground"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "easy imageRemBg", "display_name": "Image Remove Bg", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageChooser": {"input": {"required": {"mode": [["Always Pause", "Keep Last Selection"], {"default": "Always Pause"}]}, "optional": {"images": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mode"], "optional": ["images"], "hidden": ["prompt", "my_unique_id", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageChooser", "display_name": "Image Chooser", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageColorMatch": {"input": {"required": {"image_ref": ["IMAGE"], "image_target": ["IMAGE"], "method": [["wavelet", "adain", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image_ref", "image_target", "method", "image_output", "save_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageColorMatch", "display_name": "Image Color Match", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageDetailTransfer": {"input": {"required": {"target": ["IMAGE"], "source": ["IMAGE"], "mode": [["add", "multiply", "screen", "overlay", "soft_light", "hard_light", "color_dodge", "color_burn", "difference", "exclusion", "divide"], {"default": "add"}], "blur_sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.01}], "blend_factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001, "round": 0.001}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["target", "source", "mode", "blur_sigma", "blend_factor", "image_output", "save_prefix"], "optional": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageDetailTransfer", "display_name": "Image Detail Transfer", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy imageInterrogator": {"input": {"required": {"image": ["IMAGE"], "mode": [["fast", "classic", "best", "negative"]], "use_lowvram": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "mode", "use_lowvram"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["prompt"], "name": "easy imageInterrogator", "display_name": "Image To Prompt", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy loadImagesForLoop": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "limit": ["INT", {"default": -1, "min": -1, "max": 10000}], "initial_value1": ["*"], "initial_value2": ["*"]}, "hidden": {"initial_value0": ["*"], "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["directory"], "optional": ["start_index", "limit", "initial_value1", "initial_value2"], "hidden": ["initial_value0", "prompt", "extra_pnginfo", "unique_id"]}, "output": ["FLOW_CONTROL", "INT", "IMAGE", "MASK", "STRING", "*", "*"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["flow", "index", "image", "mask", "name", "value1", "value2"], "name": "easy loadImagesForLoop", "display_name": "Load Images For Loop", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "image", "output_node": false}, "easy loadImageBase64": {"input": {"required": {"base64_data": ["STRING", {"default": ""}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["base64_data", "image_output", "save_prefix"], "optional": [], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "easy loadImageBase64", "display_name": "Load Image (Base64)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image/LoadImage", "output_node": true}, "easy imageToBase64": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "easy imageToBase64", "display_name": "Image To Base64", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy joinImageBatch": {"input": {"required": {"images": ["IMAGE"], "mode": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["images", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy joinImageBatch", "display_name": "JoinImageBatch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy humanSegmentation": {"input": {"required": {"image": ["IMAGE"], "method": [["selfie_multiclass_256x256", "human_parsing_lip", "human_parts (deeplabv3p)"]], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "crop_multi": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "method", "confidence", "crop_multi"], "hidden": ["prompt", "my_unique_id"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "bbox"], "name": "easy humanSegmentation", "display_name": "Human Segmentation", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Segmentation", "output_node": false}, "easy removeLocalImage": {"input": {"required": {"any": ["*"], "file_name": ["STRING", {"default": ""}]}}, "input_order": {"required": ["any", "file_name"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy removeLocalImage", "display_name": "Remove Local Image", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": true}, "easy makeImageForICLora": {"input": {"required": {"image_1": ["IMAGE"], "direction": [["top-bottom", "left-right"], {"default": "left-right"}], "pixels": ["INT", {"default": 0, "max": 16384, "min": 0, "step": 8, "tooltip": "The pixel of the output image is not set when it is 0"}], "method": [["uniform height", "uniform width", "auto"], {"default": "auto"}]}, "optional": {"image_2": ["IMAGE"], "mask_1": ["MASK"], "mask_2": ["MASK"]}}, "input_order": {"required": ["image_1", "direction", "pixels", "method"], "optional": ["image_2", "mask_1", "mask_2"]}, "output": ["IMAGE", "MASK", "MASK", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["image", "mask", "context_mask", "width", "height", "x", "y"], "name": "easy makeImageForICLora", "display_name": "Make Image For ICLora", "description": "make Image for ICLora to Re-paint", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Image", "output_node": false}, "easy string": {"input": {"required": {"value": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "easy string", "display_name": "String", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy int": {"input": {"required": {"value": ["INT", {"default": 0, "min": -999999, "max": 999999}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["int"], "name": "easy int", "display_name": "Int", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy rangeInt": {"input": {"required": {"range_mode": [["step", "num_steps"], {"default": "step"}], "start": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "stop": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "step": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "num_steps": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "end_mode": [["Inclusive", "Exclusive"], {"default": "Inclusive"}]}}, "input_order": {"required": ["range_mode", "start", "stop", "step", "num_steps", "end_mode"]}, "output": ["INT", "INT"], "output_is_list": [true, true], "output_name": ["range", "range_sizes"], "name": "easy rangeInt", "display_name": "Range(Int)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy float": {"input": {"required": {"value": ["FLOAT", {"default": 0, "step": 0.01, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "easy float", "display_name": "Float", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy rangeFloat": {"input": {"required": {"range_mode": [["step", "num_steps"], {"default": "step"}], "start": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "stop": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "step": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "num_steps": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "end_mode": [["Inclusive", "Exclusive"], {"default": "Inclusive"}]}}, "input_order": {"required": ["range_mode", "start", "stop", "step", "num_steps", "end_mode"]}, "output": ["FLOAT", "INT"], "output_is_list": [true, true], "output_name": ["range", "range_sizes"], "name": "easy rangeFloat", "display_name": "Range(Float)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy boolean": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy boolean", "display_name": "Boolean", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy mathString": {"input": {"required": {"a": ["STRING", {"multiline": false}], "b": ["STRING", {"multiline": false}], "operation": [["a == b", "a != b", "a IN b", "a MATCH REGEX(b)", "a BEGINSWITH b", "a ENDSWITH b"]], "case_sensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["a", "b", "operation", "case_sensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "easy mathString", "display_name": "Math String", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy mathInt": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "operation": [["add", "subtract", "multiply", "divide", "modulo", "power"]]}}, "input_order": {"required": ["a", "b", "operation"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "easy mathInt", "display_name": "Math Int", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy mathFloat": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -999999999999.0, "max": 999999999999.0, "step": 0.01}], "b": ["FLOAT", {"default": 0, "min": -999999999999.0, "max": 999999999999.0, "step": 0.01}], "operation": [["add", "subtract", "multiply", "divide", "modulo", "power"]]}}, "input_order": {"required": ["a", "b", "operation"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "easy mathFloat", "display_name": "Math Float", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy compare": {"input": {"required": {"a": ["*", {"default": 0}], "b": ["*", {"default": 0}], "comparison": [["a == b", "a != b", "a < b", "a > b", "a <= b", "a >= b"], {"default": "a == b"}]}}, "input_order": {"required": ["a", "b", "comparison"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy compare", "display_name": "Compare", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy imageSwitch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image_a", "image_b", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageSwitch", "display_name": "Image Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Switch", "output_node": false}, "easy textSwitch": {"input": {"required": {"input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["input"], "optional": ["text1", "text2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "easy textSwitch", "display_name": "Text Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Switch", "output_node": false}, "easy imageIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"image0": ["IMAGE", {"lazy": true}], "image1": ["IMAGE", {"lazy": true}], "image2": ["IMAGE", {"lazy": true}], "image3": ["IMAGE", {"lazy": true}], "image4": ["IMAGE", {"lazy": true}], "image5": ["IMAGE", {"lazy": true}], "image6": ["IMAGE", {"lazy": true}], "image7": ["IMAGE", {"lazy": true}], "image8": ["IMAGE", {"lazy": true}], "image9": ["IMAGE", {"lazy": true}], "image10": ["IMAGE", {"lazy": true}], "image11": ["IMAGE", {"lazy": true}], "image12": ["IMAGE", {"lazy": true}], "image13": ["IMAGE", {"lazy": true}], "image14": ["IMAGE", {"lazy": true}], "image15": ["IMAGE", {"lazy": true}], "image16": ["IMAGE", {"lazy": true}], "image17": ["IMAGE", {"lazy": true}], "image18": ["IMAGE", {"lazy": true}], "image19": ["IMAGE", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["image0", "image1", "image2", "image3", "image4", "image5", "image6", "image7", "image8", "image9", "image10", "image11", "image12", "image13", "image14", "image15", "image16", "image17", "image18", "image19"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageIndexSwitch", "display_name": "Image Index Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy textIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"text0": ["STRING", {"lazy": true, "forceInput": true}], "text1": ["STRING", {"lazy": true, "forceInput": true}], "text2": ["STRING", {"lazy": true, "forceInput": true}], "text3": ["STRING", {"lazy": true, "forceInput": true}], "text4": ["STRING", {"lazy": true, "forceInput": true}], "text5": ["STRING", {"lazy": true, "forceInput": true}], "text6": ["STRING", {"lazy": true, "forceInput": true}], "text7": ["STRING", {"lazy": true, "forceInput": true}], "text8": ["STRING", {"lazy": true, "forceInput": true}], "text9": ["STRING", {"lazy": true, "forceInput": true}], "text10": ["STRING", {"lazy": true, "forceInput": true}], "text11": ["STRING", {"lazy": true, "forceInput": true}], "text12": ["STRING", {"lazy": true, "forceInput": true}], "text13": ["STRING", {"lazy": true, "forceInput": true}], "text14": ["STRING", {"lazy": true, "forceInput": true}], "text15": ["STRING", {"lazy": true, "forceInput": true}], "text16": ["STRING", {"lazy": true, "forceInput": true}], "text17": ["STRING", {"lazy": true, "forceInput": true}], "text18": ["STRING", {"lazy": true, "forceInput": true}], "text19": ["STRING", {"lazy": true, "forceInput": true}]}}, "input_order": {"required": ["index"], "optional": ["text0", "text1", "text2", "text3", "text4", "text5", "text6", "text7", "text8", "text9", "text10", "text11", "text12", "text13", "text14", "text15", "text16", "text17", "text18", "text19"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "easy textIndexSwitch", "display_name": "Text Index Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy conditioningIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"cond0": ["CONDITIONING", {"lazy": true}], "cond1": ["CONDITIONING", {"lazy": true}], "cond2": ["CONDITIONING", {"lazy": true}], "cond3": ["CONDITIONING", {"lazy": true}], "cond4": ["CONDITIONING", {"lazy": true}], "cond5": ["CONDITIONING", {"lazy": true}], "cond6": ["CONDITIONING", {"lazy": true}], "cond7": ["CONDITIONING", {"lazy": true}], "cond8": ["CONDITIONING", {"lazy": true}], "cond9": ["CONDITIONING", {"lazy": true}], "cond10": ["CONDITIONING", {"lazy": true}], "cond11": ["CONDITIONING", {"lazy": true}], "cond12": ["CONDITIONING", {"lazy": true}], "cond13": ["CONDITIONING", {"lazy": true}], "cond14": ["CONDITIONING", {"lazy": true}], "cond15": ["CONDITIONING", {"lazy": true}], "cond16": ["CONDITIONING", {"lazy": true}], "cond17": ["CONDITIONING", {"lazy": true}], "cond18": ["CONDITIONING", {"lazy": true}], "cond19": ["CONDITIONING", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["cond0", "cond1", "cond2", "cond3", "cond4", "cond5", "cond6", "cond7", "cond8", "cond9", "cond10", "cond11", "cond12", "cond13", "cond14", "cond15", "cond16", "cond17", "cond18", "cond19"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "easy conditioningIndexSwitch", "display_name": "Conditioning Index Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy anythingIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"value0": ["*", {"lazy": true}], "value1": ["*", {"lazy": true}], "value2": ["*", {"lazy": true}], "value3": ["*", {"lazy": true}], "value4": ["*", {"lazy": true}], "value5": ["*", {"lazy": true}], "value6": ["*", {"lazy": true}], "value7": ["*", {"lazy": true}], "value8": ["*", {"lazy": true}], "value9": ["*", {"lazy": true}], "value10": ["*", {"lazy": true}], "value11": ["*", {"lazy": true}], "value12": ["*", {"lazy": true}], "value13": ["*", {"lazy": true}], "value14": ["*", {"lazy": true}], "value15": ["*", {"lazy": true}], "value16": ["*", {"lazy": true}], "value17": ["*", {"lazy": true}], "value18": ["*", {"lazy": true}], "value19": ["*", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9", "value10", "value11", "value12", "value13", "value14", "value15", "value16", "value17", "value18", "value19"]}, "output": ["*"], "output_is_list": [false], "output_name": ["value"], "name": "easy anythingIndexSwitch", "display_name": "Any Index Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy ab": {"input": {"required": {"A or B": ["BOOLEAN", {"default": true, "label_on": "A", "label_off": "B"}], "in": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["A or B", "in"], "hidden": ["unique_id"]}, "output": ["*", "*"], "output_is_list": [false, false], "output_name": ["A", "B"], "name": "easy ab", "display_name": "A or B", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy anythingInversedSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}], "in": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["index", "in"], "hidden": ["unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out0"], "name": "easy anythingInversedSwitch", "display_name": "Any Inversed Switch", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy whileLoopStart": {"input": {"required": {"condition": ["BOOLEAN", {"default": true}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"], "initial_value10": ["*"], "initial_value11": ["*"], "initial_value12": ["*"], "initial_value13": ["*"], "initial_value14": ["*"], "initial_value15": ["*"], "initial_value16": ["*"], "initial_value17": ["*"], "initial_value18": ["*"], "initial_value19": ["*"]}}, "input_order": {"required": ["condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9", "initial_value10", "initial_value11", "initial_value12", "initial_value13", "initial_value14", "initial_value15", "initial_value16", "initial_value17", "initial_value18", "initial_value19"]}, "output": ["FLOW_CONTROL", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["flow", "value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9", "value10", "value11", "value12", "value13", "value14", "value15", "value16", "value17", "value18", "value19"], "name": "easy whileLoopStart", "display_name": "While Loop Start", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/While Loop", "output_node": false}, "easy whileLoopEnd": {"input": {"required": {"flow": ["FLOW_CONTROL", {"rawLink": true}], "condition": ["BOOLEAN", {}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"], "initial_value10": ["*"], "initial_value11": ["*"], "initial_value12": ["*"], "initial_value13": ["*"], "initial_value14": ["*"], "initial_value15": ["*"], "initial_value16": ["*"], "initial_value17": ["*"], "initial_value18": ["*"], "initial_value19": ["*"]}, "hidden": {"dynprompt": "DYNPROMPT", "unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["flow", "condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9", "initial_value10", "initial_value11", "initial_value12", "initial_value13", "initial_value14", "initial_value15", "initial_value16", "initial_value17", "initial_value18", "initial_value19"], "hidden": ["dynprompt", "unique_id", "extra_pnginfo"]}, "output": ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9", "value10", "value11", "value12", "value13", "value14", "value15", "value16", "value17", "value18", "value19"], "name": "easy whileLoopEnd", "display_name": "While Loop End", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/While Loop", "output_node": false}, "easy forLoopStart": {"input": {"required": {"total": ["INT", {"default": 1, "min": 1, "max": 100000, "step": 1}]}, "optional": {"initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"], "initial_value10": ["*"], "initial_value11": ["*"], "initial_value12": ["*"], "initial_value13": ["*"], "initial_value14": ["*"], "initial_value15": ["*"], "initial_value16": ["*"], "initial_value17": ["*"], "initial_value18": ["*"], "initial_value19": ["*"]}, "hidden": {"initial_value0": ["*"], "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["total"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9", "initial_value10", "initial_value11", "initial_value12", "initial_value13", "initial_value14", "initial_value15", "initial_value16", "initial_value17", "initial_value18", "initial_value19"], "hidden": ["initial_value0", "prompt", "extra_pnginfo", "unique_id"]}, "output": ["FLOW_CONTROL", "INT", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["flow", "index", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9", "value10", "value11", "value12", "value13", "value14", "value15", "value16", "value17", "value18", "value19"], "name": "easy forLoopStart", "display_name": "For Loop Start", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/For Loop", "output_node": false}, "easy forLoopEnd": {"input": {"required": {"flow": ["FLOW_CONTROL", {"rawLink": true}]}, "optional": {"initial_value1": ["*", {"rawLink": true}], "initial_value2": ["*", {"rawLink": true}], "initial_value3": ["*", {"rawLink": true}], "initial_value4": ["*", {"rawLink": true}], "initial_value5": ["*", {"rawLink": true}], "initial_value6": ["*", {"rawLink": true}], "initial_value7": ["*", {"rawLink": true}], "initial_value8": ["*", {"rawLink": true}], "initial_value9": ["*", {"rawLink": true}], "initial_value10": ["*", {"rawLink": true}], "initial_value11": ["*", {"rawLink": true}], "initial_value12": ["*", {"rawLink": true}], "initial_value13": ["*", {"rawLink": true}], "initial_value14": ["*", {"rawLink": true}], "initial_value15": ["*", {"rawLink": true}], "initial_value16": ["*", {"rawLink": true}], "initial_value17": ["*", {"rawLink": true}], "initial_value18": ["*", {"rawLink": true}], "initial_value19": ["*", {"rawLink": true}]}, "hidden": {"dynprompt": "DYNPROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["flow"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9", "initial_value10", "initial_value11", "initial_value12", "initial_value13", "initial_value14", "initial_value15", "initial_value16", "initial_value17", "initial_value18", "initial_value19"], "hidden": ["dynprompt", "extra_pnginfo", "unique_id"]}, "output": ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9", "value10", "value11", "value12", "value13", "value14", "value15", "value16", "value17", "value18", "value19"], "name": "easy forLoopEnd", "display_name": "For Loop End", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic/For Loop", "output_node": false}, "easy blocker": {"input": {"required": {"continue": ["BOOLEAN", {"default": false}], "in": ["*", {"default": null}]}}, "input_order": {"required": ["continue", "in"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy blocker", "display_name": "Blocker", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy ifElse": {"input": {"required": {"boolean": ["BOOLEAN"], "on_true": ["*", {"lazy": true}], "on_false": ["*", {"lazy": true}]}}, "input_order": {"required": ["boolean", "on_true", "on_false"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "easy ifElse", "display_name": "If else", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy isMaskEmpty": {"input": {"required": {"mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["mask"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isMaskEmpty", "display_name": "Is Mask Empty", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy isNone": {"input": {"required": {"any": ["*"]}, "optional": {}}, "input_order": {"required": ["any"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isNone", "display_name": "Is None", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy isSDXL": {"input": {"required": {}, "optional": {"optional_pipe": ["PIPE_LINE"], "optional_clip": ["CLIP"]}}, "input_order": {"required": [], "optional": ["optional_pipe", "optional_clip"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isSDXL", "display_name": "Is SDXL", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy isFileExist": {"input": {"required": {"file_path": ["STRING", {"default": ""}], "file_name": ["STRING", {"default": ""}], "file_extension": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["file_path", "file_name", "file_extension"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isFileExist", "display_name": "Is File Exist", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy outputToList": {"input": {"required": {"tuple": ["*", {}]}, "optional": {}}, "input_order": {"required": ["tuple"], "optional": []}, "output": ["*"], "output_is_list": [true], "output_name": ["list"], "name": "easy outputToList", "display_name": "Output to List", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy pixels": {"input": {"required": {"resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"]], "width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "scale": ["FLOAT", {"default": 2.0, "min": 0.001, "max": 10, "step": 0.001}], "flip_w/h": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["resolution", "width", "height", "scale", "flip_w/h"]}, "output": ["INT", "INT", "*", "*", "*"], "output_is_list": [false, false, false, false, false], "output_name": ["width_norm", "height_norm", "width", "height", "scale_factor"], "name": "easy pixels", "display_name": "Pixels W/H Norm", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy xyAny": {"input": {"required": {"X": ["*", {}], "Y": ["*", {}], "direction": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["X", "Y", "direction"]}, "output": ["*", "*"], "output_is_list": [true, true], "output_name": ["X", "Y"], "name": "easy xyAny", "display_name": "XY Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy lengthAnything": {"input": {"required": {"any": ["*", {}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["any"], "hidden": ["prompt", "my_unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["length"], "name": "easy lengthAnything", "display_name": "Length Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy indexAnything": {"input": {"required": {"any": ["*", {}], "index": ["INT", {"default": 0, "min": 0, "max": 1000000, "step": 1}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["any", "index"], "hidden": ["prompt", "my_unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy indexAnything", "display_name": "Index Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy batchAnything": {"input": {"required": {"any_1": ["*", {}], "any_2": ["*", {}]}}, "input_order": {"required": ["any_1", "any_2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["batch"], "name": "easy batchAnything", "display_name": "Batch Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy convertAnything": {"input": {"required": {"*": ["*"], "output_type": [["string", "int", "float", "boolean"], {"default": "string"}]}}, "input_order": {"required": ["*", "output_type"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "easy convertAnything", "display_name": "Convert Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy showAnything": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy showAnything", "display_name": "Show Any", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy showTensorShape": {"input": {"required": {"tensor": ["*"]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["tensor"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy showTensorShape", "display_name": "Show Tensor Shape", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy clearCacheKey": {"input": {"required": {"anything": ["*", {}], "cache_key": ["STRING", {"default": "*"}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything", "cache_key"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy clearCacheKey", "display_name": "Clear Cache Key", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy clearCacheAll": {"input": {"required": {"anything": ["*", {}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy clearCacheAll", "display_name": "Clear Cache All", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy cleanGpuUsed": {"input": {"required": {"anything": ["*", {}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy cleanGpuUsed", "display_name": "Clean VRAM Used", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy saveText": {"input": {"required": {"text": ["STRING", {"default": "", "forceInput": true}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "overwrite": ["BOOLEAN", {"default": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["text", "output_file_path", "file_name", "file_extension", "overwrite"], "optional": ["image"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "image"], "name": "easy saveText", "display_name": "Save Text", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": true}, "easy sleep": {"input": {"required": {"any": ["*", {}], "delay": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1000000, "step": 0.1}]}}, "input_order": {"required": ["any", "delay"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy sleep", "display_name": "Sleep", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/Logic", "output_node": false}, "easy fluxPromptGenAPI": {"input": {"required": {"describe": ["STRING", {"default": "", "placeholder": "Describe your image idea (you can use any language)", "multiline": true}]}, "optional": {"cookie_override": ["STRING", {"default": "", "forceInput": true}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["describe"], "optional": ["cookie_override"], "hidden": ["prompt", "unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy fluxPromptGenAPI", "display_name": "Prompt Gen (FluxAI)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/API", "output_node": false}, "easy joyCaption2API": {"input": {"required": {"image": ["IMAGE"], "do_sample": [[true, false]], "temperature": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 2.0, "step": 0.01, "round": 0.001, "display": "number"}], "max_tokens": ["INT", {"default": 256, "min": 16, "max": 512, "step": 16, "display": "number"}], "caption_type": [["Descriptive", "Descriptive (Informal)", "Training Prompt", "MidJourney", "Booru tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "extra_options": ["STRING", {"placeholder": "Extra options(e.g):\nIf there is a person/character in the image you must refer to them as {name}.", "tooltip": "Extra options for the model", "multiline": true}], "name_input": ["STRING", {"default": "", "tooltip": "Name input is only used if an Extra Option is selected that requires it."}], "custom_prompt": ["STRING", {"default": "", "multiline": true}]}, "optional": {"apikey_override": ["STRING", {"default": "", "forceInput": true, "tooltip": "Override the API key in the local config"}]}}, "input_order": {"required": ["image", "do_sample", "temperature", "max_tokens", "caption_type", "caption_length", "extra_options", "name_input", "custom_prompt"], "optional": ["apikey_override"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["caption"], "name": "easy joyCaption2API", "display_name": "JoyCaption2 (BizyAIR)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/API", "output_node": false}, "easy if": {"input": {"required": {"any": ["*"], "if": ["*"], "else": ["*"]}}, "input_order": {"required": ["any", "if", "else"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "easy if", "display_name": "If (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy poseEditor": {"input": {"required": {"image": ["STRING", {"default": ""}]}}, "input_order": {"required": ["image"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy poseEditor", "display_name": "PoseEditor (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy imageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "easy imageToMask", "display_name": "ImageToMask (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy showSpentTime": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["pipe"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy showSpentTime", "display_name": "Show Spent Time (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": true, "deprecated": true}, "easy latentNoisy": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "steps": ["INT", {"default": 10000, "min": 0, "max": 10000}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 1, "max": 10000}], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"pipe": ["PIPE_LINE"], "optional_model": ["MODEL"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["sampler_name", "scheduler", "steps", "start_at_step", "end_at_step", "source", "seed"], "optional": ["pipe", "optional_model", "optional_latent"]}, "output": ["PIPE_LINE", "LATENT", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["pipe", "latent", "sigma"], "name": "easy latentNoisy", "display_name": "LatentNoisy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy latentCompositeMaskedWithCond": {"input": {"required": {"pipe": ["PIPE_LINE"], "text_combine": ["LIST"], "source_latent": ["LATENT"], "source_mask": ["MASK"], "destination_mask": ["MASK"], "text_combine_mode": [["add", "replace", "cover"], {"default": "add"}], "replace_text": ["STRING", {"default": ""}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "text_combine", "source_latent", "source_mask", "destination_mask", "text_combine_mode", "replace_text"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "LATENT", "CONDITIONING"], "output_is_list": [false, false, true], "output_name": ["pipe", "latent", "conditioning"], "name": "easy latentCompositeMaskedWithCond", "display_name": "LatentCompositeMaskedWithCond (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy injectNoiseToLatent": {"input": {"required": {"strength": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 200.0, "step": 0.0001}], "normalize": ["BOOLEAN", {"default": false}], "average": ["BOOLEAN", {"default": false}]}, "optional": {"pipe_to_noise": ["PIPE_LINE"], "image_to_latent": ["IMAGE"], "latent": ["LATENT"], "noise": ["LATENT"], "mask": ["MASK"], "mix_randn_amount": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["strength", "normalize", "average"], "optional": ["pipe_to_noise", "image_to_latent", "latent", "noise", "mask", "mix_randn_amount", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "easy injectNoiseToLatent", "display_name": "InjectNoiseToLatent (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy stableDiffusion3API": {"input": {"required": {"positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "model": [["sd3", "sd3-turbo"]], "aspect_ratio": [["16:9", "1:1", "21:9", "2:3", "3:2", "4:5", "5:4", "9:16", "9:21"]], "seed": ["INT", {"default": 0, "min": 0, "max": 4294967294}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}]}, "optional": {"optional_image": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["positive", "negative", "model", "aspect_ratio", "seed", "denoise"], "optional": ["optional_image"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy stableDiffusion3API", "display_name": "StableDiffusion3API (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy saveImageLazy": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "save_metadata": ["BOOLEAN", {"default": true}]}, "optional": {}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "save_metadata"], "optional": [], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "easy saveImageLazy", "display_name": "SaveImageLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy saveTextLazy": {"input": {"required": {"text": ["STRING", {"default": "", "forceInput": true}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "overwrite": ["BOOLEAN", {"default": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["text", "output_file_path", "file_name", "file_extension", "overwrite"], "optional": ["image"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "image"], "name": "easy saveTextLazy", "display_name": "SaveTextLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy showAnythingLazy": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy showAnythingLazy", "display_name": "ShowAnythingLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.comfyui-easy-use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "TeaCache": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the TeaCache will be applied to."}], "model_type": [["flux", "flux-kontext", "ltxv", "lumina_2", "hunyuan_video", "hidream_i1_full", "hidream_i1_dev", "hidream_i1_fast", "wan2.1_t2v_1.3B", "wan2.1_t2v_14B", "wan2.1_i2v_480p_14B", "wan2.1_i2v_720p_14B", "wan2.1_t2v_1.3B_ret_mode", "wan2.1_t2v_14B_ret_mode", "wan2.1_i2v_480p_14B_ret_mode", "wan2.1_i2v_720p_14B_ret_mode"], {"default": "flux", "tooltip": "Supported diffusion model."}], "rel_l1_thresh": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 10.0, "step": 0.01, "tooltip": "How strongly to cache the output of diffusion model. This value must be non-negative."}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The start percentage of the steps that will apply TeaCache."}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The end percentage of the steps that will apply TeaCache."}], "cache_device": [["cuda", "cpu"], {"default": "cuda", "tooltip": "Device where the cache will reside."}]}}, "input_order": {"required": ["model", "model_type", "rel_l1_thresh", "start_percent", "end_percent", "cache_device"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "TeaCache", "display_name": "TeaCache", "description": "", "python_module": "custom_nodes.ComfyUI-TeaCache", "category": "TeaCache", "output_node": false}, "CompileModel": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the torch.compile will be applied to."}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "backend": [["inductor", "cudagraphs", "eager", "aot_eager"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}}, "input_order": {"required": ["model", "mode", "backend", "fullgraph", "dynamic"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "CompileModel", "display_name": "Compile Model", "description": "", "python_module": "custom_nodes.ComfyUI-TeaCache", "category": "TeaCache", "output_node": false}, "TeaCacheForCogVideoX": {"input": {"required": {"model": ["COGVIDEOMODEL", {"tooltip": "The CogVideoX model the TeaCache will be applied to."}], "enable_teacache": ["BOOLEAN", {"default": true, "tooltip": "Enable teacache will speed up inference but may lose visual quality."}], "rel_l1_thresh": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 10.0, "step": 0.01, "tooltip": "How strongly to cache the output of diffusion model. This value must be non-negative."}]}}, "input_order": {"required": ["model", "enable_teacache", "rel_l1_thresh"]}, "output": ["COGVIDEOMODEL"], "output_is_list": [false], "output_name": ["model"], "name": "TeaCacheForCogVideoX", "display_name": "TeaCache For CogVideoX", "description": "", "python_module": "custom_nodes.ComfyUI-TeaCache", "category": "TeaCache", "output_node": false}, "ImageCompressor": {"input": {"required": {"format": [["PNG", "WEBP", "JPEG"]], "quality": ["INT", {"default": 85, "min": 1, "max": 100, "step": 1, "display": "slider"}], "resize_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1, "display": "slider"}], "compression_level": ["INT", {"default": 6, "min": 0, "max": 9, "step": 1, "display": "slider"}], "save_image": ["BOOLEAN", {"default": true}], "output_prefix": ["STRING", {"default": "compressed_"}], "images": ["IMAGE"]}, "optional": {"output_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["format", "quality", "resize_factor", "compression_level", "save_image", "output_prefix", "images"], "optional": ["output_path"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["compression_info", "images"], "name": "ImageCompressor", "display_name": "\ud83d\udc1fImage Compressor", "description": "", "python_module": "custom_nodes.comfyui-image-compressor", "category": "image", "output_node": true}, "BatchImageCompressor": {"input": {"required": {"format": [["PNG", "WEBP", "JPEG"]], "quality": ["INT", {"default": 85, "min": 1, "max": 100, "step": 1, "display": "slider"}], "resize_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1, "display": "slider"}], "compression_level": ["INT", {"default": 6, "min": 0, "max": 9, "step": 1, "display": "slider"}], "save_image": ["BOOLEAN", {"default": true}], "output_prefix": ["STRING", {"default": "compressed_"}], "input_path": ["STRING", {"default": "", "multiline": false}]}, "optional": {"output_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["format", "quality", "resize_factor", "compression_level", "save_image", "output_prefix", "input_path"], "optional": ["output_path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["compression_info"], "name": "BatchImageCompressor", "display_name": "\ud83d\udc1fBatch Image Compressor", "description": "", "python_module": "custom_nodes.comfyui-image-compressor", "category": "image", "output_node": true}, "AdainFilterLatent": {"input": {"required": {"latents": ["LATENT"], "reference": ["LATENT"], "filter_size": ["INT", {"default": 1, "min": 1, "max": 128}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "reference", "filter_size", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AdainFilterLatent", "display_name": "AdaIN Filter (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "AdainImage": {"input": {"required": {"images": ["IMAGE"], "reference": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "reference", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AdainImage", "display_name": "AdaIN (Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "AdainLatent": {"input": {"required": {"latents": ["LATENT"], "reference": ["LATENT"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "reference", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AdainLatent", "display_name": "AdaIN (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "AlphaClean": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "fill_holes": ["INT", {"default": 1, "min": 0, "max": 16, "step": 1}], "white_threshold": ["FLOAT", {"default": 0.9, "min": 0.01, "max": 1.0, "step": 0.01}], "extra_clip": ["FLOAT", {"default": 0.98, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "radius", "fill_holes", "white_threshold", "extra_clip"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AlphaClean", "display_name": "Alpha Clean (DEPRECATED, use MaskClean)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false, "deprecated": true}, "AlphaMatte": {"input": {"required": {"images": ["IMAGE"], "alpha_trimap": ["IMAGE"], "preblur": ["INT", {"default": 8, "min": 0, "max": 256, "step": 1}], "blackpoint": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 0.99, "step": 0.01}], "whitepoint": ["FLOAT", {"default": 0.99, "min": 0.01, "max": 1.0, "step": 0.01}], "max_iterations": ["INT", {"default": 1000, "min": 100, "max": 10000, "step": 100}], "estimate_fg": [["true", "false"]]}}, "input_order": {"required": ["images", "alpha_trimap", "preblur", "blackpoint", "whitepoint", "max_iterations", "estimate_fg"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["alpha", "fg", "bg"], "name": "AlphaMatte", "display_name": "Alpha Matte (DEPRECATED, use ImageMatting)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false, "deprecated": true}, "BatchAlign": {"input": {"required": {"images": ["IMAGE"], "ref_frame": ["INT", {"default": 0, "min": 0}], "direction": [["forward", "backward"]], "blur": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["images", "ref_frame", "direction", "blur"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["aligned", "flow"], "name": "BatchAlign", "display_name": "Batch Align (RAFT)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BatchAverageImage": {"input": {"required": {"images": ["IMAGE"], "operation": [["mean", "median"]]}}, "input_order": {"required": ["images", "operation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchAverageImage", "display_name": "Batch Average Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BatchAverageUnJittered": {"input": {"required": {"images": ["IMAGE"], "operation": [["mean", "median"]]}}, "input_order": {"required": ["images", "operation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchAverageUnJittered", "display_name": "Batch Average Un-Jittered", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image/jitter", "output_node": false}, "BatchNormalizeImage": {"input": {"required": {"images": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchNormalizeImage", "display_name": "Batch Normalize (Image)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BatchNormalizeLatent": {"input": {"required": {"latents": ["LATENT"], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "BatchNormalizeLatent", "display_name": "Batch Normalize (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "BetterFilmGrain": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 0.5, "min": 0.25, "max": 2.0, "step": 0.05}], "strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 2.0, "step": 0.01}], "toe": ["FLOAT", {"default": 0.0, "min": -0.2, "max": 0.5, "step": 0.001}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "scale", "strength", "saturation", "toe", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BetterFilmGrain", "display_name": "Better Film Grain", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BilateralFilterImage": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 8, "min": 1, "max": 64}], "sigma_color": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1000.0, "step": 0.01}], "sigma_space": ["FLOAT", {"default": 100.0, "min": 0.01, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["images", "size", "sigma_color", "sigma_space"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BilateralFilterImage", "display_name": "Bilateral Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BlurImageFast": {"input": {"required": {"images": ["IMAGE"], "radius_x": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}], "radius_y": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}]}}, "input_order": {"required": ["images", "radius_x", "radius_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BlurImageFast", "display_name": "Blur Image (Fast)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "BlurMaskFast": {"input": {"required": {"masks": ["MASK"], "radius_x": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}], "radius_y": ["INT", {"default": 1, "min": 0, "max": 1023, "step": 1}]}}, "input_order": {"required": ["masks", "radius_x", "radius_y"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BlurMaskFast", "display_name": "Blur Mask (Fast)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/mask", "output_node": false}, "ClampImage": {"input": {"required": {"image": ["IMAGE"], "blackpoint": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "whitepoint": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["image", "blackpoint", "whitepoint"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ClampImage", "display_name": "Clamp Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ClampOutliers": {"input": {"required": {"latents": ["LATENT"], "std_dev": ["FLOAT", {"default": 3.0, "min": 0.1, "max": 100.0, "step": 0.1, "round": 0.1}]}}, "input_order": {"required": ["latents", "std_dev"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ClampOutliers", "display_name": "Clamp Outliers", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "ColorMatchImage": {"input": {"required": {"images": ["IMAGE"], "reference": ["IMAGE"], "blur_type": [["blur", "guidedFilter"]], "blur_size": ["INT", {"default": 0, "min": 0, "max": 1023}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "reference", "blur_type", "blur_size", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorMatchImage", "display_name": "Color Match Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ConditioningSubtract": {"input": {"required": {"cond_orig": ["CONDITIONING"], "cond_subtract": ["CONDITIONING"], "subtract_strength": ["FLOAT", {"default": 1.0, "step": 0.01}]}}, "input_order": {"required": ["cond_orig", "cond_subtract", "subtract_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSubtract", "display_name": "ConditioningSubtract", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/conditioning", "output_node": false}, "ConvertNormals": {"input": {"required": {"normals": ["IMAGE"], "input_mode": [["BAE", "MiDaS", "Standard"]], "output_mode": [["BAE", "MiDaS", "Standard"]], "scale_XY": ["FLOAT", {"default": 1, "min": 0, "max": 100, "step": 0.001}], "normalize": ["BOOLEAN", {"default": true}], "fix_black": ["BOOLEAN", {"default": true}]}, "optional": {"optional_fill": ["IMAGE"]}}, "input_order": {"required": ["normals", "input_mode", "output_mode", "scale_XY", "normalize", "fix_black"], "optional": ["optional_fill"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConvertNormals", "display_name": "Convert Normals", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "CustomNoise": {"input": {"required": {"noise": ["LATENT"]}}, "input_order": {"required": ["noise"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "CustomNoise", "display_name": "CustomNoise", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/sampling", "output_node": false}, "DepthToNormals": {"input": {"required": {"depth": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.001, "max": 1000, "step": 0.001}], "output_mode": [["Standard", "BAE", "MiDaS"]]}}, "input_order": {"required": ["depth", "scale", "output_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["normals"], "name": "DepthToNormals", "display_name": "Depth To Normals", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "DifferenceChecker": {"input": {"required": {"images1": ["IMAGE"], "images2": ["IMAGE"], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1000.0, "step": 0.01, "round": 0.01}], "print_MAE": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images1", "images2", "multiplier", "print_MAE"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DifferenceChecker", "display_name": "Difference Checker", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": true}, "DilateErodeMask": {"input": {"required": {"masks": ["MASK"], "radius": ["INT", {"default": 0, "min": -1023, "max": 1023, "step": 1}], "shape": [["box", "circle"]]}}, "input_order": {"required": ["masks", "radius", "shape"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "DilateErodeMask", "display_name": "Dilate/Erode Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/mask", "output_node": false}, "EnhanceDetail": {"input": {"required": {"images": ["IMAGE"], "filter_radius": ["INT", {"default": 2, "min": 1, "max": 64, "step": 1}], "sigma": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 100.0, "step": 0.01}], "denoise": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}], "detail_mult": ["FLOAT", {"default": 2.0, "step": 0.01}]}}, "input_order": {"required": ["images", "filter_radius", "sigma", "denoise", "detail_mult"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "EnhanceDetail", "display_name": "Enhance Detail", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ExposureAdjust": {"input": {"required": {"images": ["IMAGE"], "stops": ["FLOAT", {"default": 0.0, "min": -100, "max": 100, "step": 0.01}], "input_mode": [["sRGB", "linear"]], "output_mode": [["sRGB", "linear"]], "tonemap": [["linear", "Reinhard", "linlog"], {"default": "Reinhard"}], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "stops", "input_mode", "output_mode", "tonemap", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ExposureAdjust", "display_name": "Exposure Adjust", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ExtractNFrames": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["frames"], "optional": ["images", "masks"]}, "output": ["LIST", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["index_list", "images", "masks"], "name": "ExtractNFrames", "display_name": "Extract N Frames", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image/frames", "output_node": false}, "FrequencyCombine": {"input": {"required": {"high_frequency": ["IMAGE"], "low_frequency": ["IMAGE"], "mode": [["subtract", "divide"]], "eps": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["high_frequency", "low_frequency", "mode", "eps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FrequencyCombine", "display_name": "Frequency Combine", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "FrequencySeparate": {"input": {"required": {"original": ["IMAGE"], "low_frequency": ["IMAGE"], "mode": [["subtract", "divide"]], "eps": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["original", "low_frequency", "mode", "eps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["high_frequency"], "name": "FrequencySeparate", "display_name": "Frequency Separate", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "GameOfLife": {"input": {"required": {"width": ["INT", {"default": 32, "min": 8, "max": 1024, "step": 1}], "height": ["INT", {"default": 32, "min": 8, "max": 1024, "step": 1}], "cell_size": ["INT", {"default": 16, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}], "threshold": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "steps": ["INT", {"default": 64, "min": 1, "max": 999999, "step": 1}]}, "optional": {"optional_start": ["MASK"]}}, "input_order": {"required": ["width", "height", "cell_size", "seed", "threshold", "steps"], "optional": ["optional_start"]}, "output": ["IMAGE", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "off", "on"], "name": "GameOfLife", "display_name": "Game Of Life", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "GuidedFilterImage": {"input": {"required": {"images": ["IMAGE"], "guide": ["IMAGE"], "size": ["INT", {"default": 4, "min": 0, "max": 1023}], "sigma": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["images", "guide", "size", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GuidedFilterImage", "display_name": "Guided Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "Hunyuan3Dv2LatentUpscaleBy": {"input": {"required": {"samples": ["LATENT"], "scale_by": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "scale_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Hunyuan3Dv2LatentUpscaleBy", "display_name": "Upscale Hunyuan3Dv2 Latent By", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "ImageConstant": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "red": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "green": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "blue": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["width", "height", "batch_size", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConstant", "display_name": "Image Constant Color (RGB)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ImageConstantHSV": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8192, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "hue": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "saturation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["width", "height", "batch_size", "hue", "saturation", "value"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConstantHSV", "display_name": "Image Constant Color (HSV)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "ImageMatting": {"input": {"required": {"images": ["IMAGE"], "trimap": ["MASK"], "preblur": ["INT", {"default": 8, "min": 0, "max": 256, "step": 1}], "blackpoint": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 0.99, "step": 0.01}], "whitepoint": ["FLOAT", {"default": 0.99, "min": 0.01, "max": 1.0, "step": 0.01}], "max_iterations": ["INT", {"default": 1000, "min": 10, "max": 10000, "step": 10}], "estimate_fg": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["images", "trimap", "preblur", "blackpoint", "whitepoint", "max_iterations", "estimate_fg"]}, "output": ["MASK", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["matte", "fg", "bg"], "name": "ImageMatting", "display_name": "Image Matting", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "InpaintConditionApply": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "inpaint_condition": ["INPAINT_CONDITION"], "noise_mask": ["BOOLEAN", {"default": false, "tooltip": "Add a noise mask to the latent so sampling will only happen within the mask. Might improve results or completely break things depending on the model."}]}, "optional": {"latents_optional": ["LATENT"]}}, "input_order": {"required": ["positive", "negative", "inpaint_condition", "noise_mask"], "optional": ["latents_optional"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InpaintConditionApply", "display_name": "Inpaint Condition Apply", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/conditioning", "output_node": false}, "InpaintConditionEncode": {"input": {"required": {"vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["vae", "pixels", "mask"]}, "output": ["INPAINT_CONDITION"], "output_is_list": [false], "output_name": ["inpaint_condition"], "name": "InpaintConditionEncode", "display_name": "Inpaint Condition Encode", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/conditioning", "output_node": false}, "InstructPixToPixConditioningAdvanced": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "new": ["LATENT"], "new_scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}], "original": ["LATENT"], "original_scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "new", "new_scale", "original", "original_scale"]}, "output": ["CONDITIONING", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["cond1", "cond2", "negative", "latent"], "name": "InstructPixToPixConditioningAdvanced", "display_name": "IP2P Conditioning Advanced", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/conditioning", "output_node": false}, "JitterImage": {"input": {"required": {"images": ["IMAGE"], "jitter_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "step": 0.1}]}}, "input_order": {"required": ["images", "jitter_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JitterImage", "display_name": "Jitter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image/jitter", "output_node": false}, "Keyer": {"input": {"required": {"images": ["IMAGE"], "operation": [["luminance", "saturation", "max", "min", "red", "green", "blue", "redscreen", "greenscreen", "bluescreen"]], "low": ["FLOAT", {"default": 0, "step": 0.001}], "high": ["FLOAT", {"default": 1, "step": 0.001}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.001, "step": 0.001}], "premult": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["images", "operation", "low", "high", "gamma", "premult"]}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "alpha", "mask"], "name": "Keyer", "display_name": "Keyer", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "LatentNormalizeShuffle": {"input": {"required": {"latents": ["LATENT"], "flatten": ["INT", {"default": 0, "min": 0, "max": 16}], "normalize": ["BOOLEAN", {"default": true}], "shuffle": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["latents", "flatten", "normalize", "shuffle"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentNormalizeShuffle", "display_name": "LatentNormalizeShuffle", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "RandnLikeLatent": {"input": {"required": {"latents": ["LATENT"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true, "tooltip": "The random seed used for creating the noise."}]}}, "input_order": {"required": ["latents", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RandnLikeLatent", "display_name": "RandnLikeLatent", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "LatentStats": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["STRING", "FLOAT", "FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false, false], "output_name": ["stats", "c0_mean", "c1_mean", "c2_mean", "c3_mean"], "name": "LatentStats", "display_name": "Latent Stats", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/utils", "output_node": true}, "MaskClean": {"input": {"required": {"mask": ["MASK"], "radius": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "fill_holes": ["INT", {"default": 1, "min": 0, "max": 16, "step": 1}], "white_threshold": ["FLOAT", {"default": 0.9, "min": 0.001, "max": 1.0, "step": 0.001}], "extra_clip": ["FLOAT", {"default": 0.98, "min": 0.001, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["mask", "radius", "fill_holes", "white_threshold", "extra_clip"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskClean", "display_name": "Mask (Alpha) Clean", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/mask", "output_node": false}, "MedianFilterImage": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 1, "min": 1, "max": 1023}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MedianFilterImage", "display_name": "Median Filter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "MergeFramesByIndex": {"input": {"required": {"index_list": ["LIST"], "orig_images": ["IMAGE"], "images": ["IMAGE"]}, "optional": {"orig_masks": ["MASK"], "masks": ["MASK"]}}, "input_order": {"required": ["index_list", "orig_images", "images"], "optional": ["orig_masks", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "MergeFramesByIndex", "display_name": "Merge Frames By Index", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image/frames", "output_node": false}, "ModelTest": {"input": {"required": {"model": ["MODEL"], "code": ["STRING", {"multiline": true, "default": "d = model.model.model_config.unet_config\nfor k in d.keys():\n    print(k, d[k])"}]}}, "input_order": {"required": ["model", "code"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelTest", "display_name": "Model Test", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/utils", "output_node": true}, "NormalMapSimple": {"input": {"required": {"images": ["IMAGE"], "scale_XY": ["FLOAT", {"default": 1, "min": 0, "max": 100, "step": 0.001}]}}, "input_order": {"required": ["images", "scale_XY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NormalMapSimple", "display_name": "Normal Map (Simple)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "OffsetLatentImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 8192, "step": 8}], "height": ["INT", {"default": 512, "min": 16, "max": 8192, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "offset_0": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_1": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_2": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}], "offset_3": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": 0.1}]}}, "input_order": {"required": ["width", "height", "batch_size", "offset_0", "offset_1", "offset_2", "offset_3"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "OffsetLatentImage", "display_name": "Offset Latent Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "PackVideoMask": {"input": {"required": {"mask": ["MASK"], "blend_mode": [["max", "min", "average"], {"default": "max"}], "causal": ["BOOLEAN", {"default": true, "tooltip": "First latent frame is a single frame"}], "stride": ["INT", {"default": 4, "min": 1, "tooltip": "downsampling factor to match VAE, ie 4 for Wan, 8 for LTXV"}]}}, "input_order": {"required": ["mask", "blend_mode", "causal", "stride"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "PackVideoMask", "display_name": "Pack Video Mask", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/mask", "output_node": false}, "PrintSigmas": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "PrintSigmas", "display_name": "Print Sigmas", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/utils", "output_node": true}, "RelightSimple": {"input": {"required": {"image": ["IMAGE"], "normals": ["IMAGE"], "x": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001}], "y": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001}], "z": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 1.0, "step": 0.001}], "brightness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100, "step": 0.01}]}}, "input_order": {"required": ["image", "normals", "x", "y", "z", "brightness"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RelightSimple", "display_name": "Relight (Simple)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "RemapRange": {"input": {"required": {"image": ["IMAGE"], "blackpoint": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "whitepoint": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "blackpoint", "whitepoint"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapRange", "display_name": "Remap Range", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "RestoreDetail": {"input": {"required": {"images": ["IMAGE"], "detail": ["IMAGE"], "mode": [["add", "multiply"]], "blur_type": [["blur", "guidedFilter"]], "blur_size": ["INT", {"default": 1, "min": 1, "max": 1023}], "factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["images", "detail", "mode", "blur_type", "blur_size", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RestoreDetail", "display_name": "Restore Detail", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "SharpenFilterLatent": {"input": {"required": {"latents": ["LATENT"], "filter_size": ["INT", {"default": 1, "min": 1, "max": 128}], "factor": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latents", "filter_size", "factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SharpenFilterLatent", "display_name": "Sharpen Filter (Latent)", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/latent", "output_node": false}, "ShuffleChannels": {"input": {"required": {"image": ["IMAGE"], "red": [["red", "green", "blue", "alpha", "white", "black"], {"default": "red"}], "green": [["red", "green", "blue", "alpha", "white", "black"], {"default": "green"}], "blue": [["red", "green", "blue", "alpha", "white", "black"], {"default": "blue"}], "alpha": [["red", "green", "blue", "alpha", "white", "black", "none"], {"default": "none"}]}}, "input_order": {"required": ["image", "red", "green", "blue", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShuffleChannels", "display_name": "Shuffle Channels", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "Tonemap": {"input": {"required": {"images": ["IMAGE"], "input_mode": [["linear", "sRGB"]], "output_mode": [["sRGB", "linear"]], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "input_mode", "output_mode", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tonemap", "display_name": "Tonemap", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "UnJitterImage": {"input": {"required": {"images": ["IMAGE"], "jitter_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "step": 0.1}], "oflow_align": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "jitter_scale", "oflow_align"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UnJitterImage", "display_name": "Un-Jitter Image", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image/jitter", "output_node": false}, "UnTonemap": {"input": {"required": {"images": ["IMAGE"], "input_mode": [["sRGB", "linear"]], "output_mode": [["linear", "sRGB"]], "tonemap_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}}, "input_order": {"required": ["images", "input_mode", "output_mode", "tonemap_scale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UnTonemap", "display_name": "UnTonemap", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/image", "output_node": false}, "VisualizeLatents": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VisualizeLatents", "display_name": "Visualize Latents", "description": "", "python_module": "custom_nodes.ComfyUI-Image-Filters", "category": "Image-Filters/utils", "output_node": false}, "LayerStyle: Gradient Map": {"input": {"required": {"image": ["IMAGE"], "start_color": ["STRING", {"default": "#015A52"}], "mid_color": ["STRING", {"default": "#02AF9F"}], "end_color": ["STRING", {"default": "#7FFFEC"}], "mid_point": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 1.0, "step": 0.01}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["image", "start_color", "mid_color", "end_color", "mid_point", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["image", "gradient"], "name": "LayerStyle: Gradient Map", "display_name": "LayerStyle: Gradient Map", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: LoadPSD": {"input": {"required": {"image": [[], {"image_upload": true}], "file_path": ["STRING", {"default": ""}], "include_hidden_layer": ["BOOLEAN", {"default": false}], "find_layer_by": [["layer_index", "layer_name"]], "layer_index": ["INT", {"default": 0, "min": -1, "max": 999, "step": 1}], "layer_name": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["image", "file_path", "include_hidden_layer", "find_layer_by", "layer_index", "layer_name"], "optional": []}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["flat_image", "layer_image", "all_layers"], "name": "LayerUtility: LoadPSD", "display_name": "LayerUtility: Load PSD(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerFilter: SoftLight": {"input": {"required": {"image": ["IMAGE"], "soft": ["FLOAT", {"default": 1, "min": 0.2, "max": 10, "step": 0.01}], "threshold": ["INT", {"default": -10, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "soft", "threshold", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: SoftLight", "display_name": "LayerFilter: SoftLight", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerMask: PersonMaskUltra": {"input": {"required": {"images": ["IMAGE"], "face": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "body": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "clothes": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "accessories": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "background": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "detail_range": ["INT", {"default": 16, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["images", "face", "hair", "body", "clothes", "accessories", "background", "confidence", "detail_range", "black_point", "white_point", "process_detail"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: PersonMaskUltra", "display_name": "LayerMask: PersonMaskUltra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: OuterGlow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "linear dodge(add)", "color dodge", "lighten", "dodge", "hard light", "linear light", "normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighter color", "overlay", "soft light", "vivid light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: OuterGlow V2", "display_name": "LayerStyle: OuterGlow V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: MaskInvert": {"input": {"required": {"mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["mask"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskInvert", "display_name": "LayerMask: MaskInvert", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageScaleRestore": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_by_longest_side": ["BOOLEAN", {"default": false}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}]}, "optional": {"mask": ["MASK"], "original_size": ["BOX"]}}, "input_order": {"required": ["image", "scale", "method", "scale_by_longest_side", "longest_side"], "optional": ["mask", "original_size"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleRestore", "display_name": "LayerUtility: ImageScaleRestore", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SegmentAnythingUltra V2": {"input": {"required": {"image": ["IMAGE"], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "prompt": ["STRING", {"default": "subject"}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}], "cache_model": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image", "sam_model", "grounding_dino_model", "threshold", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "prompt", "device", "max_megapixels", "cache_model"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegmentAnythingUltra V2", "display_name": "LayerMask: SegmentAnythingUltra V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: GradientOverlay": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "start_color": ["STRING", {"default": "#FFBF30"}], "start_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "end_color": ["STRING", {"default": "#FE0000"}], "end_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "angle": ["INT", {"default": 0, "min": -180, "max": 180, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "start_color", "start_alpha", "end_color", "end_alpha", "angle"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: GradientOverlay", "display_name": "LayerStyle: GradientOverlay", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: TransparentBackgroundUltra": {"input": {"required": {"image": ["IMAGE"], "model": [[]], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: TransparentBackgroundUltra", "display_name": "LayerMask: Transparent Background Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ImageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["L(LAB)", "A(Lab)", "B(Lab)", "R(RGB)", "G(RGB)", "B(RGB)", "alpha", "Y(YUV)", "U(YUV)", "V(YUV)", "H(HSV)", "S(HSV", "V(HSV)"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1, "display": "slider"}], "white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gray_point": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 9.99, "step": 0.01}], "invert_output_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "channel", "black_point", "white_point", "gray_point", "invert_output_mask"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: ImageToMask", "display_name": "LayerMask: Image To Mask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: LaMa": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "lama_model": [["lama", "ldm", "zits", "mat", "fcf", "manga", "spread"]], "device": [["cuda", "cpu"]], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 25, "min": -255, "max": 255, "step": 1}], "mask_blur": ["INT", {"default": 8, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "lama_model", "device", "invert_mask", "mask_grow", "mask_blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: LaMa", "display_name": "LayerUtility: LaMa(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageChannelSplit": {"input": {"required": {"image": ["IMAGE"], "mode": [["RGBA", "YCbCr", "LAB", "HSV"]]}, "optional": {}}, "input_order": {"required": ["image", "mode"], "optional": []}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["channel_1", "channel_2", "channel_3", "channel_4"], "name": "LayerUtility: ImageChannelSplit", "display_name": "LayerUtility: ImageChannelSplit", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: BenUltra": {"input": {"required": {"ben_model": ["BEN_MODEL"], "image": ["IMAGE"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 2, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}], "process_detail": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["ben_model", "image", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "max_megapixels", "process_detail"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: BenUltra", "display_name": "LayerMask: Ben Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadBenModel": {"input": {"required": {"model": [[]], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["model", "device"]}, "output": ["BEN_MODEL"], "output_is_list": [false], "output_name": ["ben_model"], "name": "LayerMask: LoadBenModel", "display_name": "LayerMask: Load Ben Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ColorPicker": {"input": {"required": {"color": ["COLOR", {"default": "#FFFFFF"}], "mode": [["HEX", "DEC"]]}, "optional": {}}, "input_order": {"required": ["color", "mode"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["value"], "name": "LayerUtility: ColorPicker", "display_name": "LayerUtility: ColorPicker", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: BatchSelector": {"input": {"required": {"select": ["STRING", {"default": "0,"}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["select"], "optional": ["images", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: BatchSelector", "display_name": "LayerUtility: Batch Selector", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: ImageBlendAdvance V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "x_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "y_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "x_percent", "y_percent", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": ["layer_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageBlendAdvance V2", "display_name": "LayerUtility: ImageBlendAdvance V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskEdgeUltraDetail": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "method": [["PyMatting", "OpenCV-GuidedFilter"]], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "fix_gap": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "detail_range": ["INT", {"default": 12, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "method", "mask_grow", "fix_gap", "fix_threshold", "detail_range", "black_point", "white_point"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MaskEdgeUltraDetail", "display_name": "LayerMask: MaskEdgeUltraDetail", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: Sharp & Soft": {"input": {"required": {"images": ["IMAGE"], "enhance": [["very sharp", "sharp", "soft", "very soft", "None"]]}, "optional": {}}, "input_order": {"required": ["images", "enhance"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: Sharp & Soft", "display_name": "LayerFilter: Sharp & Soft", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: ImageHub": {"input": {"required": {"output": ["INT", {"default": 1, "min": 1, "max": 9, "step": 1}], "random_output": ["BOOLEAN", {"default": false}]}, "optional": {"input1_image": ["IMAGE"], "input1_mask": ["MASK"], "input2_image": ["IMAGE"], "input2_mask": ["MASK"], "input3_image": ["IMAGE"], "input3_mask": ["MASK"], "input4_image": ["IMAGE"], "input4_mask": ["MASK"], "input5_image": ["IMAGE"], "input5_mask": ["MASK"], "input6_image": ["IMAGE"], "input6_mask": ["MASK"], "input7_image": ["IMAGE"], "input7_mask": ["MASK"], "input8_image": ["IMAGE"], "input8_mask": ["MASK"], "input9_image": ["IMAGE"], "input9_mask": ["MASK"]}}, "input_order": {"required": ["output", "random_output"], "optional": ["input1_image", "input1_mask", "input2_image", "input2_mask", "input3_image", "input3_mask", "input4_image", "input4_mask", "input5_image", "input5_mask", "input6_image", "input6_mask", "input7_image", "input7_mask", "input8_image", "input8_mask", "input9_image", "input9_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageHub", "display_name": "LayerUtility: ImageHub", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Levels": {"input": {"required": {"image": ["IMAGE"], "channel": [["RGB", "red", "green", "blue"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1, "display": "slider"}], "white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gray_point": ["FLOAT", {"default": 1, "min": 0.01, "max": 9.99, "step": 0.01}], "output_black_point": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "output_white_point": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "channel", "black_point", "white_point", "gray_point", "output_black_point", "output_white_point"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Levels", "display_name": "LayerColor: Levels", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: Stroke": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 8, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "stroke_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "stroke_grow", "stroke_width", "blur", "stroke_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: Stroke", "display_name": "LayerStyle: Stroke", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerFilter: AddGrain": {"input": {"required": {"image": ["IMAGE"], "grain_power": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "grain_power", "grain_scale", "grain_sat"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: AddGrain", "display_name": "LayerFilter: Add Grain", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: UserPromptGeneratorTxt2ImgPrompt": {"input": {"required": {"template": [["SD txt2img prompt"]], "describe": ["STRING", {"default": "1 girl", "multiline": true}], "limit_words": ["INT", {"default": 200, "min": 2, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["template", "describe", "limit_words"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorTxt2ImgPrompt", "display_name": "LayerUtility: UserPrompt Generator Txt2Img(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference": {"input": {"required": {"template": [["SD txt2img prompt"]], "reference_text": ["STRING", {"multiline": false, "forceInput": true}], "describe": ["STRING", {"default": "1 girl", "multiline": true}], "limit_words": ["INT", {"default": 200, "min": 2, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["template", "reference_text", "describe", "limit_words"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference", "display_name": "LayerUtility: UserPrompt Generator Txt2Img with Reference(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: UserPromptGeneratorReplaceWord": {"input": {"required": {"orig_prompt": ["STRING", {"forceInput": true}], "template": [["prompt replace word"]], "exclude_word": ["STRING", {"default": ""}], "replace_with_word": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["orig_prompt", "template", "exclude_word", "replace_with_word"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["user_prompt"], "name": "LayerUtility: UserPromptGeneratorReplaceWord", "display_name": "LayerUtility: UserPrompt Generator Replace Word(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerColor: LAB": {"input": {"required": {"image": ["IMAGE"], "L": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "A": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "B": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "L", "A", "B"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: LAB", "display_name": "LayerColor: LAB", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: MaskByColor": {"input": {"required": {"image": ["IMAGE"], "color": ["COLOR", {"default": "#FFFFFF"}], "color_in_HEX": ["STRING", {"default": ""}], "threshold": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "fix_gap": ["INT", {"default": 2, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "color", "color_in_HEX", "threshold", "fix_gap", "fix_threshold", "invert_mask"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskByColor", "display_name": "LayerMask: Mask by Color", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: CropByMask": {"input": {"required": {"image": ["IMAGE"], "mask_for_crop": ["MASK"], "invert_mask": ["BOOLEAN", {"default": false}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "top_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "bottom_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "left_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "right_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "mask_for_crop", "invert_mask", "detect", "top_reserve", "bottom_reserve", "left_reserve", "right_reserve"], "optional": []}, "output": ["IMAGE", "MASK", "BOX", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["croped_image", "croped_mask", "crop_box", "box_preview"], "name": "LayerUtility: CropByMask", "display_name": "LayerUtility: CropByMask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskBoxDetect": {"input": {"required": {"mask": ["MASK"], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "x_adjust": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "y_adjust": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "scale_adjust": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["mask", "detect", "x_adjust", "y_adjust", "scale_adjust"], "optional": []}, "output": ["IMAGE", "FLOAT", "FLOAT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["box_preview", "x_percent", "y_percent", "width", "height", "x", "y"], "name": "LayerMask: MaskBoxDetect", "display_name": "LayerMask: MaskBoxDetect", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageShift": {"input": {"required": {"image": ["IMAGE"], "shift_x": ["INT", {"default": 256, "min": -9999, "max": 9999, "step": 1}], "shift_y": ["INT", {"default": 256, "min": -9999, "max": 9999, "step": 1}], "cyclic": ["BOOLEAN", {"default": true}], "background_color": ["STRING", {"default": "#000000"}], "border_mask_width": ["INT", {"default": 20, "min": 0, "max": 999, "step": 1}], "border_mask_blur": ["INT", {"default": 12, "min": 0, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shift_x", "shift_y", "cyclic", "background_color", "border_mask_width", "border_mask_blur"], "optional": ["mask"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "border_mask"], "name": "LayerUtility: ImageShift", "display_name": "LayerUtility: ImageShift", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: HLFrequencyDetailRestore": {"input": {"required": {"image": ["IMAGE"], "detail_image": ["IMAGE"], "keep_high_freq": ["INT", {"default": 64, "min": 0, "max": 1023}], "erase_low_freq": ["INT", {"default": 32, "min": 0, "max": 1023}], "mask_blur": ["INT", {"default": 16, "min": 0, "max": 1023}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "detail_image", "keep_high_freq", "erase_low_freq", "mask_blur"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: HLFrequencyDetailRestore", "display_name": "LayerUtility: H/L Frequency Detail Restore", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: PrintInfo": {"input": {"required": {"anything": ["*", {}]}}, "input_order": {"required": ["anything"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PrintInfo", "display_name": "LayerUtility: PrintInfo", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": true}, "LayerMask: MaskEdgeUltraDetail V2": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "mask_grow": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "fix_gap": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "edge_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "edte_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "mask", "method", "mask_grow", "fix_gap", "fix_threshold", "edge_erode", "edte_dilate", "black_point", "white_point", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MaskEdgeUltraDetail V2", "display_name": "LayerMask: MaskEdgeUltraDetail V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: RandomGenerator": {"input": {"required": {"min_value": ["FLOAT", {"default": 0, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 10, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "float_decimal_places": ["INT", {"default": 1, "min": 1, "max": 14, "step": 1}], "fix_seed": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["min_value", "max_value", "float_decimal_places", "fix_seed"], "optional": ["image"]}, "output": ["INT", "FLOAT", "BOOLEAN"], "output_is_list": [false, false, false], "output_name": ["int", "float", "bool"], "name": "LayerUtility: RandomGenerator", "display_name": "LayerUtility: Random Generator", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: RandomGeneratorV2": {"input": {"required": {"min_value": ["FLOAT", {"default": 0, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 10, "min": -100000000000000.0, "max": 100000000000000.0, "step": 0.01}], "least": ["FLOAT", {"default": 0, "min": 0, "max": 100000000000000.0, "step": 0.01}], "float_decimal_places": ["INT", {"default": 1, "min": 1, "max": 14, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 100000000000000.0, "step": 1}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["min_value", "max_value", "least", "float_decimal_places", "seed"], "optional": ["image"]}, "output": ["INT", "FLOAT", "BOOLEAN"], "output_is_list": [false, false, false], "output_name": ["int", "float", "bool"], "name": "LayerUtility: RandomGeneratorV2", "display_name": "LayerUtility: Random Generator V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: ImageChannelMerge": {"input": {"required": {"channel_1": ["IMAGE"], "channel_2": ["IMAGE"], "channel_3": ["IMAGE"], "mode": [["RGBA", "YCbCr", "LAB", "HSV"]]}, "optional": {"channel_4": ["IMAGE"]}}, "input_order": {"required": ["channel_1", "channel_2", "channel_3", "mode"], "optional": ["channel_4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageChannelMerge", "display_name": "LayerUtility: ImageChannelMerge", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ColorImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {}}, "input_order": {"required": ["width", "height", "color"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ColorImage", "display_name": "LayerUtility: ColorImage", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SegmentAnythingUltra": {"input": {"required": {"image": ["IMAGE"], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "detail_range": ["INT", {"default": 16, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}], "prompt": ["STRING", {"default": "subject"}], "cache_model": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image", "sam_model", "grounding_dino_model", "threshold", "detail_range", "black_point", "white_point", "process_detail", "prompt", "cache_model"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegmentAnythingUltra", "display_name": "LayerMask: SegmentAnythingUltra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageTaggerSave": {"input": {"required": {"image": ["IMAGE"], "tag_text": ["STRING", {"default": "", "forceInput": true}], "custom_path": ["STRING", {"default": ""}], "filename_prefix": ["STRING", {"default": "comfyui"}], "timestamp": [["None", "second", "millisecond"]], "format": [["png", "jpg"]], "quality": ["INT", {"default": 80, "min": 10, "max": 100, "step": 1}], "preview": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image", "tag_text", "custom_path", "filename_prefix", "timestamp", "format", "quality", "preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: ImageTaggerSave", "display_name": "LayerUtility: Image Tagger Save", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerUtility: RGB Value": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["R", "G", "B"], "name": "LayerUtility: RGB Value", "display_name": "LayerUtility: RGB Value", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: PurgeVRAM": {"input": {"required": {"anything": ["*", {}], "purge_cache": ["BOOLEAN", {"default": true}], "purge_models": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["anything", "purge_cache", "purge_models"], "optional": []}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: PurgeVRAM", "display_name": "LayerUtility: Purge VRAM", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerUtility: ImageAutoCrop": {"input": {"required": {"image": ["IMAGE"], "background_color": ["STRING", {"default": "#FFFFFF"}], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "detect_mask"]], "proportional_width": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "scale_to_longest_side": ["BOOLEAN", {"default": true}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "border_reserve": ["INT", {"default": 100, "min": -9999, "max": 9999, "step": 1}], "ultra_detail_range": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "matting_method": [["RMBG 1.4", "SegmentAnything"]], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "sam_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "sam_prompt": ["STRING", {"default": "subject"}]}, "optional": {}}, "input_order": {"required": ["image", "background_color", "aspect_ratio", "proportional_width", "proportional_height", "scale_to_longest_side", "longest_side", "detect", "border_reserve", "ultra_detail_range", "matting_method", "sam_model", "grounding_dino_model", "sam_threshold", "sam_prompt"], "optional": []}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["cropped_image", "box_preview", "cropped_mask"], "name": "LayerUtility: ImageAutoCrop", "display_name": "LayerUtility: ImageAutoCrop(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: InnerGlow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "add", "lighter", "normal", "multply", "subtract", "difference", "darker", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerGlow", "display_name": "LayerStyle: InnerGlow", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerFilter: MotionBlur": {"input": {"required": {"image": ["IMAGE"], "angle": ["INT", {"default": 0, "min": -90, "max": 90, "step": 1}], "blur": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "angle", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: MotionBlur", "display_name": "LayerFilter: MotionBlur", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: GetMainColors": {"input": {"required": {"image": ["IMAGE"], "k_means_algorithm": [["lloyd", "elkan"]]}, "optional": {}}, "input_order": {"required": ["image", "k_means_algorithm"], "optional": []}, "output": ["IMAGE", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["preview_image", "color_1", "color_2", "color_3", "color_4", "color_5"], "name": "LayerUtility: GetMainColors", "display_name": "LayerUtility: Get Main Colors", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: YUV": {"input": {"required": {"image": ["IMAGE"], "Y": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "U": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "V": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "Y", "U", "V"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: YUV", "display_name": "LayerColor: YUV", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: SaveImagePlus": {"input": {"required": {"images": ["IMAGE"], "custom_path": ["STRING", {"default": ""}], "filename_prefix": ["STRING", {"default": "comfyui"}], "timestamp": [["None", "second", "millisecond"]], "format": [["png", "jpg"]], "quality": ["INT", {"default": 80, "min": 10, "max": 100, "step": 1}], "meta_data": ["BOOLEAN", {"default": false}], "blind_watermark": ["STRING", {"default": ""}], "save_workflow_as_json": ["BOOLEAN", {"default": false}], "preview": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "custom_path", "filename_prefix", "timestamp", "format", "quality", "meta_data", "blind_watermark", "save_workflow_as_json", "preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: SaveImagePlus", "display_name": "LayerUtility: SaveImage Plus(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerUtility: SD3NegativeConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "zero_out_start": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "zero_out_start"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "LayerUtility: SD3NegativeConditioning", "display_name": "LayerUtility: SD3 Negative Conditioning(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerMask: MediapipeFacialSegment": {"input": {"required": {"image": ["IMAGE"], "left_eye": ["BOOLEAN", {"default": true}], "left_eyebrow": ["BOOLEAN", {"default": true}], "right_eye": ["BOOLEAN", {"default": true}], "right_eyebrow": ["BOOLEAN", {"default": true}], "lips": ["BOOLEAN", {"default": true}], "tooth": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["image", "left_eye", "left_eyebrow", "right_eye", "right_eyebrow", "lips", "tooth"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: MediapipeFacialSegment", "display_name": "LayerMask: Mediapipe Facial Segment(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: PromptEmbellish": {"input": {"required": {"api": [["gemini-1.5-flash", "gemini-pro-vision"]], "token_limit": ["INT", {"default": 40, "min": 2, "max": 1024, "step": 1}], "describe": ["STRING", {"default": "", "multiline": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["api", "token_limit", "describe"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PromptEmbellish", "display_name": "LayerUtility: PromptEmbellish(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerMask: BiRefNetUltraV2": {"input": {"required": {"image": ["IMAGE"], "birefnet_model": ["BIREFNET_MODEL"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 2, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": false}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "birefnet_model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: BiRefNetUltraV2", "display_name": "LayerMask: BiRefNet Ultra V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadBiRefNetModel": {"input": {"required": {"model": [[]]}}, "input_order": {"required": ["model"]}, "output": ["BIREFNET_MODEL"], "output_is_list": [false], "output_name": ["birefnet_model"], "name": "LayerMask: LoadBiRefNetModel", "display_name": "LayerMask: Load BiRefNet Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadBiRefNetModelV2": {"input": {"required": {"version": [["BiRefNet-General", "RMBG-2.0"], {"default": "BiRefNet-General"}]}}, "input_order": {"required": ["version"]}, "output": ["BIREFNET_MODEL"], "output_is_list": [false], "output_name": ["birefnet_model"], "name": "LayerMask: LoadBiRefNetModelV2", "display_name": "LayerMask: Load BiRefNet Model V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerColor: LUT Apply": {"input": {"required": {"image": ["IMAGE"], "LUT": [["BlueArchitecture.cube"]], "color_space": [["linear", "log"]], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "LUT", "color_space", "strength"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: LUT Apply", "display_name": "LayerColor: LUT Apply", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: Gamma": {"input": {"required": {"image": ["IMAGE"], "gamma": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "gamma"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Gamma", "display_name": "LayerColor: Gamma", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: MaskByDifferent": {"input": {"required": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "gain": ["FLOAT", {"default": 1.5, "min": 0.1, "max": 100, "step": 0.1}], "fix_gap": ["INT", {"default": 4, "min": 0, "max": 32, "step": 1}], "fix_threshold": ["FLOAT", {"default": 0.75, "min": 0.01, "max": 0.99, "step": 0.01}], "main_subject_detect": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image_1", "image_2", "gain", "fix_gap", "fix_threshold", "main_subject_detect"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskByDifferent", "display_name": "LayerMask: MaskByDifferent(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerColor: Color of Shadow & Highlight": {"input": {"required": {"image": ["IMAGE"], "shadow_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_brightness", "shadow_saturation", "shadow_hue", "shadow_level_offset", "shadow_range", "highlight_brightness", "highlight_saturation", "highlight_hue", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Color of Shadow & Highlight", "display_name": "LayerColor: Color of Shadow & Highlight", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: ColorofShadowHighlightV2": {"input": {"required": {"image": ["IMAGE"], "shadow_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "shadow_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "highlight_hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_brightness", "shadow_saturation", "shadow_hue", "shadow_level_offset", "shadow_range", "highlight_brightness", "highlight_saturation", "highlight_hue", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorofShadowHighlightV2", "display_name": "LayerColor: Colorof Shadow Highlight V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: InnerShadow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 2, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 15, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerShadow", "display_name": "LayerStyle: InnerShadow", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ExtendCanvasV2": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "top": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "bottom": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "left": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "right": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "top", "bottom", "left", "right", "color"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ExtendCanvasV2", "display_name": "LayerUtility: ExtendCanvas V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskMotionBlur": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "blur": ["INT", {"default": 20, "min": 1, "max": 9999, "step": 1}], "angle": ["FLOAT", {"default": 0, "min": -360, "max": 360, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "blur", "angle"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskMotionBlur", "display_name": "LayerMask: MaskMotionBlur", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerStyle: DropShadow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 6, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 18, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: DropShadow", "display_name": "LayerStyle: DropShadow", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ImageRemoveAlpha": {"input": {"required": {"RGBA_image": ["IMAGE"], "fill_background": ["BOOLEAN", {"default": false}], "background_color": ["STRING", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["RGBA_image", "fill_background", "background_color"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGB_image"], "name": "LayerUtility: ImageRemoveAlpha", "display_name": "LayerUtility: ImageRemoveAlpha", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: TextImage V2": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "Text"}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "spacing": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "leading": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "horizontal_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "vertical_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "scale": ["FLOAT", {"default": 80, "min": 0.1, "max": 999, "step": 0.01}], "variation_range": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "variation_seed": ["INT", {"default": 1754162517, "min": 0, "max": 999999999999, "step": 1}], "layout": [["horizontal", "vertical"]], "width": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "text_color": ["STRING", {"default": "#FFA000"}], "background_color": ["STRING", {"default": "#FFFFFF"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "spacing", "leading", "horizontal_border", "vertical_border", "scale", "variation_range", "variation_seed", "layout", "width", "height", "text_color", "background_color"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: TextImage V2", "display_name": "LayerUtility: TextImage V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GetImageSize": {"input": {"required": {"image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image"], "optional": []}, "output": ["INT", "INT", "BOX"], "output_is_list": [false, false, false], "output_name": ["width", "height", "original_size"], "name": "LayerUtility: GetImageSize", "display_name": "LayerUtility: GetImageSize", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadJoyCaption2Model": {"input": {"required": {"llm_model": [["Orenguteng/Llama-3.1-8B-Lexi-Uncensored-V2", "unsloth/Meta-Llama-3.1-8B-Instruct"]], "device": [["cuda"]], "dtype": [["nf4", "bf16"]], "vlm_lora": [["text_model", "none"]]}, "optional": {}}, "input_order": {"required": ["llm_model", "device", "dtype", "vlm_lora"], "optional": []}, "output": ["JoyCaption2_Model"], "output_is_list": [true], "output_name": ["joy2_model"], "name": "LayerUtility: LoadJoyCaption2Model", "display_name": "LayerUtility: Load JoyCaption2 Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: JoyCaption2Split": {"input": {"required": {"image": ["IMAGE"], "joy2_model": ["JoyCaption2_Model"], "caption_type": [["Descriptive", "Descriptive (Informal)", "Training Prompt", "MidJourney", "Booru tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "user_prompt": ["STRING", {"default": "", "multiline": false}], "max_new_tokens": ["INT", {"default": 300, "min": 8, "max": 4096, "step": 1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0, "max": 1, "step": 0.01}], "temperature": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}]}, "optional": {"extra_options": ["JoyCaption2ExtraOption"]}}, "input_order": {"required": ["image", "joy2_model", "caption_type", "caption_length", "user_prompt", "max_new_tokens", "top_p", "temperature"], "optional": ["extra_options"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: JoyCaption2Split", "display_name": "LayerUtility: JoyCaption2 Split(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: JoyCaption2": {"input": {"required": {"image": ["IMAGE"], "llm_model": [["Orenguteng/Llama-3.1-8B-Lexi-Uncensored-V2", "unsloth/Meta-Llama-3.1-8B-Instruct"]], "device": [["cuda"]], "dtype": [["nf4", "bf16"]], "vlm_lora": [["text_model", "none"]], "caption_type": [["Descriptive", "Descriptive (Informal)", "Training Prompt", "MidJourney", "Booru tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "user_prompt": ["STRING", {"default": "", "multiline": false}], "max_new_tokens": ["INT", {"default": 300, "min": 8, "max": 4096, "step": 1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0, "max": 1, "step": 0.01}], "temperature": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "cache_model": ["BOOLEAN", {"default": false}], "use_global_model": ["BOOLEAN", {"default": false}]}, "optional": {"extra_options": ["JoyCaption2ExtraOption"]}}, "input_order": {"required": ["image", "llm_model", "device", "dtype", "vlm_lora", "caption_type", "caption_length", "user_prompt", "max_new_tokens", "top_p", "temperature", "cache_model", "use_global_model"], "optional": ["extra_options"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: JoyCaption2", "display_name": "LayerUtility: JoyCaption2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: JoyCaption2ExtraOptions": {"input": {"required": {"refer_character_name": ["BOOLEAN", {"default": false}], "exclude_people_info": ["BOOLEAN", {"default": false}], "include_lighting": ["BOOLEAN", {"default": false}], "include_camera_angle": ["BOOLEAN", {"default": false}], "include_watermark": ["BOOLEAN", {"default": false}], "include_JPEG_artifacts": ["BOOLEAN", {"default": false}], "include_exif": ["BOOLEAN", {"default": false}], "exclude_sexual": ["BOOLEAN", {"default": false}], "exclude_image_resolution": ["BOOLEAN", {"default": false}], "include_aesthetic_quality": ["BOOLEAN", {"default": false}], "include_composition_style": ["BOOLEAN", {"default": false}], "exclude_text": ["BOOLEAN", {"default": false}], "specify_depth_field": ["BOOLEAN", {"default": false}], "specify_lighting_sources": ["BOOLEAN", {"default": false}], "do_not_use_ambiguous_language": ["BOOLEAN", {"default": false}], "include_nsfw": ["BOOLEAN", {"default": false}], "only_describe_most_important_elements": ["BOOLEAN", {"default": false}], "character_name": ["STRING", {"default": "Huluwa", "multiline": false}]}, "optional": {}}, "input_order": {"required": ["refer_character_name", "exclude_people_info", "include_lighting", "include_camera_angle", "include_watermark", "include_JPEG_artifacts", "include_exif", "exclude_sexual", "exclude_image_resolution", "include_aesthetic_quality", "include_composition_style", "exclude_text", "specify_depth_field", "specify_lighting_sources", "do_not_use_ambiguous_language", "include_nsfw", "only_describe_most_important_elements", "character_name"], "optional": []}, "output": ["JoyCaption2ExtraOption"], "output_is_list": [false], "output_name": ["extra_option"], "name": "LayerUtility: JoyCaption2ExtraOptions", "display_name": "LayerUtility: JoyCaption2 Extra Options(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: HumanPartsUltra": {"input": {"required": {"image": ["IMAGE"], "face": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8138)", "label_off": "disabled(\u8138)"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u53d1)", "label_off": "disabled(\u5934\u53d1)"}], "glasses": ["BOOLEAN", {"default": false, "label_on": "enabled(\u773c\u955c)", "label_off": "disabled(\u773c\u955c)"}], "top_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u88c5)", "label_off": "disabled(\u4e0a\u88c5)"}], "bottom_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0b\u88c5)", "label_off": "disabled(\u4e0b\u88c5)"}], "torso_skin": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8eaf\u5e72)", "label_off": "disabled(\u8eaf\u5e72)"}], "left_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u81c2)", "label_off": "disabled(\u5de6\u81c2)"}], "right_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u81c2)", "label_off": "disabled(\u53f3\u81c2)"}], "left_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u817f)", "label_off": "disabled(\u5de6\u817f)"}], "right_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u817f)", "label_off": "disabled(\u53f3\u817f)"}], "left_foot": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u811a)", "label_off": "disabled(\u5de6\u811a)"}], "right_foot": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u811a)", "label_off": "disabled(\u53f3\u811a)"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 8, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "face", "hair", "glasses", "top_clothes", "bottom_clothes", "torso_skin", "left_arm", "right_arm", "left_leg", "right_leg", "left_foot", "right_foot", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: HumanPartsUltra", "display_name": "LayerMask: Human Parts Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: GradientImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "start_color": ["STRING", {"default": "#FFFFFF"}], "end_color": ["STRING", {"default": "#000000"}]}, "optional": {}}, "input_order": {"required": ["width", "height", "angle", "start_color", "end_color"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: GradientImage", "display_name": "LayerUtility: GradientImage", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: GradientOverlay V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "start_color": ["STRING", {"default": "#FFBF30"}], "start_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "end_color": ["STRING", {"default": "#FE0000"}], "end_alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "angle": ["INT", {"default": 0, "min": -180, "max": 180, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "start_color", "start_alpha", "end_color", "end_alpha", "angle"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: GradientOverlay V2", "display_name": "LayerStyle: GradientOverlay V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: BiRefNetUltra": {"input": {"required": {"image": ["IMAGE"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: BiRefNetUltra", "display_name": "LayerMask: BiRefNetUltra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: MaskGrow": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "grow": ["INT", {"default": 4, "min": -999, "max": 999, "step": 1}], "blur": ["INT", {"default": 4, "min": 0, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "grow", "blur"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGrow", "display_name": "LayerMask: MaskGrow", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: GetColorToneV2": {"input": {"required": {"image": ["IMAGE"], "mode": [["main_color", "average"]], "color_of": [["mask", "entire", "background", "subject"]], "remove_bkgd_method": [["none", "BiRefNet", "RMBG 1.4"]], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "mode", "color_of", "remove_bkgd_method", "invert_mask", "mask_grow"], "optional": ["mask"]}, "output": ["IMAGE", "STRING", "LIST", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["image", "color_in_hex", "HSV color in list", "mask"], "name": "LayerUtility: GetColorToneV2", "display_name": "LayerUtility: GetColorTone V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: ColorOverlay": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "color": ["STRING", {"default": "#FFBF30"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: ColorOverlay", "display_name": "LayerStyle: ColorOverlay", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerStyle: ColorOverlay V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "color": ["STRING", {"default": "#FFBF30"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: ColorOverlay V2", "display_name": "LayerStyle: ColorOverlay V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerMask: MaskEdgeShrink": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "shrink_level": ["INT", {"default": 4, "min": 0, "max": 16, "step": 1}], "soft": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "edge_shrink": ["INT", {"default": 1, "min": 0, "max": 999, "step": 1}], "edge_reserve": ["INT", {"default": 25, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "shrink_level", "soft", "edge_shrink", "edge_reserve"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskEdgeShrink", "display_name": "LayerMask: MaskEdgeShrink", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: CreateQRCode": {"input": {"required": {"size": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "border": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "text": ["STRING", {"default": "", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["size", "border", "text"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: CreateQRCode", "display_name": "LayerUtility: Create QRCode(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: DecodeQRCode": {"input": {"required": {"image": ["IMAGE"], "pre_blur": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "pre_blur"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "LayerUtility: DecodeQRCode", "display_name": "LayerUtility: Decode QRCode(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerFilter: LightLeak": {"input": {"required": {"image": ["IMAGE"], "light": [["random", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32"]], "corner": [["left_top", "right_top", "left_bottom", "right_bottom"]], "hue": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "saturation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "light", "corner", "hue", "saturation", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: LightLeak", "display_name": "LayerFilter: LightLeak", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerMask: SAM2Ultra": {"input": {"required": {"image": ["IMAGE"], "bboxes": ["BBOXES"], "sam2_model": [["sam2_hiera_base_plus.safetensors", "sam2_hiera_large.safetensors", "sam2_hiera_small.safetensors", "sam2_hiera_tiny.safetensors", "sam2.1_hiera_base_plus.safetensors", "sam2.1_hiera_large.safetensors", "sam2.1_hiera_small.safetensors", "sam2.1_hiera_tiny.safetensors"]], "precision": [["fp16", "bf16", "fp32"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}], "cache_model": ["BOOLEAN", {"default": false}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "bboxes", "sam2_model", "precision", "bbox_select", "select_index", "cache_model", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SAM2Ultra", "display_name": "LayerMask: SAM2 Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SAM2VideoUltra": {"input": {"required": {"image": ["IMAGE"], "sam2_model": [["sam2_hiera_base_plus.safetensors", "sam2_hiera_large.safetensors", "sam2_hiera_small.safetensors", "sam2_hiera_tiny.safetensors", "sam2.1_hiera_base_plus.safetensors", "sam2.1_hiera_large.safetensors", "sam2.1_hiera_small.safetensors", "sam2.1_hiera_tiny.safetensors"]], "precision": [["fp16", "bf16"]], "cache_model": ["BOOLEAN", {"default": false}], "individual_objects": ["BOOLEAN", {"default": false}], "mask_preview_color": ["STRING", {"default": "#FF0080"}], "detail_method": [["VITMatte"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda"]], "max_megapixels": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 10, "step": 0.1}]}, "optional": {"bboxes": ["BBOXES"], "first_frame_mask": ["MASK"], "pre_mask": ["MASK"]}}, "input_order": {"required": ["image", "sam2_model", "precision", "cache_model", "individual_objects", "mask_preview_color", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": ["bboxes", "first_frame_mask", "pre_mask"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["mask", "preview"], "name": "LayerMask: SAM2VideoUltra", "display_name": "LayerMask: SAM2 Video Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: SimpleTextImage": {"input": {"required": {"text": ["STRING", {"default": "text", "multiline": true}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "align": [["center", "left", "right"]], "char_per_line": ["INT", {"default": 80, "min": 1, "max": 8096, "step": 1}], "leading": ["INT", {"default": 8, "min": 0, "max": 8096, "step": 1}], "font_size": ["INT", {"default": 72, "min": 1, "max": 2500, "step": 1}], "text_color": ["STRING", {"default": "#FFFFFF"}], "stroke_width": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "stroke_color": ["STRING", {"default": "#FF8000"}], "x_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "y_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "align", "char_per_line", "leading", "font_size", "text_color", "stroke_width", "stroke_color", "x_offset", "y_offset", "width", "height"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: SimpleTextImage", "display_name": "LayerUtility: SimpleTextImage", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: BlendIf Mask": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_if": [["gray", "red", "green", "blue"]], "black_point": ["INT", {"default": 0, "min": 0, "max": 254, "step": 1, "display": "slider"}], "black_range": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "white_point": ["INT", {"default": 255, "min": 1, "max": 255, "step": 1, "display": "slider"}], "white_range": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "blend_if", "black_point", "black_range", "white_point", "white_range"], "optional": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: BlendIf Mask", "display_name": "LayerMask: BlendIf Mask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: CropBoxResolve": {"input": {"required": {"crop_box": ["BOX"]}, "optional": {}}, "input_order": {"required": ["crop_box"], "optional": []}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["x", "y", "width", "height"], "name": "LayerUtility: CropBoxResolve", "display_name": "LayerUtility: CropBoxResolve", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: InnerShadow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 5, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 2, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 15, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerShadow V2", "display_name": "LayerStyle: InnerShadow V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerFilter: ChannelShake": {"input": {"required": {"image": ["IMAGE"], "distance": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}], "angle": ["FLOAT", {"default": 40, "min": -360, "max": 360, "step": 0.1}], "mode": [["RGB", "RBG", "BGR", "BRG", "GBR", "GRB"]]}, "optional": {}}, "input_order": {"required": ["image", "distance", "angle", "mode"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: ChannelShake", "display_name": "LayerFilter: ChannelShake", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerColor: ColorAdapter": {"input": {"required": {"image": ["IMAGE"], "color_ref_image": ["IMAGE"], "opacity": ["INT", {"default": 75, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "color_ref_image", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorAdapter", "display_name": "LayerColor: ColorAdapter", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerFilter: SkinBeauty": {"input": {"required": {"image": ["IMAGE"], "smooth": ["INT", {"default": 20, "min": 1, "max": 64, "step": 1}], "threshold": ["INT", {"default": -10, "min": -255, "max": 255, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "smooth", "threshold", "opacity"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "beauty_mask"], "name": "LayerFilter: SkinBeauty", "display_name": "LayerFilter: SkinBeauty", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: PhiPrompt": {"input": {"required": {"model": [["auto", "Phi-3.5-mini-instruct", "Phi-3.5-vision-instruct"]], "device": [["cuda", "cpu"]], "dtype": [["fp16", "bf16", "fp32"]], "cache_model": ["BOOLEAN", {"default": false}], "system_prompt": ["STRING", {"default": "You are a helpful AI assistant.", "multiline": false}], "user_prompt": ["STRING", {"default": "Describe this image", "multiline": true}], "do_sample": ["BOOLEAN", {"default": true}], "temperature": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1, "step": 0.01}], "max_new_tokens": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["model", "device", "dtype", "cache_model", "system_prompt", "user_prompt", "do_sample", "temperature", "max_new_tokens"], "optional": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PhiPrompt", "display_name": "LayerUtility: Phi Prompt(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageAutoCrop V3": {"input": {"required": {"image": ["IMAGE"], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "original"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 99999999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 99999999, "step": 1}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_to_side": [["None", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "aspect_ratio", "proportional_width", "proportional_height", "method", "scale_to_side", "scale_to_length", "round_to_multiple"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["cropped_image", "box_preview"], "name": "LayerUtility: ImageAutoCrop V3", "display_name": "LayerUtility: ImageAutoCrop V3(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: AddBlindWaterMark": {"input": {"required": {"image": ["IMAGE"], "watermark_image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image", "watermark_image"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: AddBlindWaterMark", "display_name": "LayerUtility: Add BlindWaterMark(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: ShowBlindWaterMark": {"input": {"required": {"image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["watermark_image"], "name": "LayerUtility: ShowBlindWaterMark", "display_name": "LayerUtility: Show BlindWaterMark(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: ImageScaleByAspectRatio V2": {"input": {"required": {"aspect_ratio": [["original", "custom", "1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 100000000.0, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 100000000.0, "step": 1}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]], "scale_to_side": [["None", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 100000000.0, "step": 1}], "background_color": ["STRING", {"default": "#000000"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["aspect_ratio", "proportional_width", "proportional_height", "fit", "method", "round_to_multiple", "scale_to_side", "scale_to_length", "background_color"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleByAspectRatio V2", "display_name": "LayerUtility: ImageScaleByAspectRatio V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: Florence2Ultra": {"input": {"required": {"florence2_model": ["FLORENCE2"], "image": ["IMAGE"], "task": [["region to segmentation", "referring expression segmentation", "open vocabulary detection"], {"default": "region to segmentation"}], "text_input": ["STRING", {"default": "subject"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["florence2_model", "image", "task", "text_input", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: Florence2Ultra", "display_name": "LayerMask: Florence2 Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadFlorence2Model": {"input": {"required": {"version": [["base", "base-ft", "large", "large-ft", "DocVQA", "SD3-Captioner", "base-PromptGen", "CogFlorence-2-Large-Freeze", "CogFlorence-2.1-Large", "base-PromptGen-v1.5", "large-PromptGen-v1.5", "base-PromptGen-v2.0", "large-PromptGen-v2.0", "Florence-2-Flux", "Florence-2-Flux-Large"], {"default": "base"}]}}, "input_order": {"required": ["version"]}, "output": ["FLORENCE2"], "output_is_list": [false], "output_name": ["florence2_model"], "name": "LayerMask: LoadFlorence2Model", "display_name": "LayerMask: Load Florence2 Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: Florence2Image2Prompt": {"input": {"required": {"florence2_model": ["FLORENCE2"], "image": ["IMAGE"], "task": [["caption", "detailed caption", "more detailed caption", "description", "generate tags(PromptGen 1.5)", "mixed caption(PromptGen 1.5)", "mixed caption plus(PromptGen 2.0)", "analyze(PromptGen 2.0)", "object detection", "dense region caption", "region proposal", "region proposal (mask)", "caption to phrase grounding", "open vocabulary detection", "region to category", "region to description", "OCR", "OCR with region"], {"default": "more detailed caption"}], "text_input": ["STRING", {"default": ""}], "max_new_tokens": ["INT", {"default": 1024, "step": 1}], "num_beams": ["INT", {"default": 3, "min": 1, "step": 1}], "do_sample": ["BOOLEAN", {"default": false}], "fill_mask": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["florence2_model", "image", "task", "text_input", "max_new_tokens", "num_beams", "do_sample", "fill_mask"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "preview_image"], "name": "LayerUtility: Florence2Image2Prompt", "display_name": "LayerUtility: Florence2 Image2Prompt(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerUtility: ImageReel": {"input": {"required": {"image1": ["IMAGE"], "image1_text": ["STRING", {"multiline": false, "default": "image1"}], "image2_text": ["STRING", {"multiline": false, "default": "image2"}], "image3_text": ["STRING", {"multiline": false, "default": "image3"}], "image4_text": ["STRING", {"multiline": false, "default": "image4"}], "reel_height": ["INT", {"default": 512, "min": 64, "max": 2048}], "border": ["INT", {"default": 32, "min": 8, "max": 512}]}, "optional": {"image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["image1", "image1_text", "image2_text", "image3_text", "image4_text", "reel_height", "border"], "optional": ["image2", "image3", "image4"]}, "output": ["Reel"], "output_is_list": [false], "output_name": ["reel"], "name": "LayerUtility: ImageReel", "display_name": "LayerUtility: Image Reel", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageReelComposit": {"input": {"required": {"reel_1": ["Reel"], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "font_size": ["INT", {"default": 40, "min": 4, "max": 1024}], "border": ["INT", {"default": 32, "min": 8, "max": 512}], "color_theme": [["light", "dark"]]}, "optional": {"reel_2": ["Reel"], "reel_3": ["Reel"], "reel_4": ["Reel"]}}, "input_order": {"required": ["reel_1", "font_file", "font_size", "border", "color_theme"], "optional": ["reel_2", "reel_3", "reel_4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image1"], "name": "LayerUtility: ImageReelComposit", "display_name": "LayerUtility: Image Reel Composit", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Brightness & Contrast": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "contrast": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Brightness & Contrast", "display_name": "LayerColor: Brightness & Contrast", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: BrightnessContrastV2": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "contrast": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.0, "max": 3, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: BrightnessContrastV2", "display_name": "LayerColor: Brightness Contrast V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: YoloV8Detect": {"input": {"required": {"image": ["IMAGE"], "yolo_model": [[]], "mask_merge": [["all", "1", "2", "3", "4", "5", "6", "7", "8", "9"]]}, "optional": {}}, "input_order": {"required": ["image", "yolo_model", "mask_merge"], "optional": []}, "output": ["MASK", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["mask", "yolo_plot_image", "yolo_masks"], "name": "LayerMask: YoloV8Detect", "display_name": "LayerMask: YoloV8 Detect(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ColorName": {"input": {"required": {"color": ["STRING", {"default": "#000000", "forceInput": true}], "palette": [["xkcd", "css3", "html4"]]}, "optional": {}}, "input_order": {"required": ["color", "palette"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["color_name"], "name": "LayerUtility: ColorName", "display_name": "LayerUtility: Color Name", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: MaskGradient": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "gradient_side": [["top", "bottom", "left", "right"]], "gradient_scale": ["INT", {"default": 100, "min": 1, "max": 9999, "step": 1}], "gradient_offset": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "gradient_side", "gradient_scale", "gradient_offset", "opacity"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGradient", "display_name": "LayerMask: MaskGradient", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: Shadow & Highlight Mask": {"input": {"required": {"image": ["IMAGE"], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_level_offset", "shadow_range", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["shadow_mask", "highlight_mask"], "name": "LayerMask: Shadow & Highlight Mask", "display_name": "LayerMask: Shadow & Highlight Mask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ShadowHighlightMaskV2": {"input": {"required": {"image": ["IMAGE"], "shadow_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "shadow_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}], "highlight_level_offset": ["INT", {"default": 0, "min": -99, "max": 99, "step": 1}], "highlight_range": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "shadow_level_offset", "shadow_range", "highlight_level_offset", "highlight_range"], "optional": ["mask"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["shadow_mask", "highlight_mask"], "name": "LayerMask: ShadowHighlightMaskV2", "display_name": "LayerMask: Shadow Highlight Mask V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ImageBlend": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageBlend", "display_name": "LayerUtility: ImageBlend", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LayerImageTransform": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "x", "y", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: LayerImageTransform", "display_name": "LayerUtility: LayerImageTransform", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ExtendCanvas": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "top": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "left": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 99999, "step": 1}], "color": ["COLOR", {"default": "#000000"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "top", "bottom", "left", "right", "color"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ExtendCanvas", "display_name": "LayerUtility: ExtendCanvas", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskStroke": {"input": {"required": {"mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": true}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 20, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 6, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "invert_mask", "stroke_grow", "stroke_width", "blur"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskStroke", "display_name": "LayerMask: MaskStroke", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: MaskPreview": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerMask: MaskPreview", "display_name": "LayerMask: MaskPreview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": true}, "LayerColor: RGB": {"input": {"required": {"image": ["IMAGE"], "R": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "G": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "B": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "R", "G", "B"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: RGB", "display_name": "LayerColor: RGB", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: BBoxJoin": {"input": {"required": {"bboxes_1": ["BBOXES"]}, "optional": {"bboxes_2": ["BBOXES"], "bboxes_3": ["BBOXES"], "bboxes_4": ["BBOXES"]}}, "input_order": {"required": ["bboxes_1"], "optional": ["bboxes_2", "bboxes_3", "bboxes_4"]}, "output": ["BBOXES"], "output_is_list": [false], "output_name": ["bboxes"], "name": "LayerMask: BBoxJoin", "display_name": "LayerMask: BBox Join(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: DrawBBoxMask": {"input": {"required": {"image": ["IMAGE"], "bboxes": ["BBOXES"], "grow_top": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_bottom": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_left": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_right": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["image", "bboxes", "grow_top", "grow_bottom", "grow_left", "grow_right"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: DrawBBoxMask", "display_name": "LayerMask: Draw BBox Mask(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorFL2": {"input": {"required": {"image": ["IMAGE"], "prompt": ["STRING", {"default": "subject"}], "florence2_model": ["FLORENCE2"], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "prompt", "florence2_model", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorFL2", "display_name": "LayerMask: Object Detector Florence2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorMask": {"input": {"required": {"object_mask": ["MASK"], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["object_mask", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorMask", "display_name": "LayerMask: Object Detector Mask(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorYOLO8": {"input": {"required": {"image": ["IMAGE"], "yolo_model": [[]], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "yolo_model", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorYOLO8", "display_name": "LayerMask: Object Detector YOLO8(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorYOLOWorld": {"input": {"required": {"image": ["IMAGE"], "yolo_world_model": [["yolo_world/v2-x", "yolo_world/v2-l", "yolo_world/v2-m", "yolo_world/v2-s", "yolo_world/l", "yolo_world/m", "yolo_world/s"]], "confidence_threshold": ["FLOAT", {"default": 0.05, "min": 0, "max": 1, "step": 0.01}], "nms_iou_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1, "step": 0.01}], "prompt": ["STRING", {"default": "subject"}], "sort_method": [["left_to_right", "top_to_bottom", "big_to_small", "confidence"]], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}]}, "optional": {}}, "input_order": {"required": ["image", "yolo_world_model", "confidence_threshold", "nms_iou_threshold", "prompt", "sort_method", "bbox_select", "select_index"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorYOLOWorld", "display_name": "LayerMask: Object Detector YOLO World(Obsolete)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: EVFSAMUltra": {"input": {"required": {"image": ["IMAGE"], "model": [["evf-sam2", "evf-sam"]], "precision": [["fp16", "bf16", "fp32"]], "load_in_bit": [["full", "8", "4"]], "prompt": ["STRING", {"default": "subject"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "model", "precision", "load_in_bit", "prompt", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: EVFSAMUltra", "display_name": "LayerMask: EVF-SAM Ultra(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: TextJoin": {"input": {"required": {"text_1": ["STRING", {"multiline": false, "forceInput": true}]}, "optional": {"text_2": ["STRING", {"multiline": false, "forceInput": true}], "text_3": ["STRING", {"multiline": false, "forceInput": true}], "text_4": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["text_1"], "optional": ["text_2", "text_3", "text_4"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextJoin", "display_name": "LayerUtility: TextJoin", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: TextJoinV2": {"input": {"required": {"text_1": ["STRING", {"multiline": false, "forceInput": true}], "delimiter": ["STRING", {"default": ",", "multiline": false}]}, "optional": {"text_2": ["STRING", {"multiline": false, "forceInput": true}], "text_3": ["STRING", {"multiline": false, "forceInput": true}], "text_4": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["text_1", "delimiter"], "optional": ["text_2", "text_3", "text_4"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextJoinV2", "display_name": "LayerUtility: TextJoinV2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: ImageScaleByAspectRatio": {"input": {"required": {"aspect_ratio": [["original", "custom", "1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16"]], "proportional_width": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]], "scale_to_longest_side": ["BOOLEAN", {"default": false}], "longest_side": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["aspect_ratio", "proportional_width", "proportional_height", "fit", "method", "round_to_multiple", "scale_to_longest_side", "longest_side"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleByAspectRatio", "display_name": "LayerUtility: ImageScaleByAspectRatio", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: PixelSpread": {"input": {"required": {"image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": false}], "mask_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "invert_mask", "mask_grow"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerMask: PixelSpread", "display_name": "LayerMask: PixelSpread", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: GaussianBlur": {"input": {"required": {"image": ["IMAGE"], "blur": ["INT", {"default": 20, "min": 1, "max": 999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: GaussianBlur", "display_name": "LayerFilter: GaussianBlur", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerFilter: GaussianBlurV2": {"input": {"required": {"image": ["IMAGE"], "blur": ["FLOAT", {"default": 20, "min": 0, "max": 1000, "step": 0.05}]}, "optional": {}}, "input_order": {"required": ["image", "blur"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: GaussianBlurV2", "display_name": "LayerFilter: Gaussian Blur V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerFilter: Film": {"input": {"required": {"image": ["IMAGE"], "center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.01, "max": 3, "step": 0.01}], "vignette_intensity": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_power": ["FLOAT", {"default": 0.15, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_shadows": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "grain_highs": ["FLOAT", {"default": 0.2, "min": 0, "max": 1, "step": 0.01}], "blur_strength": ["INT", {"default": 90, "min": 0, "max": 256, "step": 1}], "blur_focus_spread": ["FLOAT", {"default": 2.2, "min": 0.1, "max": 8, "step": 0.1}], "focal_depth": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1, "step": 0.01}]}, "optional": {"depth_map": ["IMAGE"]}}, "input_order": {"required": ["image", "center_x", "center_y", "saturation", "vignette_intensity", "grain_power", "grain_scale", "grain_sat", "grain_shadows", "grain_highs", "blur_strength", "blur_focus_spread", "focal_depth"], "optional": ["depth_map"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: Film", "display_name": "LayerFilter: Film", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: GrayValue": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["gray(256_level)", "gray(100_level)"], "name": "LayerUtility: GrayValue", "display_name": "LayerUtility: Gray Value", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: QWenImage2Prompt": {"input": {"required": {"image": ["IMAGE"], "question": ["STRING", {"multiline": false, "default": "describe this image"}]}}, "input_order": {"required": ["image", "question"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: QWenImage2Prompt", "display_name": "LayerUtility: QWenImage2Prompt(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerMask: RemBgUltra": {"input": {"required": {"image": ["IMAGE"], "detail_range": ["INT", {"default": 8, "min": 1, "max": 256, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01}], "process_detail": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["image", "detail_range", "black_point", "white_point", "process_detail"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: RemBgUltra", "display_name": "LayerMask: RemBgUltra", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: ColorImage V2": {"input": {"required": {"size": [["custom", "1024 x 1024", "768 x 512", "512 x 768", "1280 x 720", "720 x 1280", "1344 x 768", "768 x 1344", "1536 x 640", "640 x 1536"]], "custom_width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "custom_height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "color": ["STRING", {"default": "#000000"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["size", "custom_width", "custom_height", "color"], "optional": ["size_as"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ColorImage V2", "display_name": "LayerUtility: ColorImage V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageScaleRestore V2": {"input": {"required": {"image": ["IMAGE"], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "scale_by": [["by_scale", "longest", "shortest", "width", "height", "total_pixel(kilo pixel)"]], "scale_by_length": ["INT", {"default": 1024, "min": 4, "max": 99999999, "step": 1}]}, "optional": {"mask": ["MASK"], "original_size": ["BOX"]}}, "input_order": {"required": ["image", "scale", "method", "scale_by", "scale_by_length"], "optional": ["mask", "original_size"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "width", "height"], "name": "LayerUtility: ImageScaleRestore V2", "display_name": "LayerUtility: ImageScaleRestore V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerStyle: OuterGlow": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "add", "lighter", "normal", "multply", "subtract", "difference", "darker", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: OuterGlow", "display_name": "LayerStyle: OuterGlow", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ImageBlend V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: ImageBlend V2", "display_name": "LayerUtility: ImageBlend V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: RmBgUltra V2": {"input": {"required": {"image": ["IMAGE"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: RmBgUltra V2", "display_name": "LayerMask: RmBgUltra V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: HDREffects": {"input": {"required": {"image": ["IMAGE", {"default": null}], "hdr_intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 5.0, "step": 0.01}], "shadow_intensity": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "highlight_intensity": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.01}], "gamma_intensity": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}], "enhance_color": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "hdr_intensity", "shadow_intensity", "highlight_intensity", "gamma_intensity", "contrast", "enhance_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: HDREffects", "display_name": "LayerFilter: HDR Effects", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: GradientImage V2": {"input": {"required": {"size": [["custom", "1024 x 1024", "768 x 512", "512 x 768", "1280 x 720", "720 x 1280", "1344 x 768", "768 x 1344", "1536 x 640", "640 x 1536"]], "custom_width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "custom_height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "start_color": ["STRING", {"default": "#FFFFFF"}], "end_color": ["STRING", {"default": "#000000"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["size", "custom_width", "custom_height", "angle", "start_color", "end_color"], "optional": ["size_as"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: GradientImage V2", "display_name": "LayerUtility: GradientImage V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: AutoAdjustV2": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "contrast": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "saturation": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "red": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "green": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "blue": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "mode": [["RGB", "lum + sat", "mono", "luminance", "saturation"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "strength", "brightness", "contrast", "saturation", "red", "green", "blue", "mode"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoAdjustV2", "display_name": "LayerColor: AutoAdjust V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerMask: PersonMaskUltra V2": {"input": {"required": {"images": ["IMAGE"], "face": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "body": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "clothes": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "accessories": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "background": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["images", "face", "hair", "body", "clothes", "accessories", "background", "confidence", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: PersonMaskUltra V2", "display_name": "LayerMask: PersonMaskUltra V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: XY to Percent": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["background_image", "layer_image", "x", "y"], "optional": []}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["x_percent", "y_percent"], "name": "LayerUtility: XY to Percent", "display_name": "LayerUtility: XY to Percent", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: ImageBlendAdvance": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "multply", "screen", "add", "subtract", "difference", "darker", "lighter", "color_burn", "color_dodge", "linear_burn", "linear_dodge", "overlay", "soft_light", "hard_light", "vivid_light", "pin_light", "linear_light", "hard_mix"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "x_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "y_percent": ["FLOAT", {"default": 50, "min": -999, "max": 999, "step": 0.01}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "x_percent", "y_percent", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": ["layer_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageBlendAdvance", "display_name": "LayerUtility: ImageBlendAdvance", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: VQAPrompt": {"input": {"required": {"image": ["IMAGE"], "vqa_model": ["VQA_MODEL"], "question": ["STRING", {"default": "{age number} years old {ethnicity} {gender}, weared {garment color} {garment}, {eye color} eyes, {hair style} {hair color} hair, {background} background.", "multiline": true, "dynamicPrompts": false}]}, "optional": {}}, "input_order": {"required": ["image", "vqa_model", "question"], "optional": []}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: VQAPrompt", "display_name": "LayerUtility: VQA Prompt", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadVQAModel": {"input": {"required": {"model": [["blip-vqa-base", "blip-vqa-capfilt-large"]], "precision": [["fp16", "fp32"]], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["model", "precision", "device"]}, "output": ["VQA_MODEL"], "output_is_list": [false], "output_name": ["vqa_model"], "name": "LayerUtility: LoadVQAModel", "display_name": "LayerUtility: Load VQA Model", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageAutoCrop V2": {"input": {"required": {"image": ["IMAGE"], "fill_background": ["BOOLEAN", {"default": true}], "background_color": ["STRING", {"default": "#FFFFFF"}], "aspect_ratio": [["1:1", "3:2", "4:3", "16:9", "2:3", "3:4", "9:16", "custom", "detect_mask", "original"]], "proportional_width": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "proportional_height": ["INT", {"default": 1, "min": 1, "max": 999, "step": 1}], "scale_to_side": [["None", "longest", "shortest", "width", "height"]], "scale_to_length": ["INT", {"default": 1024, "min": 4, "max": 999999, "step": 1}], "detect": [["min_bounding_rect", "max_inscribed_rect", "mask_area"]], "border_reserve": ["INT", {"default": 100, "min": -9999, "max": 9999, "step": 1}], "ultra_detail_range": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "matting_method": [["RMBG 1.4", "SegmentAnything"]], "sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]], "sam_threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "sam_prompt": ["STRING", {"default": "subject"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "fill_background", "background_color", "aspect_ratio", "proportional_width", "proportional_height", "scale_to_side", "scale_to_length", "detect", "border_reserve", "ultra_detail_range", "matting_method", "sam_model", "grounding_dino_model", "sam_threshold", "sam_prompt"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false], "output_name": ["cropped_image", "box_preview", "cropped_mask"], "name": "LayerUtility: ImageAutoCrop V2", "display_name": "LayerUtility: ImageAutoCrop V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GetColorTone": {"input": {"required": {"image": ["IMAGE"], "mode": [["main_color", "average"]]}, "optional": {}}, "input_order": {"required": ["image", "mode"], "optional": []}, "output": ["STRING", "LIST"], "output_is_list": [false, false], "output_name": ["RGB color in HEX", "HSV color in list"], "name": "LayerUtility: GetColorTone", "display_name": "LayerUtility: GetColorTone(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageRewardFilter": {"input": {"required": {"images": ["IMAGE"], "prompt": ["STRING", {"multiline": false}], "output_num": ["INT", {"default": 3, "min": 1, "max": 999999, "step": 1}]}, "optional": {}}, "input_order": {"required": ["images", "prompt", "output_num"], "optional": []}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["images", "obsolete_images"], "name": "LayerUtility: ImageRewardFilter", "display_name": "LayerUtility: ImageRewardFilter(Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: CheckMask": {"input": {"required": {"mask": ["MASK"], "white_point": ["INT", {"default": 1, "min": 1, "max": 254, "step": 1}], "area_percent": ["INT", {"default": 1, "min": 1, "max": 99, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "white_point", "area_percent"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["bool"], "name": "LayerUtility: CheckMask", "display_name": "LayerUtility: Check Mask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: Exposure": {"input": {"required": {"image": ["IMAGE"], "exposure": ["INT", {"default": 20, "min": -100, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "exposure"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: Exposure", "display_name": "LayerColor: Exposure", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerStyle: DropShadow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "distance_x": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "distance_y": ["INT", {"default": 25, "min": -9999, "max": 9999, "step": 1}], "grow": ["INT", {"default": 6, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 18, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"default": "#000000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "distance_x", "distance_y", "grow", "blur", "shadow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: DropShadow V2", "display_name": "LayerStyle: DropShadow V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerStyle: InnerGlow V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["screen", "linear dodge(add)", "color dodge", "lighten", "dodge", "hard light", "linear light", "normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighter color", "overlay", "soft light", "vivid light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 5, "min": 2, "max": 20, "step": 1}], "glow_range": ["INT", {"default": 48, "min": -9999, "max": 9999, "step": 1}], "blur": ["INT", {"default": 25, "min": 0, "max": 9999, "step": 1}], "light_color": ["STRING", {"default": "#FFBF30"}], "glow_color": ["STRING", {"default": "#FE0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "brightness", "glow_range", "blur", "light_color", "glow_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: InnerGlow V2", "display_name": "LayerStyle: InnerGlow V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: ImageOpacity": {"input": {"required": {"image": ["IMAGE"], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "invert_mask": ["BOOLEAN", {"default": true}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "opacity", "invert_mask"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: ImageOpacity", "display_name": "LayerUtility: ImageOpacity", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: TextImage": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "Text"}], "font_file": [["Alibaba-PuHuiTi-Heavy.ttf"]], "spacing": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "leading": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "horizontal_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "vertical_border": ["FLOAT", {"default": 5, "min": -100, "max": 100, "step": 0.1}], "scale": ["FLOAT", {"default": 80, "min": 0.1, "max": 999, "step": 0.01}], "variation_range": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "variation_seed": ["INT", {"default": 1754162517, "min": 0, "max": 999999999999, "step": 1}], "layout": [["horizontal", "vertical"]], "width": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 999999, "step": 1}], "text_color": ["STRING", {"default": "#FFA000"}], "background_color": ["STRING", {"default": "#FFFFFF"}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["text", "font_file", "spacing", "leading", "horizontal_border", "vertical_border", "scale", "variation_range", "variation_seed", "layout", "width", "height", "text_color", "background_color"], "optional": ["size_as"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: TextImage", "display_name": "LayerUtility: TextImage", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SegformerB2ClothesUltra": {"input": {"required": {"image": ["IMAGE"], "face": ["BOOLEAN", {"default": false}], "hair": ["BOOLEAN", {"default": false}], "hat": ["BOOLEAN", {"default": false}], "sunglass": ["BOOLEAN", {"default": false}], "left_arm": ["BOOLEAN", {"default": false}], "right_arm": ["BOOLEAN", {"default": false}], "left_leg": ["BOOLEAN", {"default": false}], "right_leg": ["BOOLEAN", {"default": false}], "upper_clothes": ["BOOLEAN", {"default": false}], "skirt": ["BOOLEAN", {"default": false}], "pants": ["BOOLEAN", {"default": false}], "dress": ["BOOLEAN", {"default": false}], "belt": ["BOOLEAN", {"default": false}], "shoe": ["BOOLEAN", {"default": false}], "bag": ["BOOLEAN", {"default": false}], "scarf": ["BOOLEAN", {"default": false}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 12, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "face", "hair", "hat", "sunglass", "left_arm", "right_arm", "left_leg", "right_leg", "upper_clothes", "skirt", "pants", "dress", "belt", "shoe", "bag", "scarf", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegformerB2ClothesUltra", "display_name": "LayerMask: Segformer B2 Clothes Ultra", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerUltraV2": {"input": {"required": {"image": ["IMAGE"], "segformer_pipeline": ["SegPipeline"], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 8, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.01, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}}, "input_order": {"required": ["image", "segformer_pipeline", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "device", "max_megapixels"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegformerUltraV2", "display_name": "LayerMask: Segformer Ultra V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerClothesPipelineLoader": {"input": {"required": {"model": [["segformer_b3_clothes", "segformer_b2_clothes"]], "face": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8138)", "label_off": "disabled(\u8138)"}], "hair": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u53d1)", "label_off": "disabled(\u5934\u53d1)"}], "hat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e3d\u5b50)", "label_off": "disabled(\u5e3d\u5b50)"}], "sunglass": ["BOOLEAN", {"default": false, "label_on": "enabled(\u58a8\u955c)", "label_off": "disabled(\u58a8\u955c)"}], "left_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u81c2)", "label_off": "disabled(\u5de6\u81c2)"}], "right_arm": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u81c2)", "label_off": "disabled(\u53f3\u81c2)"}], "left_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u817f)", "label_off": "disabled(\u5de6\u817f)"}], "right_leg": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u817f)", "label_off": "disabled(\u53f3\u817f)"}], "left_shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5de6\u978b)", "label_off": "disabled(\u5de6\u978b)"}], "right_shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53f3\u978b)", "label_off": "disabled(\u53f3\u978b)"}], "upper_clothes": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u8863)", "label_off": "disabled(\u4e0a\u8863)"}], "skirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u77ed\u88d9)", "label_off": "disabled(\u77ed\u88d9)"}], "pants": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u5b50)", "label_off": "disabled(\u88e4\u5b50)"}], "dress": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8863\u88d9)", "label_off": "disabled(\u8fde\u8863\u88d9)"}], "belt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8170\u5e26)", "label_off": "disabled(\u8170\u5e26)"}], "bag": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80cc\u5305)", "label_off": "disabled(\u80cc\u5305)"}], "scarf": ["BOOLEAN", {"default": false, "label_on": "enabled(\u56f4\u5dfe)", "label_off": "disabled(\u56f4\u5dfe)"}]}}, "input_order": {"required": ["model", "face", "hair", "hat", "sunglass", "left_arm", "right_arm", "left_leg", "right_leg", "left_shoe", "right_shoe", "upper_clothes", "skirt", "pants", "dress", "belt", "bag", "scarf"]}, "output": ["SegPipeline"], "output_is_list": [false], "output_name": ["segformer_pipeline"], "name": "LayerMask: SegformerClothesPipelineLoader", "display_name": "LayerMask: Segformer Clothes Pipeline", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: SegformerFashionPipelineLoader": {"input": {"required": {"model": [["segformer_b3_fashion"]], "shirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u886c\u886b\u3001\u7f69\u886b)", "label_off": "disabled(\u886c\u886b\u3001\u7f69\u886b)"}], "top": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e0a\u8863\u3001t\u6064)", "label_off": "disabled(\u4e0a\u8863\u3001t\u6064)"}], "sweater": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6bdb\u8863)", "label_off": "disabled(\u6bdb\u8863)"}], "cardigan": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5f00\u895f\u6bdb\u886b)", "label_off": "disabled(\u5f00\u895f\u6bdb\u886b)"}], "jacket": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5939\u514b)", "label_off": "disabled(\u5939\u514b)"}], "vest": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80cc\u5fc3)", "label_off": "disabled(\u80cc\u5fc3)"}], "pants": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u5b50)", "label_off": "disabled(\u88e4\u5b50)"}], "shorts": ["BOOLEAN", {"default": false, "label_on": "enabled(\u77ed\u88e4)", "label_off": "disabled(\u77ed\u88e4)"}], "skirt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88d9\u5b50)", "label_off": "disabled(\u88d9\u5b50)"}], "coat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5916\u5957)", "label_off": "disabled(\u5916\u5957)"}], "dress": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8863\u88d9)", "label_off": "disabled(\u8fde\u8863\u88d9)"}], "jumpsuit": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8fde\u8eab\u88e4)", "label_off": "disabled(\u8fde\u8eab\u88e4)"}], "cape": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6597\u7bf7)", "label_off": "disabled(\u6597\u7bf7)"}], "glasses": ["BOOLEAN", {"default": false, "label_on": "enabled(\u773c\u955c)", "label_off": "disabled(\u773c\u955c)"}], "hat": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e3d\u5b50)", "label_off": "disabled(\u5e3d\u5b50)"}], "hairaccessory": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5934\u5e26)", "label_off": "disabled(\u5934\u5e26)"}], "tie": ["BOOLEAN", {"default": false, "label_on": "enabled(\u9886\u5e26)", "label_off": "disabled(\u9886\u5e26)"}], "glove": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u5957)", "label_off": "disabled(\u624b\u5957)"}], "watch": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u8868)", "label_off": "disabled(\u624b\u8868)"}], "belt": ["BOOLEAN", {"default": false, "label_on": "enabled(\u76ae\u5e26)", "label_off": "disabled(\u76ae\u5e26)"}], "legwarmer": ["BOOLEAN", {"default": false, "label_on": "enabled(\u817f\u5957)", "label_off": "disabled(\u817f\u5957)"}], "tights": ["BOOLEAN", {"default": false, "label_on": "enabled(\u88e4\u889c)", "label_off": "disabled(\u88e4\u889c)"}], "sock": ["BOOLEAN", {"default": false, "label_on": "enabled(\u889c\u5b50)", "label_off": "disabled(\u889c\u5b50)"}], "shoe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u978b\u5b50)", "label_off": "disabled(\u978b\u5b50)"}], "bagwallet": ["BOOLEAN", {"default": false, "label_on": "enabled(\u624b\u5305)", "label_off": "disabled(\u624b\u5305)"}], "scarf": ["BOOLEAN", {"default": false, "label_on": "enabled(\u56f4\u5dfe)", "label_off": "disabled(\u56f4\u5dfe)"}], "umbrella": ["BOOLEAN", {"default": false, "label_on": "enabled(\u96e8\u4f1e)", "label_off": "disabled(\u96e8\u4f1e)"}], "hood": ["BOOLEAN", {"default": false, "label_on": "enabled(\u515c\u5e3d)", "label_off": "disabled(\u515c\u5e3d)"}], "collar": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8863\u9886)", "label_off": "disabled(\u8863\u9886)"}], "lapel": ["BOOLEAN", {"default": false, "label_on": "enabled(\u7ffb\u9886)", "label_off": "disabled(\u7ffb\u9886)"}], "epaulette": ["BOOLEAN", {"default": false, "label_on": "enabled(\u80a9\u7ae0)", "label_off": "disabled(\u80a9\u7ae0)"}], "sleeve": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8896\u5b50)", "label_off": "disabled(\u8896\u5b50)"}], "pocket": ["BOOLEAN", {"default": false, "label_on": "enabled(\u53e3\u888b)", "label_off": "disabled(\u53e3\u888b)"}], "neckline": ["BOOLEAN", {"default": false, "label_on": "enabled(\u9886\u53e3)", "label_off": "disabled(\u9886\u53e3)"}], "buckle": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5e26\u6263)", "label_off": "disabled(\u5e26\u6263)"}], "zipper": ["BOOLEAN", {"default": false, "label_on": "enabled(\u62c9\u94fe)", "label_off": "disabled(\u62c9\u94fe)"}], "applique": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8d34\u82b1)", "label_off": "disabled(\u8d34\u82b1)"}], "bead": ["BOOLEAN", {"default": false, "label_on": "enabled(\u73e0\u5b50)", "label_off": "disabled(\u73e0\u5b50)"}], "bow": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8774\u8776\u7ed3)", "label_off": "disabled(\u8774\u8776\u7ed3)"}], "flower": ["BOOLEAN", {"default": false, "label_on": "enabled(\u82b1)", "label_off": "disabled(\u82b1)"}], "fringe": ["BOOLEAN", {"default": false, "label_on": "enabled(\u5218\u6d77)", "label_off": "disabled(\u5218\u6d77)"}], "ribbon": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4e1d\u5e26)", "label_off": "disabled(\u4e1d\u5e26)"}], "rivet": ["BOOLEAN", {"default": false, "label_on": "enabled(\u94c6\u9489)", "label_off": "disabled(\u94c6\u9489)"}], "ruffle": ["BOOLEAN", {"default": false, "label_on": "enabled(\u8936\u9970)", "label_off": "disabled(\u8936\u9970)"}], "sequin": ["BOOLEAN", {"default": false, "label_on": "enabled(\u4eae\u7247)", "label_off": "disabled(\u4eae\u7247)"}], "tassel": ["BOOLEAN", {"default": false, "label_on": "enabled(\u6d41\u82cf)", "label_off": "disabled(\u6d41\u82cf)"}]}}, "input_order": {"required": ["model", "shirt", "top", "sweater", "cardigan", "jacket", "vest", "pants", "shorts", "skirt", "coat", "dress", "jumpsuit", "cape", "glasses", "hat", "hairaccessory", "tie", "glove", "watch", "belt", "legwarmer", "tights", "sock", "shoe", "bagwallet", "scarf", "umbrella", "hood", "collar", "lapel", "epaulette", "sleeve", "pocket", "neckline", "buckle", "zipper", "applique", "bead", "bow", "flower", "fringe", "ribbon", "rivet", "ruffle", "sequin", "tassel"]}, "output": ["SegPipeline"], "output_is_list": [false], "output_name": ["segformer_pipeline"], "name": "LayerMask: SegformerFashionPipelineLoader", "display_name": "LayerMask: Segformer Fashion Pipeline", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: CropByMask V2": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "invert_mask": ["BOOLEAN", {"default": false}], "detect": [["mask_area", "min_bounding_rect", "max_inscribed_rect"]], "top_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "bottom_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "left_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "right_reserve": ["INT", {"default": 20, "min": -9999, "max": 9999, "step": 1}], "round_to_multiple": [["8", "16", "32", "64", "128", "256", "512", "None"]]}, "optional": {"crop_box": ["BOX"]}}, "input_order": {"required": ["image", "mask", "invert_mask", "detect", "top_reserve", "bottom_reserve", "left_reserve", "right_reserve", "round_to_multiple"], "optional": ["crop_box"]}, "output": ["IMAGE", "MASK", "BOX", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["croped_image", "croped_mask", "crop_box", "box_preview"], "name": "LayerUtility: CropByMask V2", "display_name": "LayerUtility: CropByMask V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerFilter: FilmV2": {"input": {"required": {"image": ["IMAGE"], "center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "saturation": ["FLOAT", {"default": 1, "min": 0.01, "max": 3, "step": 0.01}], "vignette_intensity": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "grain_method": [["fastgrain", "filmgrainer"]], "grain_power": ["FLOAT", {"default": 0.15, "min": 0, "max": 1, "step": 0.01}], "grain_scale": ["FLOAT", {"default": 1, "min": 0.1, "max": 10, "step": 0.1}], "grain_sat": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "filmgrainer_shadows": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "filmgrainer_highs": ["FLOAT", {"default": 0.2, "min": 0, "max": 1, "step": 0.01}], "blur_strength": ["INT", {"default": 90, "min": 0, "max": 256, "step": 1}], "blur_focus_spread": ["FLOAT", {"default": 2.2, "min": 0.1, "max": 8, "step": 0.1}], "focal_depth": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1, "step": 0.01}]}, "optional": {"depth_map": ["IMAGE"]}}, "input_order": {"required": ["image", "center_x", "center_y", "saturation", "vignette_intensity", "grain_method", "grain_power", "grain_scale", "grain_sat", "filmgrainer_shadows", "filmgrainer_highs", "blur_strength", "blur_focus_spread", "focal_depth"], "optional": ["depth_map"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: FilmV2", "display_name": "LayerFilter: Film V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: PromptTagger": {"input": {"required": {"image": ["IMAGE"], "api": [["gemini-1.5-flash", "gemini-pro-vision"]], "token_limit": ["INT", {"default": 80, "min": 2, "max": 1024, "step": 1}], "exclude_word": ["STRING", {"default": ""}], "replace_with_word": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["image", "api", "token_limit", "exclude_word", "replace_with_word"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: PromptTagger", "display_name": "LayerUtility: PromptTagger(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/Prompt", "output_node": false}, "LayerColor: ColorTemperature": {"input": {"required": {"image": ["IMAGE"], "temperature": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 1}]}}, "input_order": {"required": ["image", "temperature"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorTemperature", "display_name": "LayerColor: ColorTemperature", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerUtility: LlamaVision": {"input": {"required": {"image": ["IMAGE"], "model": [["Llama-3.2-11B-Vision-Instruct-nf4"]], "system_prompt": ["STRING", {"default": "You are a helpful AI assistant.", "multiline": true}], "user_prompt": ["STRING", {"default": "Describe this image in natural language.", "multiline": true}], "max_new_tokens": ["INT", {"default": 256, "min": 1, "max": 4096}], "do_sample": ["BOOLEAN", {"default": true}], "temperature": ["FLOAT", {"default": 0.3, "min": 0.0, "step": 0.1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.1}], "top_k": ["INT", {"default": 40, "min": 1}], "stop_strings": ["STRING", {"default": "<|eot_id|>"}], "seed": ["INT", {"default": 0, "min": 0, "max": 4294967295}], "include_prompt_in_output": ["BOOLEAN", {"default": false}], "cache_model": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["image", "model", "system_prompt", "user_prompt", "max_new_tokens", "do_sample", "temperature", "top_p", "top_k", "stop_strings", "seed", "include_prompt_in_output", "cache_model"], "optional": []}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: LlamaVision", "display_name": "LayerUtility: Llama Vision(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: HSV": {"input": {"required": {"image": ["IMAGE"], "H": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "S": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "V": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "H", "S", "V"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: HSV", "display_name": "LayerColor: HSV", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: AutoBrightness": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 75, "min": 0, "max": 100, "step": 1}], "saturation": ["INT", {"default": 8, "min": -255, "max": 255, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "strength", "saturation"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoBrightness", "display_name": "LayerColor: AutoBrightness", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerFilter: WaterColor": {"input": {"required": {"image": ["IMAGE"], "line_density": ["INT", {"default": 50, "min": 1, "max": 100, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "line_density", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: WaterColor", "display_name": "LayerFilter: WaterColor", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerUtility: CheckMaskV2": {"input": {"required": {"mask": ["MASK"], "method": [["simple", "detect_percent"]], "white_point": ["INT", {"default": 1, "min": 1, "max": 254, "step": 1}], "area_percent": ["FLOAT", {"default": 0.01, "min": 0, "max": 100, "step": 0.01}]}, "optional": {}}, "input_order": {"required": ["mask", "method", "white_point", "area_percent"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["bool"], "name": "LayerUtility: CheckMaskV2", "display_name": "LayerUtility: Check Mask V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ImageMaskScaleAs": {"input": {"required": {"scale_as": ["*", {}], "fit": [["letterbox", "crop", "fill"]], "method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["scale_as", "fit", "method"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "BOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "original_size", "widht", "height"], "name": "LayerUtility: ImageMaskScaleAs", "display_name": "LayerUtility: ImageMaskScaleAs", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: MaskGrain": {"input": {"required": {"mask": ["MASK"], "grain": ["INT", {"default": 6, "min": 0, "max": 127, "step": 1}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {}}, "input_order": {"required": ["mask", "grain", "invert_mask"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: MaskGrain", "display_name": "LayerMask: Mask Grain", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerFilter: ColorMap": {"input": {"required": {"image": ["IMAGE"], "color_map": [["autumn", "bone", "jet", "winter", "rainbow", "ocean", "summer", "sprint", "cool", "HSV", "pink", "hot", "parula", "magma", "inferno", "plasma", "viridis", "cividis", "twilight", "twilight_shifted", "turbo", "deepgreen"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "color_map", "opacity"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerFilter: ColorMap", "display_name": "LayerFilter: ColorMap", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerFilter", "output_node": false}, "LayerStyle: Stroke V2": {"input": {"required": {"background_image": ["IMAGE"], "layer_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": true}], "blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"]], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "stroke_grow": ["INT", {"default": 0, "min": -999, "max": 999, "step": 1}], "stroke_width": ["INT", {"default": 8, "min": 0, "max": 999, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "stroke_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"layer_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "layer_image", "invert_mask", "blend_mode", "opacity", "stroke_grow", "stroke_width", "blur", "stroke_color"], "optional": ["layer_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerStyle: Stroke V2", "display_name": "LayerStyle: Stroke V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerStyle", "output_node": false}, "LayerUtility: QueueStop": {"input": {"required": {"any": ["*"], "mode": [["stop", "continue"]], "stop": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["any", "mode", "stop"]}, "output": ["*"], "output_is_list": [false], "output_name": ["any"], "name": "LayerUtility: QueueStop", "display_name": "LayerUtility: Queue Stop", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": false}, "LayerUtility: SwitchCase": {"input": {"required": {"switch_condition": ["STRING", {"default": "", "multiline": false}], "case_1": ["STRING", {"default": "", "multiline": false}], "case_2": ["STRING", {"default": "", "multiline": false}], "case_3": ["STRING", {"default": "", "multiline": false}], "input_default": ["*"]}, "optional": {"input_1": ["*"], "input_2": ["*"], "input_3": ["*"]}}, "input_order": {"required": ["switch_condition", "case_1", "case_2", "case_3", "input_default"], "optional": ["input_1", "input_2", "input_3"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "LayerUtility: SwitchCase", "display_name": "LayerUtility: Switch Case", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: If ": {"input": {"required": {"if_condition": ["*"], "when_TRUE": ["*"], "when_FALSE": ["*"]}}, "input_order": {"required": ["if_condition", "when_TRUE", "when_FALSE"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "LayerUtility: If ", "display_name": "LayerUtility: If", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: StringCondition": {"input": {"required": {"text": ["STRING", {"multiline": false}], "condition": [["include", "exclude"]], "sub_string": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["text", "condition", "sub_string"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["output", "string"], "name": "LayerUtility: StringCondition", "display_name": "LayerUtility: String Condition", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: BooleanOperator": {"input": {"required": {"a": ["*"], "b": ["*"], "operator": [["==", "!=", ">", "<", ">=", "<=", "and", "or", "xor", "not(a)", "min", "max"]]}}, "input_order": {"required": ["a", "b", "operator"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["output"], "name": "LayerUtility: BooleanOperator", "display_name": "LayerUtility: Boolean Operator", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: NumberCalculator": {"input": {"required": {"a": ["*", {}], "b": ["*", {}], "operator": [["+", "-", "*", "/", "**", "//", "%", "nth_root", "min", "max"]]}}, "input_order": {"required": ["a", "b", "operator"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["int", "float"], "name": "LayerUtility: NumberCalculator", "display_name": "LayerUtility: Number Calculator", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: BooleanOperatorV2": {"input": {"required": {"a_value": ["STRING", {"default": "", "multiline": false}], "b_value": ["STRING", {"default": "", "multiline": false}], "operator": [["==", "!=", ">", "<", ">=", "<=", "and", "or", "xor", "not(a)", "min", "max"]]}, "optional": {"a": ["*"], "b": ["*"]}}, "input_order": {"required": ["a_value", "b_value", "operator"], "optional": ["a", "b"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["output", "string"], "name": "LayerUtility: BooleanOperatorV2", "display_name": "LayerUtility: Boolean Operator V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: NumberCalculatorV2": {"input": {"required": {"a_value": ["STRING", {"default": "", "multiline": false}], "b_value": ["STRING", {"default": "", "multiline": false}], "operator": [["+", "-", "*", "/", "**", "//", "%", "nth_root", "min", "max"]]}, "optional": {"a": ["*"], "b": ["*"]}}, "input_order": {"required": ["a_value", "b_value", "operator"], "optional": ["a", "b"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["int", "float", "string"], "name": "LayerUtility: NumberCalculatorV2", "display_name": "LayerUtility: Number Calculator V2", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: TextBox": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: TextBox", "display_name": "LayerUtility: TextBox", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: String": {"input": {"required": {"string": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "LayerUtility: String", "display_name": "LayerUtility: String", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Integer": {"input": {"required": {"int_value": ["INT", {"default": 0, "min": -1e+18, "max": 1e+18, "step": 1}]}}, "input_order": {"required": ["int_value"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["int", "string"], "name": "LayerUtility: Integer", "display_name": "LayerUtility: Integer", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Float": {"input": {"required": {"float_value": ["FLOAT", {"default": 0, "min": -1e+18, "max": 1e+18, "step": 1e-05}]}}, "input_order": {"required": ["float_value"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["float", "string"], "name": "LayerUtility: Float", "display_name": "LayerUtility: Float", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Boolean": {"input": {"required": {"bool_value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["bool_value"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["boolean", "string"], "name": "LayerUtility: Boolean", "display_name": "LayerUtility: Boolean", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 1e+18, "step": 1}]}}, "input_order": {"required": ["seed"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "LayerUtility: Seed", "display_name": "LayerUtility: Seed", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerMask: CreateGradientMask": {"input": {"required": {"width": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "height": ["INT", {"default": 512, "min": 4, "max": 99999, "step": 1}], "gradient_side": [["bottom", "top", "left", "right", "center"]], "gradient_scale": ["INT", {"default": 100, "min": 1, "max": 9999, "step": 1}], "gradient_offset": ["INT", {"default": 0, "min": -9999, "max": 9999, "step": 1}], "opacity": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}]}, "optional": {"size_as": ["*", {}]}}, "input_order": {"required": ["width", "height", "gradient_side", "gradient_scale", "gradient_offset", "opacity"], "optional": ["size_as"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: CreateGradientMask", "display_name": "LayerMask: CreateGradientMask", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: LayerMaskTransform": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "y": ["INT", {"default": 0, "min": -99999, "max": 99999, "step": 1}], "mirror": [["None", "horizontal", "vertical"]], "scale": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "aspect_ratio": ["FLOAT", {"default": 1, "min": 0.01, "max": 100, "step": 0.01}], "rotate": ["FLOAT", {"default": 0, "min": -999999, "max": 999999, "step": 0.01}], "transform_method": [["lanczos", "bicubic", "hamming", "bilinear", "box", "nearest"]], "anti_aliasing": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["mask", "x", "y", "mirror", "scale", "aspect_ratio", "rotate", "transform_method", "anti_aliasing"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerUtility: LayerMaskTransform", "display_name": "LayerUtility: LayerMaskTransform", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: RestoreCropBox": {"input": {"required": {"background_image": ["IMAGE"], "croped_image": ["IMAGE"], "invert_mask": ["BOOLEAN", {"default": false}], "crop_box": ["BOX"]}, "optional": {"croped_mask": ["MASK"]}}, "input_order": {"required": ["background_image", "croped_image", "invert_mask", "crop_box"], "optional": ["croped_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: RestoreCropBox", "display_name": "LayerUtility: RestoreCropBox", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: HSV Value": {"input": {"required": {"color_value": ["*", {}]}, "optional": {}}, "input_order": {"required": ["color_value"], "optional": []}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["H", "S", "V"], "name": "LayerUtility: HSV Value", "display_name": "LayerUtility: HSV Value", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility/Data", "output_node": false}, "LayerUtility: ImageCombineAlpha": {"input": {"required": {"RGB_image": ["IMAGE"], "mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["RGB_image", "mask"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGBA_image"], "name": "LayerUtility: ImageCombineAlpha", "display_name": "LayerUtility: ImageCombineAlpha", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerColor: AutoAdjust": {"input": {"required": {"image": ["IMAGE"], "strength": ["INT", {"default": 100, "min": 0, "max": 100, "step": 1}], "brightness": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "contrast": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "saturation": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "red": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "green": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}], "blue": ["INT", {"default": 0, "min": -100, "max": 100, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "strength", "brightness", "contrast", "saturation", "red", "green", "blue"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: AutoAdjust", "display_name": "LayerColor: AutoAdjust", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "LayerColor: ColorBalance": {"input": {"required": {"image": ["IMAGE"], "cyan_red": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}], "magenta_green": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}], "yellow_blue": ["FLOAT", {"default": 0, "min": -1.0, "max": 1.0, "step": 0.001}]}, "optional": {}}, "input_order": {"required": ["image", "cyan_red", "magenta_green", "yellow_blue"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerColor: ColorBalance", "display_name": "LayerColor: ColorBalance", "description": "", "python_module": "custom_nodes.comfyui_layerstyle", "category": "\ud83d\ude3adzNodes/LayerColor", "output_node": false}, "XY Input: Lora Block Weight //Inspire": {"input": {"required": {"category_filter": [["All", ""]], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "A": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "@SD-FULL-TEST:17", "@SD-BLOCK1-TEST:17,12,1", "@SD-BLOCK2-TEST:17,12,2", "@SD-BLOCK3-TEST:17,12,3", "@SD-BLOCK4-TEST:17,12,4", "@SD-BLOCK5-TEST:17,12,5", "@SD-BLOCK6-TEST:17,12,6", "@SD-BLOCK7-TEST:17,12,7", "@SD-BLOCK8-TEST:17,12,8", "@SD-BLOCK9-TEST:17,12,9", "@SD-BLOCK10-TEST:17,12,10", "@SD-BLOCK11-TEST:17,12,11", "@SD-BLOCK12-TEST:17,12,12", "@SD-BLOCK13-TEST:17,12,13", "@SD-BLOCK14-TEST:17,12,14", "@SD-BLOCK15-TEST:17,12,15", "@SD-BLOCK16-TEST:17,12,16", "@SD-BLOCK17-TEST:17,12,17", "@SD-LyC-FULL-TEST:27", "@SDXL-FULL-TEST:12", "@SDXL-LyC-FULL-TEST:21", "@FLUX-DBL-FULL:19", "@FLUX-DBL-SGL-FULL:58", "@FLUX-DBL0-TEST:19,14,2", "@FLUX-DBL1-TEST:19,14,3", "@FLUX-DBL2-TEST:19,14,4", "@FLUX-DBL3-TEST:19,14,5", "@FLUX-DBL4-TEST:19,14,6", "@FLUX-DBL5-TEST:19,14,7", "@FLUX-DBL6-TEST:19,14,8", "@FLUX-DBL7-TEST:19,14,9", "@FLUX-DBL8-TEST:19,14,10", "@FLUX-DBL9-TEST:19,14,11", "@FLUX-DBL10-TEST:19,14,12", "@FLUX-DBL11-TEST:19,14,13", "@FLUX-DBL12-TEST:19,14,14", "@FLUX-DBL13-TEST:19,14,15", "@FLUX-DBL14-TEST:19,14,16", "@FLUX-DBL15-TEST:19,14,17", "@FLUX-DBL16-TEST:19,14,18", "@FLUX-DBL17-TEST:19,14,19", "@FLUX-DBL18-TEST:19,14,20", "@FLUX-SGL0-TEST:58,6,21", "@FLUX-SGL1-TEST:58,6,22", "@FLUX-SGL2-TEST:58,6,23", "@FLUX-SGL3-TEST:58,6,24", "@FLUX-SGL4-TEST:58,6,25", "@FLUX-SGL5-TEST:58,6,26", "@FLUX-SGL6-TEST:58,6,27", "@FLUX-SGL7-TEST:58,6,28", "@FLUX-SGL8-TEST:58,6,29", "@FLUX-SGL9-TEST:58,6,30", "@FLUX-SGL10-TEST:58,6,31", "@FLUX-SGL11-TEST:58,6,32", "@FLUX-SGL12-TEST:58,6,33", "@FLUX-SGL13-TEST:58,6,34", "@FLUX-SGL14-TEST:58,6,35", "@FLUX-SGL15-TEST:58,6,36", "@FLUX-SGL16-TEST:58,6,37", "@FLUX-SGL17-TEST:58,6,38", "@FLUX-SGL18-TEST:58,6,39", "@FLUX-SGL19-TEST:58,6,40", "@FLUX-SGL20-TEST:58,6,41", "@FLUX-SGL21-TEST:58,6,42", "@FLUX-SGL22-TEST:58,6,43", "@FLUX-SGL23-TEST:58,6,44", "@FLUX-SGL24-TEST:58,6,45", "@FLUX-SGL25-TEST:58,6,46", "@FLUX-SGL26-TEST:58,6,47", "@FLUX-SGL27-TEST:58,6,48", "@FLUX-SGL28-TEST:58,6,49", "@FLUX-SGL29-TEST:58,6,50", "@FLUX-SGL30-TEST:58,6,51", "@FLUX-SGL31-TEST:58,6,52", "@FLUX-SGL32-TEST:58,6,53", "@FLUX-SGL33-TEST:58,6,54", "@FLUX-SGL34-TEST:58,6,55", "@FLUX-SGL35-TEST:58,6,56", "@FLUX-SGL36-TEST:58,6,57", "@FLUX-SGL37-TEST:58,6,58", "@FLUX-SGL38-TEST:58,6,59"]], "block_vectors": ["STRING", {"multiline": true, "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL", "placeholder": "{target vector}/{reference vector}", "pysssss.autocomplete": false}], "heatmap_palette": [["viridis", "magma", "plasma", "inferno", "cividis"]], "heatmap_alpha": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "heatmap_strength": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 10.0, "step": 0.01}], "xyplot_mode": [["Simple", "Diff", "Diff+Heatmap"]]}}, "input_order": {"required": ["category_filter", "lora_name", "strength_model", "strength_clip", "inverse", "seed", "A", "B", "preset", "block_vectors", "heatmap_palette", "heatmap_alpha", "heatmap_strength", "xyplot_mode"]}, "output": ["XY", "XY"], "output_is_list": [false, false], "output_name": ["X (vectors)", "Y (effect_compares)"], "name": "XY Input: Lora Block Weight //Inspire", "display_name": "XY Input: LoRA Block Weight", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "LoraLoaderBlockWeight //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "category_filter": [["All", ""]], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False", "tooltip": "Apply the following weights for each block:\nTrue: 1 - weight\nFalse: weight"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": ""}], "A": ["FLOAT", {"default": 4.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"]], "block_vector": ["STRING", {"multiline": true, "placeholder": "block weight vectors", "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "pysssss.autocomplete": false}], "bypass": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["model", "clip", "category_filter", "lora_name", "strength_model", "strength_clip", "inverse", "seed", "A", "B", "preset", "block_vector", "bypass"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["model", "clip", "populated_vector"], "name": "LoraLoaderBlockWeight //Inspire", "display_name": "LoRA Loader (Block Weight)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "LoraBlockInfo //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "block_info": ["STRING", {"multiline": true}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "clip", "lora_name", "block_info"], "hidden": ["unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LoraBlockInfo //Inspire", "display_name": "LoRA Block Info", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": true}, "MakeLBW //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "category_filter": [["All", ""]], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "inverse": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False", "tooltip": "Apply the following weights for each block:\nTrue: 1 - weight\nFalse: weight"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": ""}], "A": ["FLOAT", {"default": 4.0, "min": -10.0, "max": 10.0, "step": 0.01}], "B": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "preset": [["Preset", "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0", "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0", "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0", "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0", "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0", "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0", "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1", "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R", "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A", "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A", "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5", "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0", "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0", "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1", "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0", "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "FLUX-DBL-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-DBL-FRONT7:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-DBL-MID6:1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0", "FLUX-DBL-TAIL6:1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1", "FLUX-SINGLE-ALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", "FLUX-SINGLE-1to10:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-11to20:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "FLUX-SINGLE-21to30:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0", "FLUX-SINGLE-31to37:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1", "FLUX-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"]], "block_vector": ["STRING", {"multiline": true, "placeholder": "block weight vectors", "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1", "pysssss.autocomplete": false}], "bypass": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["model", "clip", "category_filter", "lora_name", "inverse", "seed", "A", "B", "preset", "block_vector", "bypass"]}, "output": ["LBW_MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["lbw_model", "populated_vector"], "name": "MakeLBW //Inspire", "display_name": "Make LoRA Block Weight", "description": "Instead of directly applying the LoRA Block Weight to the MODEL, it is generated in a separate LBW_MODEL form.", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "ApplyLBW //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lbw_model": ["LBW_MODEL"]}}, "input_order": {"required": ["model", "clip", "strength_model", "strength_clip", "lbw_model"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "ApplyLBW //Inspire", "display_name": "Apply LoRA Block Weight", "description": "Apply LBW_MODEL to MODEL and CLIP", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "SaveLBW //Inspire": {"input": {"required": {"lbw_model": ["LBW_MODEL"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["lbw_model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLBW //Inspire", "display_name": "Save LoRA Block Weight", "description": "Save LBW_MODEL as a .lbw.safetensors file", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": true}, "LoadLBW //Inspire": {"input": {"required": {"lbw_model": [[]]}}, "input_order": {"required": ["lbw_model"]}, "output": ["LBW_MODEL"], "output_is_list": [false], "output_name": ["LBW_MODEL"], "name": "LoadLBW //Inspire", "display_name": "Load LoRA Block Weight", "description": "Load LBW_MODEL from .lbw.safetensors file", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/LoraBlockWeight", "output_node": false}, "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"detect_hand": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_body": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}]}}, "input_order": {"required": ["detect_hand", "detect_body", "detect_face", "resolution_upscale_by"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "OpenPose Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "DWPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"detect_hand": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_body": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "detect_face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}], "bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.onnx"}], "pose_estimator": [["dw-ll_ucoco_384_bs5.torchscript.pt", "dw-ll_ucoco_384.onnx", "dw-ll_ucoco.onnx"], {"default": "dw-ll_ucoco_384_bs5.torchscript.pt"}]}}, "input_order": {"required": ["detect_hand", "detect_body", "detect_face", "resolution_upscale_by", "bbox_detector", "pose_estimator"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "DWPreprocessor_Provider_for_SEGS //Inspire", "display_name": "DWPreprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.05}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["a", "bg_threshold"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"rm_nearest": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "rm_background": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}]}, "optional": {"boost": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["rm_nearest", "rm_background"], "optional": ["boost"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Canny_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"low_threshold": ["FLOAT", {"default": 0.4, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"default": 0.8, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["low_threshold", "high_threshold"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Canny Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "min_confidence": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}], "resolution_upscale_by": ["FLOAT", {"default": 1.0, "min": 0.5, "max": 100, "step": 0.1}]}}, "input_order": {"required": ["max_faces", "min_confidence", "resolution_upscale_by"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "HEDPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"safe": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["safe"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "HEDPreprocessor_Provider_for_SEGS //Inspire", "display_name": "HED Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"safe": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["safe"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire", "display_name": "Fake Scribble Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "AnimeLineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"coarse": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["coarse"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "LineArt Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "Color_Preprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "Color_Preprocessor_Provider_for_SEGS //Inspire", "display_name": "Color Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "InpaintPreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {}, "optional": {"black_pixel_for_xinsir_cn": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": [], "optional": ["black_pixel_for_xinsir_cn"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire", "display_name": "Inpaint Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "TilePreprocessor_Provider_for_SEGS //Inspire": {"input": {"required": {"pyrUp_iters": ["INT", {"default": 3, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["pyrUp_iters"]}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "TilePreprocessor_Provider_for_SEGS //Inspire", "display_name": "Tile Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS_PREPROCESSOR"], "output_is_list": [false], "output_name": ["SEGS_PREPROCESSOR"], "name": "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire", "display_name": "MeshGraphormer Depth Map Preprocessor Provider (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/SEGS/ControlNet", "output_node": false}, "MediaPipeFaceMeshDetectorProvider //Inspire": {"input": {"required": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "face": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "mouth": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_eyebrow": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_eye": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "left_pupil": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_eyebrow": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_eye": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "right_pupil": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["max_faces", "face", "mouth", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil"]}, "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "output_is_list": [false, false], "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "name": "MediaPipeFaceMeshDetectorProvider //Inspire", "display_name": "MediaPipeFaceMesh Detector Provider", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Detector", "output_node": false}, "KSampler //Inspire": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed for the initial noise applied to the latent."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"], "internal_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed used for generating noise in intermediate steps when using ancestral and SDE-based samplers.\nNOTE: If `noise_mode` is in GPU mode and `internal_seed` is the same as `seed`, the generated image may be distorted."}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method", "scheduler_func_opt", "internal_seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler //Inspire", "display_name": "KSampler (inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerAdvanced //Inspire": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed for the initial noise applied to the latent."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]], "noise_opt": ["NOISE_IMAGE"], "scheduler_func_opt": ["SCHEDULER_FUNC"], "internal_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed used for generating noise in intermediate steps when using ancestral and SDE-based samplers.\nNOTE: If `noise_mode` is in GPU mode and `internal_seed` is the same as `seed`, the generated image may be distorted."}]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method", "noise_opt", "scheduler_func_opt", "internal_seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerAdvanced //Inspire", "display_name": "KSamplerAdvanced (inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerPipe //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed for the initial noise applied to the latent."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC"], "internal_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed used for generating noise in intermediate steps when using ancestral and SDE-based samplers.\nNOTE: If `noise_mode` is in GPU mode and `internal_seed` is the same as `seed`, the generated image may be distorted."}]}}, "input_order": {"required": ["basic_pipe", "seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "denoise", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["scheduler_func_opt", "internal_seed"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["LATENT", "VAE"], "name": "KSamplerPipe //Inspire", "display_name": "KSampler [pipe] (inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/a1111_compat", "output_node": false}, "KSamplerAdvancedPipe //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed for the initial noise applied to the latent."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"noise_opt": ["NOISE_IMAGE"], "scheduler_func_opt": ["SCHEDULER_FUNC"], "internal_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed used for generating noise in intermediate steps when using ancestral and SDE-based samplers.\nNOTE: If `noise_mode` is in GPU mode and `internal_seed` is the same as `seed`, the generated image may be distorted."}]}}, "input_order": {"required": ["basic_pipe", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["noise_opt", "scheduler_func_opt", "internal_seed"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["LATENT", "VAE"], "name": "KSamplerAdvancedPipe //Inspire", "display_name": "KSamplerAdvanced [pipe] (inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/a1111_compat", "output_node": false}, "RandomNoise //Inspire": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed for the initial noise applied to the latent."}], "noise_mode": [["GPU(=A1111)", "CPU"]], "batch_seed_mode": [["incremental", "comfy", "variation str inc:0.01", "variation str inc:0.05"]], "variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"variation_method": [["linear", "slerp"]], "internal_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "This is the seed used for generating noise in intermediate steps when using ancestral and SDE-based samplers.\nNOTE: If `noise_mode` is in GPU mode and `internal_seed` is the same as `seed`, the generated image may be distorted."}]}}, "input_order": {"required": ["noise_seed", "noise_mode", "batch_seed_mode", "variation_seed", "variation_strength"], "optional": ["variation_method", "internal_seed"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RandomNoise //Inspire", "display_name": "RandomNoise (inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/a1111_compat", "output_node": false}, "HyperTile //Inspire": {"input": {"required": {"model": ["MODEL"], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "tile_size", "swap_size", "max_depth", "scale_depth", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HyperTile //Inspire", "display_name": "HyperTile (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/__for_testing", "output_node": false}, "LoadPromptsFromDir //Inspire": {"input": {"required": {"prompt_dir": [["example"]]}, "optional": {"reload": ["BOOLEAN", {"default": false, "label_on": "if file changed", "label_off": "if value changed"}], "load_cap": ["INT", {"default": 0, "min": 0, "step": 1, "advanced": true, "tooltip": "The amount of prompts to load at once:\n0: Load all\n1 or higher: Load a specified number"}], "start_index": ["INT", {"default": 0, "min": -1, "step": 1, "max": 18446744073709551615, "advanced": true, "tooltip": "Starting index for loading prompts:\n-1: The last prompt\n0 or higher: Load from the specified index"}]}}, "input_order": {"required": ["prompt_dir"], "optional": ["reload", "load_cap", "start_index"]}, "output": ["ZIPPED_PROMPT", "INT", "INT"], "output_is_list": [true, false, false], "output_name": ["zipped_prompt", "count", "remaining_count"], "name": "LoadPromptsFromDir //Inspire", "display_name": "Load Prompts From Dir (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadPromptsFromFile //Inspire": {"input": {"required": {"prompt_file": [["example/prompt2.txt", "example/prompt1.txt"]]}, "optional": {"text_data_opt": ["STRING", {"defaultInput": true}], "reload": ["BOOLEAN", {"default": false, "label_on": "if file changed", "label_off": "if value changed"}], "load_cap": ["INT", {"default": 0, "min": 0, "step": 1, "advanced": true, "tooltip": "The amount of prompts to load at once:\n0: Load all\n1 or higher: Load a specified number"}], "start_index": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615, "step": 1, "advanced": true, "tooltip": "Starting index for loading prompts:\n-1: The last prompt\n0 or higher: Load from the specified index"}]}}, "input_order": {"required": ["prompt_file"], "optional": ["text_data_opt", "reload", "load_cap", "start_index"]}, "output": ["ZIPPED_PROMPT", "INT", "INT"], "output_is_list": [true, false, false], "output_name": ["zipped_prompt", "count", "remaining_count"], "name": "LoadPromptsFromFile //Inspire", "display_name": "Load Prompts From File (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadSinglePromptFromFile //Inspire": {"input": {"required": {"prompt_file": [["example/prompt2.txt", "example/prompt1.txt"]], "index": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"text_data_opt": ["STRING", {"defaultInput": true}]}}, "input_order": {"required": ["prompt_file", "index"], "optional": ["text_data_opt"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [true], "output_name": ["ZIPPED_PROMPT"], "name": "LoadSinglePromptFromFile //Inspire", "display_name": "Load Single Prompt From File (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "UnzipPrompt //Inspire": {"input": {"required": {"zipped_prompt": ["ZIPPED_PROMPT"]}}, "input_order": {"required": ["zipped_prompt"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "name"], "name": "UnzipPrompt //Inspire", "display_name": "Unzip Prompt (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "ZipPrompt //Inspire": {"input": {"required": {"positive": ["STRING", {"forceInput": true, "multiline": true}], "negative": ["STRING", {"forceInput": true, "multiline": true}]}, "optional": {"name_opt": ["STRING", {"forceInput": true, "multiline": false}]}}, "input_order": {"required": ["positive", "negative"], "optional": ["name_opt"]}, "output": ["ZIPPED_PROMPT"], "output_is_list": [false], "output_name": ["ZIPPED_PROMPT"], "name": "ZipPrompt //Inspire", "display_name": "Zip Prompt (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "PromptExtractor //Inspire": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png"], {"image_upload": true}], "positive_id": ["STRING", {}], "negative_id": ["STRING", {}], "info": ["STRING", {"multiline": true}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "positive_id", "negative_id", "info"], "hidden": ["unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PromptExtractor //Inspire", "display_name": "Prompt Extractor (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": true}, "GlobalSeed //Inspire": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "mode": ["BOOLEAN", {"default": true, "label_on": "control_before_generate", "label_off": "control_after_generate"}], "action": [["fixed", "increment", "decrement", "randomize", "increment for each node", "decrement for each node", "randomize for each node"]], "last_seed": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "mode", "action", "last_seed"]}, "output": [], "output_is_list": [], "output_name": [], "name": "GlobalSeed //Inspire", "display_name": "Global Seed (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": true}, "SeedLogger //Inspire": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "seeds": ["STRING", {"multiline": true, "dynamicPrompts": false, "control_after_generate": false}], "limit": ["INT", {"default": 5, "min": 0, "max": 18446744073709551615}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed", "seeds", "limit"], "hidden": ["unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SeedLogger //Inspire", "display_name": "Seed Logger (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": true}, "GlobalSampler //Inspire": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]]}}, "input_order": {"required": ["sampler_name", "scheduler"]}, "output": [], "output_is_list": [], "output_name": [], "name": "GlobalSampler //Inspire", "display_name": "Global Sampler (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": true}, "BindImageListPromptList //Inspire": {"input": {"required": {"images": ["IMAGE"], "zipped_prompts": ["ZIPPED_PROMPT"], "default_positive": ["STRING", {"multiline": true, "placeholder": "default positive"}], "default_negative": ["STRING", {"multiline": true, "placeholder": "default negative"}]}}, "input_order": {"required": ["images", "zipped_prompts", "default_positive", "default_negative"]}, "output": ["IMAGE", "STRING", "STRING", "STRING"], "output_is_list": [true, true, true], "output_name": ["image", "positive", "negative", "prompt_label"], "name": "BindImageListPromptList //Inspire", "display_name": "Bind [ImageList, PromptList] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "WildcardEncode //Inspire": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"], {"default": "comfy++"}], "wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Wildcard Prompt (User Input)"}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Prompt (Will be generated automatically)"}], "mode": [["populate", "fixed", "reproduce"], {"default": "populate", "tooltip": "populate: Before running the workflow, it overwrites the existing value of 'populated_text' with the prompt processed from 'wildcard_text'. In this mode, 'populated_text' cannot be edited.\nfixed: Ignores wildcard_text and keeps 'populated_text' as is. You can edit 'populated_text' in this mode.\nreproduce: This mode operates as 'fixed' mode only once for reproduction, and then it switches to 'populate' mode."}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "clip", "token_normalization", "weight_interpretation", "wildcard_text", "populated_text", "mode", "Select to add LoRA", "Select to add Wildcard", "seed"]}, "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "conditioning", "populated_text"], "name": "WildcardEncode //Inspire", "display_name": "Wildcard Encode (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "PromptBuilder //Inspire": {"input": {"required": {"category": [["Angle of View", "Artists", "Character Types", "Colors", "Composition", "Composition Form", "Lighting", "Negative", "Picture Effect", "Picture Quality", "Setting", "Shot", "Style", "#PLACEHOLDER"]], "preset": [["#PRESET"]], "text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["category", "preset", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "PromptBuilder //Inspire", "display_name": "Prompt Builder (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "SeedExplorer //Inspire": {"input": {"required": {"latent": ["LATENT"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]], "initial_batch_seed_mode": [["incremental", "comfy"]]}, "optional": {"variation_method": [["linear", "slerp"]], "model": ["MODEL"]}}, "input_order": {"required": ["latent", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode", "initial_batch_seed_mode"], "optional": ["variation_method", "model"]}, "output": ["NOISE_IMAGE"], "output_is_list": [false], "output_name": ["NOISE_IMAGE"], "name": "SeedExplorer //Inspire", "display_name": "Seed Explorer (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "ListCounter //Inspire": {"input": {"required": {"signal": ["*"], "base_value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["signal", "base_value"], "hidden": ["unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ListCounter //Inspire", "display_name": "List Counter (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "CLIPTextEncodeWithWeight //Inspire": {"input": {"required": {"text": ["STRING", {"multiline": true}], "clip": ["CLIP"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "add_weight": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["text", "clip", "strength", "add_weight"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeWithWeight //Inspire", "display_name": "CLIPTextEncodeWithWeight (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "RandomGeneratorForList //Inspire": {"input": {"required": {"signal": ["*"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["signal", "seed"], "hidden": ["unique_id"]}, "output": ["*", "INT"], "output_is_list": [false, false], "output_name": ["signal", "random_value"], "name": "RandomGeneratorForList //Inspire", "display_name": "Random Generator for List (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "MakeBasicPipe //Inspire": {"input": {"required": {"ckpt_name": [[]], "ckpt_key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'ckpt_name' as the key."}], "positive_wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Positive Prompt (User Input)"}], "negative_wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Negative Prompt (User Input)"}], "Add selection to": ["BOOLEAN", {"default": true, "label_on": "Positive", "label_off": "Negative"}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "wildcard_mode": [["populate", "fixed", "reproduce"], {"default": "populate", "tooltip": "populate: Before running the workflow, it overwrites the existing value of 'populated_text' with the prompt processed from 'wildcard_text'. In this mode, 'populated_text' cannot be edited.\nfixed: Ignores wildcard_text and keeps 'populated_text' as is. You can edit 'populated_text' in this mode.\nreproduce: This mode operates as 'fixed' mode only once for reproduction, and then it switches to 'populate' mode."}], "positive_populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Positive Prompt (Will be generated automatically)"}], "negative_populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "Populated Negative Prompt (Will be generated automatically)"}], "token_normalization": [["none", "mean", "length", "length+mean"]], "weight_interpretation": [["comfy", "A1111", "compel", "comfy++", "down_weight"], {"default": "comfy++"}], "stop_at_clip_layer": ["INT", {"default": -2, "min": -24, "max": -1, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"vae_opt": ["VAE"]}}, "input_order": {"required": ["ckpt_name", "ckpt_key_opt", "positive_wildcard_text", "negative_wildcard_text", "Add selection to", "Select to add LoRA", "Select to add Wildcard", "wildcard_mode", "positive_populated_text", "negative_populated_text", "token_normalization", "weight_interpretation", "stop_at_clip_layer", "seed"], "optional": ["vae_opt"]}, "output": ["BASIC_PIPE", "STRING"], "output_is_list": [false, false], "output_name": ["basic_pipe", "cache_key"], "name": "MakeBasicPipe //Inspire", "display_name": "Make Basic Pipe (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "RemoveControlNet //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "RemoveControlNet //Inspire", "display_name": "Remove ControlNet (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "RemoveControlNetFromRegionalPrompts //Inspire": {"input": {"required": {"regional_prompts": ["REGIONAL_PROMPTS"]}}, "input_order": {"required": ["regional_prompts"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RemoveControlNetFromRegionalPrompts //Inspire", "display_name": "Remove ControlNet [RegionalPrompts] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "CompositeNoise //Inspire": {"input": {"required": {"destination": ["NOISE_IMAGE"], "source": ["NOISE_IMAGE"], "mode": [["center", "left-top", "right-top", "left-bottom", "right-bottom", "xy"]], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["destination", "source", "mode", "x", "y"]}, "output": ["NOISE_IMAGE"], "output_is_list": [false], "output_name": ["NOISE_IMAGE"], "name": "CompositeNoise //Inspire", "display_name": "Composite Noise (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Prompt", "output_node": false}, "LoadImagesFromDir //Inspire": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615, "step": 1}], "load_always": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "sort_method": [["None", "Alphabetical (ASC)", "Alphabetical (DESC)", "Numerical (ASC)", "Numerical (DESC)", "Datetime (ASC)", "Datetime (DESC)"]]}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "start_index", "load_always", "sort_method"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "INT"], "name": "LoadImagesFromDir //Inspire", "display_name": "Load Image Batch From Dir (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "image", "output_node": false}, "LoadImageListFromDir //Inspire": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}], "load_always": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "sort_method": [["None", "Alphabetical (ASC)", "Alphabetical (DESC)", "Numerical (ASC)", "Numerical (DESC)", "Datetime (ASC)", "Datetime (DESC)"]]}}, "input_order": {"required": ["directory"], "optional": ["image_load_cap", "start_index", "load_always", "sort_method"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [true, true, true], "output_name": ["IMAGE", "MASK", "FILE PATH"], "name": "LoadImageListFromDir //Inspire", "display_name": "Load Image List From Dir (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "image", "output_node": false}, "LoadImage //Inspire": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png", "#DATA"], {"image_upload": true}], "image_data": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["image", "image_data"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImage //Inspire", "display_name": "Load Image (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/image", "output_node": false}, "ChangeImageBatchSize //Inspire": {"input": {"required": {"image": ["IMAGE"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "mode": [["simple"]]}}, "input_order": {"required": ["image", "batch_size", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ChangeImageBatchSize //Inspire", "display_name": "Change Image Batch Size (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "ChangeLatentBatchSize //Inspire": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "mode": [["simple"]]}}, "input_order": {"required": ["latent", "batch_size", "mode"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ChangeLatentBatchSize //Inspire", "display_name": "Change Latent Batch Size (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "ImageBatchSplitter //Inspire": {"input": {"required": {"images": ["IMAGE"], "split_count": ["INT", {"default": 4, "min": 0, "max": 50, "step": 1}]}}, "input_order": {"required": ["images", "split_count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchSplitter //Inspire", "display_name": "Image Batch Splitter (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "LatentBatchSplitter //Inspire": {"input": {"required": {"latent": ["LATENT"], "split_count": ["INT", {"default": 4, "min": 0, "max": 50, "step": 1}]}}, "input_order": {"required": ["latent", "split_count"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatchSplitter //Inspire", "display_name": "Latent Batch Splitter (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "ColorMapToMasks //Inspire": {"input": {"required": {"color_map": ["IMAGE"], "min_pixels": ["INT", {"default": 500, "min": 1, "max": 18446744073709551615, "step": 1}], "max_count": ["INT", {"default": 5, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["color_map", "min_pixels", "max_count"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorMapToMasks //Inspire", "display_name": "Color Map To Masks (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "SelectNthMask //Inspire": {"input": {"required": {"masks": ["MASK"], "idx": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["masks", "idx"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SelectNthMask //Inspire", "display_name": "Select Nth Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "RegionalPromptSimple //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "mask": ["MASK"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "wildcard_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "wildcard prompt"}], "controlnet_in_pipe": ["BOOLEAN", {"default": false, "label_on": "Keep", "label_off": "Override"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "mask", "cfg", "sampler_name", "scheduler", "wildcard_prompt", "controlnet_in_pipe", "sigma_factor"], "optional": ["variation_seed", "variation_strength", "variation_method", "scheduler_func_opt"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RegionalPromptSimple //Inspire", "display_name": "Regional Prompt Simple (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalPromptColorMask //Inspire": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "wildcard_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "placeholder": "wildcard prompt"}], "controlnet_in_pipe": ["BOOLEAN", {"default": false, "label_on": "Keep", "label_off": "Override"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "variation_method": [["linear", "slerp"]], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["basic_pipe", "color_mask", "mask_color", "cfg", "sampler_name", "scheduler", "wildcard_prompt", "controlnet_in_pipe", "sigma_factor"], "optional": ["variation_seed", "variation_strength", "variation_method", "scheduler_func_opt"]}, "output": ["REGIONAL_PROMPTS", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_PROMPTS", "MASK"], "name": "RegionalPromptColorMask //Inspire", "display_name": "Regional Prompt By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalConditioningSimple //Inspire": {"input": {"required": {"clip": ["CLIP"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]], "prompt": ["STRING", {"multiline": true, "placeholder": "prompt"}]}}, "input_order": {"required": ["clip", "mask", "strength", "set_cond_area", "prompt"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "RegionalConditioningSimple //Inspire", "display_name": "Regional Conditioning Simple (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalConditioningColorMask //Inspire": {"input": {"required": {"clip": ["CLIP"], "color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]], "prompt": ["STRING", {"multiline": true, "placeholder": "prompt"}]}, "optional": {"dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["clip", "color_mask", "mask_color", "strength", "set_cond_area", "prompt"], "optional": ["dilation"]}, "output": ["CONDITIONING", "MASK"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "MASK"], "name": "RegionalConditioningColorMask //Inspire", "display_name": "Regional Conditioning By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterMask //Inspire": {"input": {"required": {"mask": ["MASK"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["IPAdapterPlus is not installed"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["mask", "image", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["faceid_v2", "weight_v2", "combine_embeds", "neg_image"]}, "output": ["REGIONAL_IPADAPTER"], "output_is_list": [false], "output_name": ["REGIONAL_IPADAPTER"], "name": "RegionalIPAdapterMask //Inspire", "display_name": "Regional IPAdapter Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["IPAdapterPlus is not installed"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["color_mask", "mask_color", "image", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["faceid_v2", "weight_v2", "combine_embeds", "neg_image"]}, "output": ["REGIONAL_IPADAPTER", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_IPADAPTER", "MASK"], "name": "RegionalIPAdapterColorMask //Inspire", "display_name": "Regional IPAdapter By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterEncodedMask //Inspire": {"input": {"required": {"mask": ["MASK"], "embeds": ["EMBEDS"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["IPAdapterPlus is not installed"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["mask", "embeds", "weight", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["neg_embeds"]}, "output": ["REGIONAL_IPADAPTER"], "output_is_list": [false], "output_name": ["REGIONAL_IPADAPTER"], "name": "RegionalIPAdapterEncodedMask //Inspire", "display_name": "Regional IPAdapter Encoded Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalIPAdapterEncodedColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "embeds": ["EMBEDS"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["IPAdapterPlus is not installed"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}]}, "optional": {"neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["color_mask", "mask_color", "embeds", "weight", "weight_type", "start_at", "end_at", "unfold_batch"], "optional": ["neg_embeds"]}, "output": ["REGIONAL_IPADAPTER", "MASK"], "output_is_list": [false, false], "output_name": ["REGIONAL_IPADAPTER", "MASK"], "name": "RegionalIPAdapterEncodedColorMask //Inspire", "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalSeedExplorerMask //Inspire": {"input": {"required": {"mask": ["MASK"], "noise": ["NOISE_IMAGE"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]]}, "optional": {"variation_method": [["linear", "slerp"]]}}, "input_order": {"required": ["mask", "noise", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode"], "optional": ["variation_method"]}, "output": ["NOISE_IMAGE"], "output_is_list": [false], "output_name": ["NOISE_IMAGE"], "name": "RegionalSeedExplorerMask //Inspire", "display_name": "Regional Seed Explorer By Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalSeedExplorerColorMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "mask_color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "noise": ["NOISE_IMAGE"], "seed_prompt": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "enable_additional": ["BOOLEAN", {"default": true, "label_on": "true", "label_off": "false"}], "additional_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "additional_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU"]]}, "optional": {"variation_method": [["linear", "slerp"]]}}, "input_order": {"required": ["color_mask", "mask_color", "noise", "seed_prompt", "enable_additional", "additional_seed", "additional_strength", "noise_mode"], "optional": ["variation_method"]}, "output": ["NOISE_IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["NOISE_IMAGE", "MASK"], "name": "RegionalSeedExplorerColorMask //Inspire", "display_name": "Regional Seed Explorer By Color Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "ToIPAdapterPipe //Inspire": {"input": {"required": {"ipadapter": ["IPADAPTER"], "model": ["MODEL"]}, "optional": {"clip_vision": ["CLIP_VISION"], "insightface": ["INSIGHTFACE"]}}, "input_order": {"required": ["ipadapter", "model"], "optional": ["clip_vision", "insightface"]}, "output": ["IPADAPTER_PIPE"], "output_is_list": [false], "output_name": ["IPADAPTER_PIPE"], "name": "ToIPAdapterPipe //Inspire", "display_name": "ToIPAdapterPipe (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "FromIPAdapterPipe //Inspire": {"input": {"required": {"ipadapter_pipe": ["IPADAPTER_PIPE"]}}, "input_order": {"required": ["ipadapter_pipe"]}, "output": ["IPADAPTER", "MODEL", "CLIP_VISION", "INSIGHTFACE"], "output_is_list": [false, false, false, false], "output_name": ["ipadapter", "model", "clip_vision", "insight_face"], "name": "FromIPAdapterPipe //Inspire", "display_name": "FromIPAdapterPipe (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "ApplyRegionalIPAdapters //Inspire": {"input": {"required": {"ipadapter_pipe": ["IPADAPTER_PIPE"], "regional_ipadapter1": ["REGIONAL_IPADAPTER"]}}, "input_order": {"required": ["ipadapter_pipe", "regional_ipadapter1"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRegionalIPAdapters //Inspire", "display_name": "Apply Regional IPAdapters (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "RegionalCFG //Inspire": {"input": {"required": {"model": ["MODEL"], "mask": ["MASK"]}}, "input_order": {"required": ["model", "mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RegionalCFG //Inspire", "display_name": "Regional CFG (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "ColorMaskToDepthMask //Inspire": {"input": {"required": {"color_mask": ["IMAGE"], "spec": ["STRING", {"multiline": true, "default": "#FF0000:1.0\n#000000:1.0"}], "base_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "flatten_method": [["override", "sum", "max"]]}}, "input_order": {"required": ["color_mask", "spec", "base_value", "dilation", "flatten_method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorMaskToDepthMask //Inspire", "display_name": "Color Mask To Depth Mask (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Regional", "output_node": false}, "KSamplerProgress //Inspire": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "interval": ["INT", {"default": 1, "min": 1, "max": 10000}], "omit_start_latent": ["BOOLEAN", {"default": true, "label_on": "True", "label_off": "False"}], "omit_final_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise", "noise_mode", "interval", "omit_start_latent", "omit_final_latent"], "optional": ["scheduler_func_opt"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["latent", "progress_latent"], "name": "KSamplerProgress //Inspire", "display_name": "KSampler Progress (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/analysis", "output_node": false}, "KSamplerAdvancedProgress //Inspire": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "noise_mode": [["GPU(=A1111)", "CPU", "GPU+internal_seed", "CPU+internal_seed"]], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}], "interval": ["INT", {"default": 1, "min": 1, "max": 10000}], "omit_start_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "omit_final_latent": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}]}, "optional": {"prev_progress_latent_opt": ["LATENT"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "noise_mode", "return_with_leftover_noise", "interval", "omit_start_latent", "omit_final_latent"], "optional": ["prev_progress_latent_opt", "scheduler_func_opt"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["latent", "progress_latent"], "name": "KSamplerAdvancedProgress //Inspire", "display_name": "KSampler Advanced Progress (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/analysis", "output_node": false}, "ScheduledCFGGuider //Inspire": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sigmas": ["SIGMAS"], "from_cfg": ["FLOAT", {"default": 6.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "to_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "schedule": [["linear", "log", "exp", "cos"], {"default": "log"}]}}, "input_order": {"required": ["model", "positive", "negative", "sigmas", "from_cfg", "to_cfg", "schedule"]}, "output": ["GUIDER", "SIGMAS"], "output_is_list": [false, false], "output_name": ["GUIDER", "SIGMAS"], "name": "ScheduledCFGGuider //Inspire", "display_name": "Scheduled CFGGuider (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "sampling/custom_sampling/guiders", "output_node": false}, "ScheduledPerpNegCFGGuider //Inspire": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "empty_conditioning": ["CONDITIONING"], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}], "sigmas": ["SIGMAS"], "from_cfg": ["FLOAT", {"default": 6.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "to_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "schedule": [["linear", "log", "exp", "cos"], {"default": "log"}]}}, "input_order": {"required": ["model", "positive", "negative", "empty_conditioning", "neg_scale", "sigmas", "from_cfg", "to_cfg", "schedule"]}, "output": ["GUIDER", "SIGMAS"], "output_is_list": [false, false], "output_name": ["GUIDER", "SIGMAS"], "name": "ScheduledPerpNegCFGGuider //Inspire", "display_name": "Scheduled PerpNeg CFGGuider (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "sampling/custom_sampling/guiders", "output_node": false}, "CacheBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [false], "output_name": ["data opt"], "name": "CacheBackendData //Inspire", "display_name": "Cache Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [false], "output_name": ["data opt"], "name": "CacheBackendDataNumberKey //Inspire", "display_name": "Cache Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataList //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data opt"], "name": "CacheBackendDataList //Inspire", "display_name": "Cache Backend Data List (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "CacheBackendDataNumberKeyList //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "tag": ["STRING", {"multiline": false, "placeholder": "Tag: short description"}], "data": ["*"]}}, "input_order": {"required": ["key", "tag", "data"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data opt"], "name": "CacheBackendDataNumberKeyList //Inspire", "display_name": "Cache Backend Data List [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "RetrieveBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"}]}}, "input_order": {"required": ["key"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data"], "name": "RetrieveBackendData //Inspire", "display_name": "Retrieve Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "RetrieveBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["key"]}, "output": ["*"], "output_is_list": [true], "output_name": ["data"], "name": "RetrieveBackendDataNumberKey //Inspire", "display_name": "Retrieve Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "RemoveBackendData //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false, "placeholder": "Input data key ('*' = clear all)"}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["key"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "RemoveBackendData //Inspire", "display_name": "Remove Backend Data (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "RemoveBackendDataNumberKey //Inspire": {"input": {"required": {"key": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["key"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "RemoveBackendDataNumberKey //Inspire", "display_name": "Remove Backend Data [NumberKey] (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "ShowCachedInfo //Inspire": {"input": {"required": {"cache_info": ["STRING", {"multiline": true, "default": ""}], "key": ["STRING", {"multiline": false, "default": ""}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["cache_info", "key"], "hidden": ["unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ShowCachedInfo //Inspire", "display_name": "Show Cached Info (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": true}, "CheckpointLoaderSimpleShared //Inspire": {"input": {"required": {"ckpt_name": [[]], "key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'ckpt_name' as the key."}]}, "optional": {"mode": [["Auto", "Override Cache", "Read Only"]]}}, "input_order": {"required": ["ckpt_name", "key_opt"], "optional": ["mode"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "vae", "cache key"], "name": "CheckpointLoaderSimpleShared //Inspire", "display_name": "Shared Checkpoint Loader (Inspire)", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "LoadDiffusionModelShared //Inspire": {"input": {"required": {"model_name": [[], {"tooltip": "Diffusion Model Name"}], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2"]], "key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'model_name' as the key."}], "mode": [["Auto", "Override Cache", "Read Only"]]}}, "input_order": {"required": ["model_name", "weight_dtype", "key_opt", "mode"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["model", "cache key"], "name": "LoadDiffusionModelShared //Inspire", "display_name": "Shared Diffusion Model Loader (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "LoadTextEncoderShared //Inspire": {"input": {"required": {"model_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "model_name2": [["None", "EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "model_name3": [["None", "EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio", "mochi", "ltxv", "pixart", "cosmos", "sdxl", "flux", "hunyuan_video"]], "key_opt": ["STRING", {"multiline": false, "placeholder": "If empty, use 'model_name' as the key."}], "mode": [["Auto", "Override Cache", "Read Only"]]}, "optional": {"device": [["default", "cpu"], {"advanced": true}]}}, "input_order": {"required": ["model_name1", "model_name2", "model_name3", "type", "key_opt", "mode"], "optional": ["device"]}, "output": ["CLIP", "STRING"], "output_is_list": [false, false], "output_name": ["clip", "cache key"], "name": "LoadTextEncoderShared //Inspire", "display_name": "Shared Text Encoder Loader (Inspire)", "description": "[Recipes single]\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 / clip-g / clip-l\nstable_audio: t5\nmochi: t5\ncosmos: old t5 xxl\n\n[Recipes dual]\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5\n\n[Recipes triple]\nsd3: clip-l, clip-g, t5", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "StableCascade_CheckpointLoader //Inspire": {"input": {"required": {"stage_b": [[], {"default": ""}], "key_opt_b": ["STRING", {"multiline": false, "placeholder": "If empty, use 'stage_b' as the key."}], "stage_c": [[], {"default": ""}], "key_opt_c": ["STRING", {"multiline": false, "placeholder": "If empty, use 'stage_c' as the key."}], "cache_mode": [["none", "stage_b", "stage_c", "all"], {"default": "none"}]}}, "input_order": {"required": ["stage_b", "key_opt_b", "stage_c", "key_opt_c", "cache_mode"]}, "output": ["MODEL", "VAE", "MODEL", "VAE", "CLIP_VISION", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["b_model", "b_vae", "c_model", "c_vae", "c_clip_vision", "clip", "key_b", "key_c"], "name": "StableCascade_CheckpointLoader //Inspire", "display_name": "Stable Cascade Checkpoint Loader (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "IsCached //Inspire": {"input": {"required": {"key": ["STRING", {"multiline": false}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["key"], "hidden": ["unique_id"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "IsCached //Inspire", "display_name": "Is Cached (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Backend", "output_node": false}, "FloatRange //Inspire": {"input": {"required": {"start": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 1e-09}], "stop": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 1e-09}], "step": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 100.0, "step": 1e-09}], "limit": ["INT", {"default": 100, "min": 2, "max": 4096, "step": 1}], "ensure_end": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["start", "stop", "step", "limit", "ensure_end"]}, "output": ["FLOAT"], "output_is_list": [true], "output_name": ["FLOAT"], "name": "FloatRange //Inspire", "display_name": "Float Range (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/List", "output_node": false}, "WorklistToItemList //Inspire": {"input": {"required": {"item": ["*"]}}, "input_order": {"required": ["item"]}, "output": ["ITEM_LIST"], "output_is_list": [false], "output_name": ["item_list"], "name": "WorklistToItemList //Inspire", "display_name": "Worklist To Item List (Inspire)", "description": "The list in ComfyUI allows for repeated execution of a sub-workflow.\nThis groups these repetitions (a.k.a. list) into a single ITEM_LIST output.\nITEM_LIST can then be used in ForeachList.", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/List", "output_node": false}, "ForeachListBegin //Inspire": {"input": {"required": {"item_list": ["ITEM_LIST", {"tooltip": "ITEM_LIST containing items to be processed iteratively."}]}, "optional": {"initial_input": ["*", {"tooltip": "If initial_input is omitted, the first item in item_list is used as the initial value, and the processing starts from the second item in item_list."}]}}, "input_order": {"required": ["item_list"], "optional": ["initial_input"]}, "output": ["FOREACH_LIST_CONTROL", "ITEM_LIST", "*", "*"], "output_is_list": [false, false, false, false], "output_name": ["flow_control", "remained_list", "item", "intermediate_output"], "name": "ForeachListBegin //Inspire", "display_name": "\u25b6Foreach List (Inspire)", "description": "A starting node for performing iterative tasks by retrieving items one by one from the ITEM_LIST.\nGenerate a new intermediate_output using item and intermediate_output as inputs, then connect it to ForeachListEnd.\nNOTE:If initial_input is omitted, the first item in item_list is used as the initial value, and the processing starts from the second item in item_list.", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/List", "output_node": false, "output_tooltips": ["Pass ForeachListEnd as is to indicate the end of the iteration.", "Output the ITEM_LIST containing the remaining items during the iteration, passing ForeachListEnd as is to indicate the end of the iteration.", "Output the current item during the iteration.", "Output the intermediate results during the iteration."]}, "ForeachListEnd //Inspire": {"input": {"required": {"flow_control": ["FOREACH_LIST_CONTROL", {"rawLink": true, "tooltip": "Directly connect the output of ForeachListBegin, the starting node of the iteration."}], "remained_list": ["ITEM_LIST", {"tooltip": "Directly connect the output of ForeachListBegin, the starting node of the iteration."}], "intermediate_output": ["*", {"tooltip": "Connect the intermediate outputs processed within the iteration here."}]}, "hidden": {"dynprompt": "DYNPROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["flow_control", "remained_list", "intermediate_output"], "hidden": ["dynprompt", "unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["result"], "name": "ForeachListEnd //Inspire", "display_name": "Foreach List\u25c0 (Inspire)", "description": "A end node for performing iterative tasks by retrieving items one by one from the ITEM_LIST.\nNOTE:Directly connect the outputs of ForeachListBegin to 'flow_control' and 'remained_list'.", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/List", "output_node": false, "output_tooltips": ["This is the final output value."]}, "DropItems //Inspire": {"input": {"required": {"item_list": ["ITEM_LIST", {"tooltip": "Directly connect the output of ForeachListBegin, the starting node of the iteration."}]}}, "input_order": {"required": ["item_list"]}, "output": ["*"], "output_is_list": [false], "output_name": ["ITEM_LIST"], "name": "DropItems //Inspire", "display_name": "Drop Items (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/List", "output_node": false, "output_tooltips": ["This is the final output value."]}, "ConcatConditioningsWithMultiplier //Inspire": {"input": {"required": {"conditioning1": ["CONDITIONING"]}, "optional": {"multiplier1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning1"], "optional": ["multiplier1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConcatConditioningsWithMultiplier //Inspire", "display_name": "Concat Conditionings with Multiplier (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/__for_testing", "output_node": false}, "ConditioningUpscale //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"], "scalar": ["INT", {"default": 2, "min": 1, "max": 100, "step": 0.5}]}}, "input_order": {"required": ["conditioning", "scalar"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningUpscale //Inspire", "display_name": "Conditioning Upscale (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/conditioning", "output_node": false}, "ConditioningStretch //Inspire": {"input": {"required": {"conditioning": ["CONDITIONING"], "resolutionX": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "resolutionY": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "newWidth": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "newHeight": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["conditioning", "resolutionX", "resolutionY", "newWidth", "newHeight"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningStretch //Inspire", "display_name": "Conditioning Stretch (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/conditioning", "output_node": false}, "IPAdapterModelHelper //Inspire": {"input": {"required": {"model": ["MODEL"], "preset": [["SD1.5", "SD1.5 Light v11", "SD1.5 Light", "SD1.5 Plus", "SD1.5 Plus Face", "SD1.5 Full Face", "SD1.5 ViT-G", "SDXL", "SDXL ViT-H", "SDXL Plus ViT-H", "SDXL Plus Face ViT-H", "Kolors Plus", "SD1.5 FaceID", "SD1.5 FaceID Plus v2", "SD1.5 FaceID Plus", "SD1.5 FaceID Portrait v11", "SD1.5 FaceID Portrait", "SDXL FaceID", "SDXL FaceID Plus v2", "SDXL FaceID Portrait", "SDXL FaceID Portrait unnorm", "Kolors FaceID Plus", "SD1.5 Plus Composition", "SDXL Plus Composition"]], "lora_strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "lora_strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "insightface_provider": [["CPU", "CUDA", "ROCM"]], "cache_mode": [["insightface only", "clip_vision only", "all", "none"], {"default": "insightface only"}]}, "optional": {"clip": ["CLIP"], "insightface_model_name": [["buffalo_l", "antelopev2"]]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "preset", "lora_strength_model", "lora_strength_clip", "insightface_provider", "cache_mode"], "optional": ["clip", "insightface_model_name"], "hidden": ["unique_id"]}, "output": ["IPADAPTER_PIPE", "IPADAPTER", "CLIP_VISION", "INSIGHTFACE", "MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["IPADAPTER_PIPE", "IPADAPTER", "CLIP_VISION", "INSIGHTFACE", "MODEL", "CLIP", "insightface_cache_key", "clip_vision_cache_key"], "name": "IPAdapterModelHelper //Inspire", "display_name": "IPAdapter Model Helper (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/models", "output_node": false}, "RGB_HexToHSV //Inspire": {"input": {"required": {"rgb_hex": ["STRING", {"defaultInput": true}]}}, "input_order": {"required": ["rgb_hex"]}, "output": ["FLOAT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["hue", "saturation", "value"], "name": "RGB_HexToHSV //Inspire", "display_name": "RGB Hex To HSV (Inspire)", "description": "", "python_module": "custom_nodes.comfyui-inspire-pack", "category": "InspirePack/Util", "output_node": false}, "Context Big (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}], "steps": ["INT", {"forceInput": true}], "step_refiner": ["INT", {"forceInput": true}], "cfg": ["FLOAT", {"forceInput": true}], "ckpt_name": [[], {"forceInput": true}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"forceInput": true}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"forceInput": true}], "clip_width": ["INT", {"forceInput": true}], "clip_height": ["INT", {"forceInput": true}], "text_pos_g": ["STRING", {"forceInput": true}], "text_pos_l": ["STRING", {"forceInput": true}], "text_neg_g": ["STRING", {"forceInput": true}], "text_neg_l": ["STRING", {"forceInput": true}], "mask": ["MASK"], "control_net": ["CONTROL_NET"]}, "hidden": {}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed", "steps", "step_refiner", "cfg", "ckpt_name", "sampler", "scheduler", "clip_width", "clip_height", "text_pos_g", "text_pos_l", "text_neg_g", "text_neg_l", "mask", "control_net"], "hidden": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", [], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], ["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Big (rgthree)", "display_name": "Context Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}]}, "hidden": {"version": "FLOAT"}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed"], "hidden": ["version"]}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context (rgthree)", "display_name": "Context (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Switch (rgthree)", "display_name": "Context Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", [], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], ["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Switch Big (rgthree)", "display_name": "Context Switch Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Merge (rgthree)", "display_name": "Context Merge (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", [], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], ["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Merge Big (rgthree)", "display_name": "Context Merge Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Display Int (rgthree)": {"input": {"required": {"input": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["input"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Int (rgthree)", "display_name": "Display Int (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Display Any (rgthree)": {"input": {"required": {"source": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["source"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Any (rgthree)", "display_name": "Display Any (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Lora Loader Stack (rgthree)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_01": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_01": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_02": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_02": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_03": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_03": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_04": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_04": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_01", "strength_01", "lora_02", "strength_02", "lora_03", "strength_03", "lora_04", "strength_04"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Loader Stack (rgthree)", "display_name": "Lora Loader Stack (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Seed (rgthree)": {"input": {"required": {"seed": ["INT", {"default": 0, "min": -1125899906842624, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["SEED"], "name": "Seed (rgthree)", "display_name": "Seed (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Inset Crop (rgthree)": {"input": {"required": {"image": ["IMAGE"], "measurement": [["Pixels", "Percentage"]], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "measurement", "left", "right", "top", "bottom"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Inset Crop (rgthree)", "display_name": "Image Inset Crop (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "insert_lora": [["CHOOSE", "DISABLE LORAS", "AntiBlur", "Candid_Creepshot-000007", "Detailed_Hands-000001", "Digicam", "FLUX_Polyhedron_all_Kohya_ss-000001", "Futanari_erect_penis_bulge_for_FLUX-000017", "GrainScape", "Large_erect_penis_bulge_futanari_for_FLUX-000039", "Nokia_v1.2", "SameFace_Fix", "Samsung_UltraReal", "TGirlBulgeV3", "Touch_of_Realism_SDXL_V2", "VHS style v1", "aidmaRealisticSkin-FLUX-v0.1", "amateurphoto-v6-forcu", "boreal-v2", "digicam2", "lora.TA_trained", "olympusd450_lora", "plus1_Bulge_FLUX_v5", "quicktake150-flux"]], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_model", "opt_clip", "insert_lora", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT"], "name": "Power Prompt (rgthree)", "display_name": "Power Prompt (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt - Simple (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_clip": ["CLIP"], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_clip", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "TEXT"], "name": "Power Prompt - Simple (rgthree)", "display_name": "Power Prompt - Simple (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "KSampler Config (rgthree)": {"input": {"required": {"steps_total": ["INT", {"default": 30, "min": 1, "max": 16384, "step": 1}], "refiner_step": ["INT", {"default": 24, "min": 1, "max": 16384, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]]}}, "input_order": {"required": ["steps_total", "refiner_step", "cfg", "sampler_name", "scheduler"]}, "output": ["INT", "INT", "FLOAT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], ["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "output_is_list": [false, false, false, false, false], "output_name": ["STEPS", "REFINER_STEP", "CFG", "SAMPLER", "SCHEDULER"], "name": "KSampler Config (rgthree)", "display_name": "KSampler Config (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Empty Latent Image (rgthree)": {"input": {"required": {"dimensions": [["1536 x 640   (landscape)", "1344 x 768   (landscape)", "1216 x 832   (landscape)", "1152 x 896   (landscape)", "1024 x 1024  (square)", " 896 x 1152  (portrait)", " 832 x 1216  (portrait)", " 768 x 1344  (portrait)", " 640 x 1536  (portrait)"], {"default": "1024 x 1024  (square)"}], "clip_scale": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.5}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["dimensions", "clip_scale", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "CLIP_WIDTH", "CLIP_HEIGHT"], "name": "SDXL Empty Latent Image (rgthree)", "display_name": "SDXL Empty Latent Image (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Positive (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "prompt_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_lora": [["CHOOSE", "DISABLE LORAS", "AntiBlur", "Candid_Creepshot-000007", "Detailed_Hands-000001", "Digicam", "FLUX_Polyhedron_all_Kohya_ss-000001", "Futanari_erect_penis_bulge_for_FLUX-000017", "GrainScape", "Large_erect_penis_bulge_futanari_for_FLUX-000039", "Nokia_v1.2", "SameFace_Fix", "Samsung_UltraReal", "TGirlBulgeV3", "Touch_of_Realism_SDXL_V2", "VHS style v1", "aidmaRealisticSkin-FLUX-v0.1", "amateurphoto-v6-forcu", "boreal-v2", "digicam2", "lora.TA_trained", "olympusd450_lora", "plus1_Bulge_FLUX_v5", "quicktake150-flux"]], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_model", "opt_clip", "opt_clip_width", "opt_clip_height", "insert_lora", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Positive (rgthree)", "display_name": "SDXL Power Prompt - Positive (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Simple / Negative (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "prompt_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_embedding": [["CHOOSE"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_clip", "opt_clip_width", "opt_clip_height", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["CONDITIONING", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Simple / Negative (rgthree)", "display_name": "SDXL Power Prompt - Simple / Negative (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Any Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Any Switch (rgthree)", "display_name": "Any Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Comparer (rgthree)": {"input": {"required": {}, "optional": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["image_a", "image_b"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Image Comparer (rgthree)", "display_name": "Image Comparer (rgthree)", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Power Lora Loader (rgthree)": {"input": {"required": {}, "optional": {"model": ["MODEL"], "clip": ["CLIP"]}, "hidden": {}}, "input_order": {"required": [], "optional": ["model", "clip"], "hidden": []}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Power Lora Loader (rgthree)", "display_name": "Power Lora Loader (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Primitive (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Power Primitive (rgthree)", "display_name": "Power Primitive (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image or Latent Size (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["WIDTH", "HEIGHT"], "name": "Image or Latent Size (rgthree)", "display_name": "Image or Latent Size (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Resize (rgthree)": {"input": {"required": {"image": ["IMAGE"], "measurement": [["pixels", "percentage"]], "width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1, "tooltip": "The width of the desired resize. A pixel value if measurement is 'pixels' or a 100% scale percentage value if measurement is 'percentage'. Passing '0' will calculate the dimension based on the height."}], "height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "fit": [["crop", "pad", "contain"], {"tooltip": "'crop' resizes so the image covers the desired width and height, and center-crops the excess, returning exactly the desired width and height.\n'pad' resizes so the image fits inside the desired width and height, and fills the empty space returning exactly the desired width and height.\n'contain' resizes so the image fits inside the desired width and height, and returns the image with it's new size, with one side liekly smaller than the desired.\n\nNote, if either width or height is '0', the effective fit is 'contain'."}], "method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]]}}, "input_order": {"required": ["image", "measurement", "width", "height", "fit", "method"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "WIDTH", "HEIGHT"], "name": "Image Resize (rgthree)", "display_name": "Image Resize (rgthree)", "description": "Resize the image.", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Puter (rgthree)": {"input": {"required": {}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT"}}, "input_order": {"required": [], "optional": [], "hidden": ["unique_id", "extra_pnginfo", "prompt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Power Puter (rgthree)", "display_name": "Power Puter (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SD15ResolutionNode": {"input": {"required": {"resolution": [["512\u00d7512 (1:1) - Native", "768\u00d7512 (3:2) - Landscape", "512\u00d7768 (2:3) - Portrait", "768\u00d7576 (4:3) - Standard", "576\u00d7768 (3:4) - Standard Portrait", "912\u00d7512 (16:9) - Widescreen", "512\u00d7912 (9:16) - Mobile", "768\u00d7768 (1:1) - Large Square"]]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["width", "height", "aspect_ratio"], "name": "SD15ResolutionNode", "display_name": "SD 1.5 Resolution", "description": "", "python_module": "custom_nodes.image-size-tools", "category": "Image Size Tool", "output_node": false}, "SDXLResolutionNode": {"input": {"required": {"resolution": [["1024\u00d71024 (1:1) - Native", "1152\u00d7896 (9:7) - Landscape", "896\u00d71152 (7:9) - Portrait", "1344\u00d7768 (7:4) - Wide", "768\u00d71344 (4:7) - Tall", "1216\u00d7832 (19:13) - Cinema", "832\u00d71216 (13:19) - Tall Cinema", "1280\u00d7768 (5:3) - Ultrawide", "768\u00d71280 (3:5) - Ultra Portrait", "1536\u00d7640 (12:5) - Banner", "640\u00d71536 (5:12) - Skyscraper", "1600\u00d7640 (5:2) - Extreme Wide", "640\u00d71600 (2:5) - Extreme Tall"]]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT", "STRING", "INT"], "output_is_list": [false, false, false, false], "output_name": ["width", "height", "aspect_ratio", "total_pixels"], "name": "SDXLResolutionNode", "display_name": "SDXL Resolution", "description": "", "python_module": "custom_nodes.image-size-tools", "category": "Image Size Tool", "output_node": false}, "FluxResolutionNode": {"input": {"required": {"megapixel": [["0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2.0", "2.1", "2.2", "2.3", "2.4", "2.5"], {"default": "1.0"}], "aspect_ratio": [["1:1 (Perfect Square)", "2:3 (Classic Portrait)", "3:4 (Golden Ratio)", "3:5 (Elegant Vertical)", "4:5 (Artistic Frame)", "5:7 (Balanced Portrait)", "5:8 (Tall Portrait)", "7:9 (Modern Portrait)", "9:16 (Slim Vertical)", "9:19 (Tall Slim)", "9:21 (Ultra Tall)", "9:32 (Skyline)", "3:2 (Golden Landscape)", "4:3 (Classic Landscape)", "5:3 (Wide Horizon)", "5:4 (Balanced Frame)", "7:5 (Elegant Landscape)", "8:5 (Cinematic View)", "9:7 (Artful Horizon)", "16:9 (Panorama)", "19:9 (Cinematic Ultrawide)", "21:9 (Epic Ultrawide)", "32:9 (Extreme Ultrawide)"], {"default": "1:1 (Perfect Square)"}], "divisible_by": [["8", "16", "32", "64"], {"default": "64"}], "custom_ratio": ["BOOLEAN", {"default": false, "label_on": "Enable", "label_off": "Disable"}]}, "optional": {"custom_aspect_ratio": ["STRING", {"default": "1:1"}]}}, "input_order": {"required": ["megapixel", "aspect_ratio", "divisible_by", "custom_ratio"], "optional": ["custom_aspect_ratio"]}, "output": ["INT", "INT", "STRING", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["width", "height", "resolution", "preview"], "name": "FluxResolutionNode", "display_name": "Flux Resolution Calc", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux", "output_node": true}, "ImageSizeDetectorNode": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width", "height"], "name": "ImageSizeDetectorNode", "display_name": "Image Size Detector", "description": "", "python_module": "custom_nodes.image-size-tools", "category": "Image Size Tool", "output_node": false}, "WAN21ResolutionNode": {"input": {"required": {"resolution": [["832\u00d7480 (16:9) - 480p Standard", "1280\u00d7720 (16:9) - 720p HD", "480\u00d7832 (9:16) - 480p Vertical", "720\u00d71280 (9:16) - 720p Vertical"]], "halve_resolution": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["resolution", "halve_resolution"]}, "output": ["INT", "INT", "STRING", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["width", "height", "aspect_ratio", "halved_width", "halved_height"], "name": "WAN21ResolutionNode", "display_name": "WAN2.1 Resolution", "description": "", "python_module": "custom_nodes.image-size-tools", "category": "Image Size Tool", "output_node": false}, "WAN21AdvancedResolutionNode": {"input": {"required": {"resolution": [["832\u00d7480 (16:9) - 480p Standard", "1280\u00d7720 (16:9) - 720p HD", "480\u00d7832 (9:16) - 480p Vertical", "720\u00d71280 (9:16) - 720p Vertical", "640\u00d7480 (4:3) - Classic 480p", "960\u00d7720 (4:3) - Classic 720p", "480\u00d7640 (3:4) - Classic Vertical", "720\u00d7960 (3:4) - Classic Vertical", "720\u00d7720 (1:1) - Square 720p", "480\u00d7480 (1:1) - Square 480p", "1024\u00d7576 (16:9) - Intermediate", "576\u00d71024 (9:16) - Intermediate Vertical"]], "halve_resolution": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["resolution", "halve_resolution"]}, "output": ["INT", "INT", "STRING", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["width", "height", "aspect_ratio", "halved_width", "halved_height"], "name": "WAN21AdvancedResolutionNode", "display_name": "WAN2.1 Resolution (Advanced)", "description": "", "python_module": "custom_nodes.image-size-tools", "category": "Image Size Tool", "output_node": false}, "FluxSampler": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "latent_image": ["LATENT"], "sampler_name": [["euler", "heun", "heunpp2", "dpm_2", "lms", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2m", "ipndm", "ipndm_v", "deis", "ddim", "uni_pc", "uni_pc_bh2"], {"default": "euler"}], "scheduler": [["simple", "normal", "sgm_uniform", "ddim_uniform", "beta"], {"default": "beta"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_seed": ["INT", {"default": 143220275975594, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["model", "conditioning", "latent_image", "sampler_name", "scheduler", "steps", "denoise", "noise_seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "FluxSampler", "display_name": "Flux Sampler", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux", "output_node": false}, "FluxUnionControlNetApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "union_controlnet_type": [["canny", "tile", "depth", "blur", "pose", "gray", "low quality"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "vae": ["VAE"]}}, "input_order": {"required": ["conditioning", "control_net", "image", "union_controlnet_type", "strength", "start_percent", "end_percent", "vae"]}, "output": ["CONDITIONING", "VAE"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "VAE"], "name": "FluxUnionControlNetApply", "display_name": "Flux Union ControlNet Apply", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux", "output_node": false}, "BooleanBasic": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "BooleanBasic", "display_name": "Boolean Basic", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "BooleanReverse": {"input": {"required": {"boolean": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "BooleanReverse", "display_name": "Boolean Reverse", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "GetImageSizeRatio": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["width", "height", "ratio"], "name": "GetImageSizeRatio", "display_name": "Get Image Size Ratio", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Image", "output_node": false}, "NoisePlusBlend": {"input": {"required": {"image": ["IMAGE"], "noise_scale": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 100.0, "step": 0.01}], "blend_opacity": ["INT", {"default": 20, "min": 0, "max": 100}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "noise_scale", "blend_opacity"], "optional": ["mask"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["blended_image_output", "noise_output"], "name": "NoisePlusBlend", "display_name": "Noise Plus Blend", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Image", "output_node": false}, "IntegerSettings": {"input": {"required": {"setting": ["BOOLEAN", {"default": false, "label_on": "Enable", "label_off": "Disable"}]}}, "input_order": {"required": ["setting"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["setting_value"], "name": "IntegerSettings", "display_name": "Integer Settings", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "IntegerSettingsAdvanced": {"input": {"required": {"setting_1": ["BOOLEAN", {"default": true, "label_on": "Enable", "label_off": "Disable"}], "setting_2": ["BOOLEAN", {"default": false, "label_on": "Enable", "label_off": "Disable"}], "setting_3": ["BOOLEAN", {"default": false, "label_on": "Enable", "label_off": "Disable"}]}}, "input_order": {"required": ["setting_1", "setting_2", "setting_3"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["setting_value"], "name": "IntegerSettingsAdvanced", "display_name": "Integer Settings Advanced", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "ChooseUpscaleModel": {"input": {"required": {"upscale_model_1": ["UPSCALE_MODEL"], "upscale_model_2": ["UPSCALE_MODEL"], "use_model_1": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["upscale_model_1", "upscale_model_2", "use_model_1"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["upscale_model"], "name": "ChooseUpscaleModel", "display_name": "Choose Upscale Model", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "RegionMaskGenerator": {"input": {"required": {"width": ["INT", {"default": 1024}], "height": ["INT", {"default": 1024}], "number_of_regions": ["INT", {"default": 1, "min": 1, "max": 3}], "region1_x1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "region1_y1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "region1_x2": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region1_y2": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region2_x1": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region2_y1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "region2_x2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "region2_y2": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region3_x1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "region3_y1": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region3_x2": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "region3_y2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["width", "height", "number_of_regions", "region1_x1", "region1_y1", "region1_x2", "region1_y2", "region2_x1", "region2_y1", "region2_x2", "region2_y2", "region3_x1", "region3_y1", "region3_x2", "region3_y2"]}, "output": ["IMAGE", "IMAGE", "MASK", "MASK", "MASK", "INT", "BBOX", "BBOX", "BBOX"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["colored_regions_image", "bbox_preview", "mask1", "mask2", "mask3", "number_of_regions", "bbox1", "bbox2", "bbox3"], "name": "RegionMaskGenerator", "display_name": "Region Mask Generator", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "RegionMaskValidator": {"input": {"required": {"mask1": ["MASK"], "bbox1": ["BBOX"], "number_of_regions": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1}], "min_region_size": ["INT", {"default": 64, "min": 32, "max": 512, "step": 32, "display": "Minimum Region Size (px)"}], "max_overlap": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 0.5, "step": 0.01, "display": "Maximum Region Overlap"}]}, "optional": {"mask2": ["MASK"], "bbox2": ["BBOX"], "mask3": ["MASK"], "bbox3": ["BBOX"]}}, "input_order": {"required": ["mask1", "bbox1", "number_of_regions", "min_region_size", "max_overlap"], "optional": ["mask2", "bbox2", "mask3", "bbox3"]}, "output": ["MASK", "BBOX", "MASK", "BBOX", "MASK", "BBOX", "INT", "BOOLEAN", "STRING", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["valid_mask1", "valid_bbox1", "valid_mask2", "valid_bbox2", "valid_mask3", "valid_bbox3", "valid_region_count", "is_valid", "validation_message", "validation_preview"], "name": "RegionMaskValidator", "display_name": "Region Mask Validator", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "RegionMaskProcessor": {"input": {"required": {"mask1": ["MASK"], "bbox1": ["BBOX"], "blur_radius": ["INT", {"default": 5, "min": 0, "max": 32, "step": 1, "display": "Blur Radius"}], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1, "display": "Mask Threshold"}], "feather_edges": ["BOOLEAN", {"default": true, "display": "Feather Edges"}], "number_of_regions": ["INT", {"default": 1, "min": 1, "max": 3, "display": "Number of Regions"}]}, "optional": {"mask2": ["MASK"], "bbox2": ["BBOX"], "mask3": ["MASK"], "bbox3": ["BBOX"]}}, "input_order": {"required": ["mask1", "bbox1", "blur_radius", "threshold", "feather_edges", "number_of_regions"], "optional": ["mask2", "bbox2", "mask3", "bbox3"]}, "output": ["MASK", "BBOX", "MASK", "BBOX", "MASK", "BBOX", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["processed_mask1", "processed_bbox1", "processed_mask2", "processed_bbox2", "processed_mask3", "processed_bbox3", "preview_image", "region_count"], "name": "RegionMaskProcessor", "display_name": "Region Mask Processor", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "RegionMaskConditioning": {"input": {"required": {"mask1": ["MASK"], "bbox1": ["BBOX"], "conditioning1": ["CONDITIONING"], "number_of_regions": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1, "display": "Number of Regions"}], "strength1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1, "display": "Strength for Region 1"}]}, "optional": {"mask2": ["MASK"], "bbox2": ["BBOX"], "conditioning2": ["CONDITIONING"], "strength2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1, "display": "Strength for Region 2"}], "mask3": ["MASK"], "bbox3": ["BBOX"], "conditioning3": ["CONDITIONING"], "strength3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1, "display": "Strength for Region 3"}]}}, "input_order": {"required": ["mask1", "bbox1", "conditioning1", "number_of_regions", "strength1"], "optional": ["mask2", "bbox2", "conditioning2", "strength2", "mask3", "bbox3", "conditioning3", "strength3"]}, "output": ["REGION", "REGION", "REGION", "INT", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["region1", "region2", "region3", "region_count", "preview_image"], "name": "RegionMaskConditioning", "display_name": "Region Mask Conditioning", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "FluxAttentionControl": {"input": {"required": {"model": ["MODEL"], "condition": ["CONDITIONING"], "latent_dimensions": ["LATENT"], "region1": ["REGION"], "number_of_regions": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1, "display": "Number of Regions"}], "enabled": ["BOOLEAN", {"default": true, "display": "Enable Regional Control"}], "feather_radius1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 1.0, "display": "Feather Radius for Region 1"}]}, "optional": {"region2": ["REGION"], "feather_radius2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 1.0, "display": "Feather Radius for Region 2"}], "region3": ["REGION"], "feather_radius3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 1.0, "display": "Feather Radius for Region 3"}]}}, "input_order": {"required": ["model", "condition", "latent_dimensions", "region1", "number_of_regions", "enabled", "feather_radius1"], "optional": ["region2", "feather_radius2", "region3", "feather_radius3"]}, "output": ["MODEL", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["model", "conditioning"], "name": "FluxAttentionControl", "display_name": "Flux Attention Control", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "RegionOverlayVisualizer": {"input": {"required": {"image": ["IMAGE"], "region_preview": ["IMAGE"], "opacity": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.1, "display": "Overlay Opacity"}]}}, "input_order": {"required": ["image", "region_preview", "opacity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RegionOverlayVisualizer", "display_name": "Region Overlay Visualizer", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "FluxAttentionCleanup": {"input": {"required": {"any_input": ["*", {}]}}, "input_order": {"required": ["any_input"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["message"], "name": "FluxAttentionCleanup", "display_name": "Flux Attention Cleanup", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Flux Region", "output_node": false}, "HiDreamResolutionNode": {"input": {"required": {"resolution": [["1:1 (Perfect Square)", "3:4 (Standard Portrait)", "2:3 (Classic Portrait)", "9:16 (Widescreen Portrait)", "4:3 (Standard Landscape)", "3:2 (Classic Landscape)", "16:9 (Widescreen Landscape)"], {"default": "1:1 (Perfect Square)"}]}}, "input_order": {"required": ["resolution"]}, "output": ["INT", "INT", "STRING", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["width", "height", "resolution", "preview"], "name": "HiDreamResolutionNode", "display_name": "HiDream Resolution", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/HiDream", "output_node": true}, "PerturbationTexture": {"input": {"required": {"image": ["IMAGE"], "noise_scale": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "texture_strength": ["INT", {"default": 50, "min": 0, "max": 100}], "texture_type": [["Film Grain", "Skin Pore", "Natural", "Fine Detail"], {"default": "Skin Pore"}], "frequency": ["FLOAT", {"default": 1.0, "min": 0.2, "max": 5.0, "step": 0.1}], "perturbation_factor": ["FLOAT", {"default": 0.3, "min": 0.01, "max": 0.5, "step": 0.01}], "use_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"], "seed": ["INT", {"default": -1}]}}, "input_order": {"required": ["image", "noise_scale", "texture_strength", "texture_type", "frequency", "perturbation_factor", "use_mask"], "optional": ["mask", "seed"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["textured_image_output", "texture_layer"], "name": "PerturbationTexture", "display_name": "Perturbation Texture", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Image", "output_node": false}, "TextBridge": {"input": {"required": {"text_input": ["STRING", {"default": "", "multiline": true}]}, "optional": {"passthrough_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text_input"], "optional": ["passthrough_text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text_output"], "name": "TextBridge", "display_name": "Text Bridge", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Utility", "output_node": false}, "TwoWaySwitch": {"input": {"required": {"selection_setting": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"input_1": ["*"], "input_2": ["*"]}}, "input_order": {"required": ["selection_setting"], "optional": ["input_1", "input_2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "TwoWaySwitch", "display_name": "Switch (Two Way)", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "ThreeWaySwitch": {"input": {"required": {"selection_setting": ["INT", {"default": 1, "min": 1, "max": 3}]}, "optional": {"input_1": ["*"], "input_2": ["*"], "input_3": ["*"]}}, "input_order": {"required": ["selection_setting"], "optional": ["input_1", "input_2", "input_3"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "ThreeWaySwitch", "display_name": "Switch (Three Way)", "description": "", "python_module": "custom_nodes.controlaltai-nodes", "category": "ControlAltAI Nodes/Logic", "output_node": false}, "UnetLoaderGGUF": {"input": {"required": {"unet_name": [["flux1-fill-dev-Q8_0.gguf", "ultrarealFineTune_v4.gguf"]]}}, "input_order": {"required": ["unet_name"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UnetLoaderGGUF", "display_name": "Unet Loader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "CLIPLoaderGGUF": {"input": {"required": {"clip_name": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio", "mochi", "ltxv", "pixart", "cosmos", "lumina2", "wan", "hidream", "chroma", "ace", "omnigen2"]]}}, "input_order": {"required": ["clip_name", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPLoaderGGUF", "display_name": "CLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "DualCLIPLoaderGGUF": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "type": [["sdxl", "sd3", "flux", "hunyuan_video", "hidream"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "DualCLIPLoaderGGUF", "display_name": "DualCLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "TripleCLIPLoaderGGUF": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name3": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "TripleCLIPLoaderGGUF", "display_name": "TripleCLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "QuadrupleCLIPLoaderGGUF": {"input": {"required": {"clip_name1": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name2": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name3": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]], "clip_name4": [["EVA02_CLIP_L_336_psz14_s6B.pt", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_l.safetensors", "long_clip/ViT-L-14-TEXT-detail-improved-hiT-GmP-HF.safetensors", "t5-v1_1-xxl-encoder-Q8_0.gguf", "t5/t5xxl_fp16.safetensors", "t5xxl_fp8_e4m3fn.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3", "clip_name4"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "QuadrupleCLIPLoaderGGUF", "display_name": "QuadrupleCLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "UnetLoaderGGUFAdvanced": {"input": {"required": {"unet_name": [["flux1-fill-dev-Q8_0.gguf", "ultrarealFineTune_v4.gguf"]], "dequant_dtype": [["default", "target", "float32", "float16", "bfloat16"], {"default": "default"}], "patch_dtype": [["default", "target", "float32", "float16", "bfloat16"], {"default": "default"}], "patch_on_device": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["unet_name", "dequant_dtype", "patch_dtype", "patch_on_device"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UnetLoaderGGUFAdvanced", "display_name": "Unet Loader (GGUF/Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "LoadText|pysssss": {"input": {"required": {"root_dir": [["input", "output", "temp"], {}], "file": [["[none]"], {"pysssss.binding": [{"source": "root_dir", "callback": [{"type": "set", "target": "$this.disabled", "value": true}, {"type": "fetch", "url": "/pysssss/text-file/{$source.value}", "then": [{"type": "set", "target": "$this.options.values", "value": "$result"}, {"type": "validate-combo"}, {"type": "set", "target": "$this.disabled", "value": false}]}]}]}]}}, "input_order": {"required": ["root_dir", "file"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "LoadText|pysssss", "display_name": "Load Text \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": false}, "SaveText|pysssss": {"input": {"required": {"root_dir": [["input", "output", "temp"], {}], "file": ["STRING", {"default": "file.txt"}], "append": [["append", "overwrite", "new only"], {}], "insert": ["BOOLEAN", {"default": true, "label_on": "new line", "label_off": "none", "pysssss.binding": [{"source": "append", "callback": [{"type": "if", "condition": [{"left": "$source.value", "op": "eq", "right": "\"append\""}], "true": [{"type": "set", "target": "$this.disabled", "value": false}], "false": [{"type": "set", "target": "$this.disabled", "value": true}]}]}]}], "text": ["STRING", {"forceInput": true, "multiline": true}]}}, "input_order": {"required": ["root_dir", "file", "append", "insert", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SaveText|pysssss", "display_name": "Save Text \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "SystemNotification|pysssss": {"input": {"required": {"message": ["STRING", {"default": "Your notification has triggered."}], "any": ["*", {}], "mode": [["always", "on empty queue"], {}]}}, "input_order": {"required": ["message", "any", "mode"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "SystemNotification|pysssss", "display_name": "SystemNotification \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "StringFunction|pysssss": {"input": {"required": {"action": [["append", "replace"], {}], "tidy_tags": [["yes", "no"], {}]}, "optional": {"text_a": ["STRING", {"multiline": true, "dynamicPrompts": false}], "text_b": ["STRING", {"multiline": true, "dynamicPrompts": false}], "text_c": ["STRING", {"multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["action", "tidy_tags"], "optional": ["text_a", "text_b", "text_c"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringFunction|pysssss", "display_name": "String Function \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "ShowText|pysssss": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "ShowText|pysssss", "display_name": "Show Text \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "ReroutePrimitive|pysssss": {"input": {"required": {"value": ["*"]}}, "input_order": {"required": ["value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ReroutePrimitive|pysssss", "display_name": "Reroute Primitive \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "__hidden__", "output_node": false}, "Repeater|pysssss": {"input": {"required": {"source": ["*", {}], "repeats": ["INT", {"min": 0, "max": 5000, "default": 2}], "output": [["single", "multi"], {}], "node_mode": [["reuse", "create"], {}]}}, "input_order": {"required": ["source", "repeats", "output", "node_mode"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "Repeater|pysssss", "display_name": "Repeater \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": false}, "PlaySound|pysssss": {"input": {"required": {"any": ["*", {}], "mode": [["always", "on empty queue"], {}], "volume": ["FLOAT", {"min": 0, "max": 1, "step": 0.1, "default": 0.5}], "file": ["STRING", {"default": "notify.mp3"}]}}, "input_order": {"required": ["any", "mode", "volume", "file"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "PlaySound|pysssss", "display_name": "PlaySound \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "MathExpression|pysssss": {"input": {"required": {"expression": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": {"words": [{"text": "round", "value": "round()", "showValue": false, "hint": "number, dp? = 0", "caretOffset": -1}, {"text": "ceil", "value": "ceil()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "floor", "value": "floor()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "min", "value": "min()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "max", "value": "max()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "randomint", "value": "randomint()", "showValue": false, "hint": "min, max", "caretOffset": -1}, {"text": "randomchoice", "value": "randomchoice()", "showValue": false, "hint": "...numbers", "caretOffset": -1}, {"text": "sqrt", "value": "sqrt()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "int", "value": "int()", "showValue": false, "hint": "number", "caretOffset": -1}, {"text": "iif", "value": "iif()", "showValue": false, "hint": "value, truepart, falsepart", "caretOffset": -1}], "separator": ""}}]}, "optional": {"a": ["*"], "b": ["*"], "c": ["*"]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT"}}, "input_order": {"required": ["expression"], "optional": ["a", "b", "c"], "hidden": ["extra_pnginfo", "prompt"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "MathExpression|pysssss", "display_name": "Math Expression \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "utils", "output_node": true}, "ConstrainImageforVideo|pysssss": {"input": {"required": {"images": ["IMAGE"], "max_width": ["INT", {"default": 1024, "min": 0}], "max_height": ["INT", {"default": 1024, "min": 0}], "min_width": ["INT", {"default": 0, "min": 0}], "min_height": ["INT", {"default": 0, "min": 0}], "crop_if_required": [["yes", "no"], {"default": "no"}]}}, "input_order": {"required": ["images", "max_width", "max_height", "min_width", "min_height", "crop_if_required"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ConstrainImageforVideo|pysssss", "display_name": "Constrain Image for Video \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "image", "output_node": false}, "ConstrainImage|pysssss": {"input": {"required": {"images": ["IMAGE"], "max_width": ["INT", {"default": 1024, "min": 0}], "max_height": ["INT", {"default": 1024, "min": 0}], "min_width": ["INT", {"default": 0, "min": 0}], "min_height": ["INT", {"default": 0, "min": 0}], "crop_if_required": [["yes", "no"], {"default": "no"}]}}, "input_order": {"required": ["images", "max_width", "max_height", "min_width", "min_height", "crop_if_required"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ConstrainImage|pysssss", "display_name": "Constrain Image \ud83d\udc0d", "description": "", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "image", "output_node": false}, "LoraLoader|pysssss": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "clip": ["CLIP", {"tooltip": "The CLIP model the LoRA will be applied to."}], "lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"tooltip": "The name of the LoRA."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the CLIP model. This value can be negative."}]}, "optional": {"prompt": ["STRING", {"hidden": true}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"], "optional": ["prompt"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "example"], "name": "LoraLoader|pysssss", "display_name": "Lora Loader \ud83d\udc0d", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "CheckpointLoader|pysssss": {"input": {"required": {"ckpt_name": [[], {"tooltip": "The name of the checkpoint (model) to load."}]}, "optional": {"prompt": ["STRING", {"hidden": true}]}}, "input_order": {"required": ["ckpt_name"], "optional": ["prompt"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "example"], "name": "CheckpointLoader|pysssss", "display_name": "Checkpoint Loader \ud83d\udc0d", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "custom_nodes.comfyui-custom-scripts", "category": "loaders", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "Seed Everywhere": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Seed Everywhere", "display_name": "Seed Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Anything Everywhere": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere", "display_name": "Anything Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Anything Everywhere3": {"input": {"required": {}, "optional": {"anything": ["*", {}], "anything2": ["*", {}], "anything3": ["*", {}]}}, "input_order": {"required": [], "optional": ["anything", "anything2", "anything3"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere3", "display_name": "Anything Everywhere3", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Anything Everywhere?": {"input": {"required": {}, "optional": {"anything": ["*", {}], "title_regex": ["STRING", {"default": ".*"}], "input_regex": ["STRING", {"default": ".*"}], "group_regex": ["STRING", {"default": ".*"}]}, "hidden": {"id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["anything", "title_regex", "input_regex", "group_regex"], "hidden": ["id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Anything Everywhere?", "display_name": "Anything Everywhere?", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Prompts Everywhere": {"input": {"required": {}, "optional": {"+ve": ["*", {}], "-ve": ["*", {}]}}, "input_order": {"required": [], "optional": ["+ve", "-ve"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Prompts Everywhere", "display_name": "Prompts Everywhere", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Simple String": {"input": {"required": {"string": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Simple String", "display_name": "Simple String", "description": "", "python_module": "custom_nodes.cg-use-everywhere", "category": "everywhere", "output_node": false}, "Int": {"input": {"required": {"Number": ["STRING", {}]}}, "input_order": {"required": ["Number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Int", "display_name": "Int", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Float": {"input": {"required": {"Number": ["STRING", {}]}}, "input_order": {"required": ["Number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Float", "display_name": "Float", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "String": {"input": {"required": {"String": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["String"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "KepStringLiteral": {"input": {"required": {"String": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["String"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "KepStringLiteral", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Operation": {"input": {"required": {"A Type": [["Int", "Float"]], "B Type": [["Int", "Float"]], "Operation": [["A+B", "A-B", "A*B", "A/B"]]}, "optional": {"A - Int": ["INT", {"forceInput": true}], "A - Float": ["FLOAT", {"forceInput": true}], "B - Int": ["INT", {"forceInput": true}], "B - Float": ["FLOAT", {"forceInput": true}]}}, "input_order": {"required": ["A Type", "B Type", "Operation"], "optional": ["A - Int", "A - Float", "B - Int", "B - Float"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "Operation", "display_name": "Operation", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "Literals", "output_node": false}, "Checkpoint": {"input": {"required": {"literal": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["literal"]}, "output": ["*"], "output_is_list": [true], "output_name": ["Selected Checkpoints"], "name": "Checkpoint", "display_name": "Checkpoint", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "List Stuff", "output_node": false}, "Lora": {"input": {"required": {"literal": ["STRING", {"multiline": true, "default": "AntiBlur.safetensors\nCandid_Creepshot-000007.safetensors\nDetailed_Hands-000001.safetensors\nDigicam.safetensors\nFLUX_Polyhedron_all_Kohya_ss-000001.safetensors\nFutanari_erect_penis_bulge_for_FLUX-000017.safetensors\nGrainScape.safetensors\nLarge_erect_penis_bulge_futanari_for_FLUX-000039.safetensors\nNokia_v1.2.safetensors\nSameFace_Fix.safetensors\nSamsung_UltraReal.safetensors\nTGirlBulgeV3.safetensors\nTouch_of_Realism_SDXL_V2.safetensors\nVHS style v1.safetensors\naidmaRealisticSkin-FLUX-v0.1.safetensors\namateurphoto-v6-forcu.safetensors\nboreal-v2.safetensors\ndigicam2.safetensors\nlora.TA_trained.safetensors\nolympusd450_lora.safetensors\nplus1_Bulge_FLUX_v5.safetensors\nquicktake150-flux.safetensors"}]}}, "input_order": {"required": ["literal"]}, "output": ["*"], "output_is_list": [true], "output_name": ["Selected Loras"], "name": "Lora", "display_name": "Lora", "description": "", "python_module": "custom_nodes.ComfyLiterals", "category": "List Stuff", "output_node": false}, "JWImageLoadRGB": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["path"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGB", "display_name": "Image Load RGB", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBA": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["path"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "JWImageLoadRGBA", "display_name": "Image Load RGBA", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImagesFromString": {"input": {"required": {"paths": ["STRING", {"default": "./frame000001.png\n./frame000002.png\n./frame000003.png", "multiline": true, "dynamicPrompts": false}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["paths", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImagesFromString", "display_name": "Load Images From String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSaveToPath": {"input": {"required": {"path": ["STRING", {"default": "./image.png"}], "image": ["IMAGE"], "overwrite": [["false", "true"], {"default": "true"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["path", "image", "overwrite"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "JWImageSaveToPath", "display_name": "Image Save To Path", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": true}, "JWImageExtractFromBatch": {"input": {"required": {"images": ["IMAGE"], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}}, "input_order": {"required": ["images", "index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageExtractFromBatch", "display_name": "Image Extract From Batch", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageBatchCount": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWImageBatchCount", "display_name": "Get Image Batch Count", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResize": {"input": {"required": {"image": ["IMAGE"], "height": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "width": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "height", "width", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageFlip": {"input": {"required": {"image": ["IMAGE"], "direction": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["image", "direction"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageFlip", "display_name": "Image Flip", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskResize": {"input": {"required": {"mask": ["MASK"], "height": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "width": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["mask", "height", "width", "interpolation_mode"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "JWMaskResize", "display_name": "Mask Resize", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskLikeImageSize": {"input": {"required": {"image": ["IMAGE"], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "value"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "JWMaskLikeImageSize", "display_name": "Mask Like Image Size", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeToSquare": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeToSquare", "display_name": "Image Resize to Square", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByFactor": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1, "min": 0, "step": 0.01, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "factor", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByFactor", "display_name": "Image Resize by Factor", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByShorterSide": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByShorterSide", "display_name": "Image Resize by Shorter Side", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeByLongerSide": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 512, "min": 0, "step": 1, "max": 99999}], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "size", "interpolation_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageResizeByLongerSide", "display_name": "Image Resize by Longer Side", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageResizeToClosestSDXLResolution": {"input": {"required": {"image": ["IMAGE"], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "interpolation_mode"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "WIDTH", "HEIGHT"], "name": "JWImageResizeToClosestSDXLResolution", "display_name": "Image Resize to Closest SDXL Resolution", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageCropToClosestSDXLResolution": {"input": {"required": {"image": ["IMAGE"], "interpolation_mode": [["bicubic", "bilinear", "nearest", "nearest exact"]]}}, "input_order": {"required": ["image", "interpolation_mode"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "WIDTH", "HEIGHT"], "name": "JWImageCropToClosestSDXLResolution", "display_name": "Image Crop to Closest SDXL Resolution", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBFromClipboard": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGBFromClipboard", "display_name": "Image Load RGB From Clipboard", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBA From Clipboard": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "JWImageLoadRGBA From Clipboard", "display_name": "Image Load RGBA From Clipboard", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWInteger": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWInteger", "display_name": "Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerToFloat": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWIntegerToFloat", "display_name": "Integer to Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerToString": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "format_string": ["STRING", {"default": "{:04d}", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["value", "format_string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWIntegerToString", "display_name": "Integer to String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerAdd": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerAdd", "display_name": "Integer Add", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerSub": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerSub", "display_name": "Integer Subtract", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMul": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMul", "display_name": "Integer Multiply", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerDiv": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWIntegerDiv", "display_name": "Integer Divide", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerAbsolute": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerAbsolute", "display_name": "Integer Absolute Value", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMin": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMin", "display_name": "Integer Minimum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWIntegerMax": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWIntegerMax", "display_name": "Integer Maximum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloat": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloat", "display_name": "Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatToInteger": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "mode": [["round", "floor", "ceiling"]]}}, "input_order": {"required": ["value", "mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWFloatToInteger", "display_name": "Float to Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatToString": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "format_string": ["STRING", {"default": "{:.6g}", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["value", "format_string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWFloatToString", "display_name": "Float to String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatAdd": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatAdd", "display_name": "Float Add", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatSub": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatSub", "display_name": "Float Subtract", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMul": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMul", "display_name": "Float Multiply", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatDiv": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatDiv", "display_name": "Float Divide", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatAbsolute": {"input": {"required": {"value": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatAbsolute", "display_name": "Float Absolute Value", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMin": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMin", "display_name": "Float Minimum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWFloatMax": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}], "b": ["FLOAT", {"default": 0, "min": -1e+17, "max": 1e+17}]}}, "input_order": {"required": ["a", "b"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWFloatMax", "display_name": "Float Maximum", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWString": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWString", "display_name": "String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringToInteger": {"input": {"required": {"text": ["STRING", {"default": "0", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "JWStringToInteger", "display_name": "String to Integer", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringToFloat": {"input": {"required": {"text": ["STRING", {"default": "0.0", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "JWStringToFloat", "display_name": "String to Float", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringMultiline": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringMultiline", "display_name": "String (Multiline)", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringConcat": {"input": {"required": {"a": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "b": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["a", "b"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringConcat", "display_name": "String Concatenate", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringReplace": {"input": {"required": {"source": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "to_replace": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "replace_with": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["source", "to_replace", "replace_with"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringReplace", "display_name": "String Replace", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringSplit": {"input": {"required": {"source": ["STRING", {"default": "a,b", "multiline": false, "dynamicPrompts": false}], "split_by": ["STRING", {"default": ",", "multiline": false, "dynamicPrompts": false}], "from_right": [["false", "true"]]}}, "input_order": {"required": ["source", "split_by", "from_right"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "STRING"], "name": "JWStringSplit", "display_name": "String Split", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringGetLine": {"input": {"required": {"source": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}], "line_index": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["source", "line_index"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringGetLine", "display_name": "String Get Line", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWStringUnescape": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWStringUnescape", "display_name": "String Unescape", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTEstimate": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["image_a", "image_b"]}, "output": ["RAFT_FLOW"], "output_is_list": [false], "output_name": ["RAFT_FLOW"], "name": "RAFTEstimate", "display_name": "RAFT Estimate", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTFlowToImage": {"input": {"required": {"raft_flow": ["RAFT_FLOW"]}}, "input_order": {"required": ["raft_flow"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RAFTFlowToImage", "display_name": "RAFT Flow to Image", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "RAFTLoadFlowFromEXRChannels": {"input": {"required": {"path": ["STRING", {"default": ""}], "x_channel": [["R", "G", "B", "A"], {"default": "R"}], "y_channel": [["R", "G", "B", "A"], {"default": "G"}], "invert_x": [["false", "true"], {"default": "true"}], "invert_y": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path", "x_channel", "y_channel", "invert_x", "invert_y"]}, "output": ["RAFT_FLOW"], "output_is_list": [false], "output_name": ["RAFT_FLOW"], "name": "RAFTLoadFlowFromEXRChannels", "display_name": "RAFT Load Flow from EXR Channels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageStackChannels": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["image_a", "image_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageStackChannels", "display_name": "Image Stack Channels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageMix": {"input": {"required": {"blend_type": [["mix", "multiply"], {"default": "mix"}], "factor": ["FLOAT", {"min": 0, "max": 1, "step": 0.01, "default": 0.5}], "image_a": ["IMAGE"], "image_b": ["IMAGE"]}}, "input_order": {"required": ["blend_type", "factor", "image_a", "image_b"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageMix", "display_name": "Image Mix", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageContrast": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.01}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageContrast", "display_name": "Image Contrast", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSaturation": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.01}]}}, "input_order": {"required": ["image", "factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageSaturation", "display_name": "Image Saturation", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLevels": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "min", "max"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLevels", "display_name": "Image Levels", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWDatetimeString": {"input": {"required": {"format": ["STRING", {"default": "%Y-%m-%dT%H:%M:%S"}]}}, "input_order": {"required": ["format"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JWDatetimeString", "display_name": "Datetime String", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImageSequence": {"input": {"required": {"path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "frame_count": ["INT", {"default": 16, "min": 1, "step": 1}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path_pattern", "start_index", "frame_count", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImageSequence", "display_name": "Batch Load Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadImageSequenceWithStopIndex": {"input": {"required": {"path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1, "max": 999999}], "stop_index": ["INT", {"default": 16, "min": 1, "step": 1, "max": 999999}], "inclusive": [["false", "true"], {"default": "false"}], "ignore_missing_images": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["path_pattern", "start_index", "stop_index", "inclusive", "ignore_missing_images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoadImageSequenceWithStopIndex", "display_name": "Batch Load Image Sequence With Stop Index", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageSequenceExtractFromBatch": {"input": {"required": {"images": ["IMAGE"], "i_start": ["INT", {"default": 0, "min": 0, "step": 1}], "i_stop": ["INT", {"default": 0, "min": 0, "step": 1}], "inclusive": [["false", "true"], {"default": "false"}]}}, "input_order": {"required": ["images", "i_start", "i_stop", "inclusive"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageSequenceExtractFromBatch", "display_name": "Extract Image Sequence From Batch", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWSaveImageSequence": {"input": {"required": {"images": ["IMAGE"], "path_pattern": ["STRING", {"default": "./frame{:06d}.png", "multiline": false}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "overwrite": [["false", "true"], {"default": "true"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "path_pattern", "start_index", "overwrite"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "JWSaveImageSequence", "display_name": "Batch Save Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": true}, "JWLoopImageSequence": {"input": {"required": {"images": ["IMAGE"], "target_frames": ["INT", {"default": 16, "step": 1}]}}, "input_order": {"required": ["images", "target_frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWLoopImageSequence", "display_name": "Loop Image Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceFromMask": {"input": {"required": {"mask": ["MASK"], "batch_size": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["mask", "batch_size"]}, "output": ["MASK_SEQUENCE"], "output_is_list": [false], "output_name": ["MASK_SEQUENCE"], "name": "JWMaskSequenceFromMask", "display_name": "Mask Sequence From Mask", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceJoin": {"input": {"required": {"mask_sequence_1": ["MASK_SEQUENCE"], "mask_sequence_2": ["MASK_SEQUENCE"]}}, "input_order": {"required": ["mask_sequence_1", "mask_sequence_2"]}, "output": ["MASK_SEQUENCE"], "output_is_list": [false], "output_name": ["MASK_SEQUENCE"], "name": "JWMaskSequenceJoin", "display_name": "Join Mask Sequence", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWMaskSequenceApplyToLatent": {"input": {"required": {"samples": ["LATENT"], "mask_sequence": ["MASK_SEQUENCE"]}}, "input_order": {"required": ["samples", "mask_sequence"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "JWMaskSequenceApplyToLatent", "display_name": "Apply Mask Sequence to Latent", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWImageLoadRGBIfExists": {"input": {"required": {"default": ["IMAGE"], "path": ["STRING", {"default": "./image.png"}]}}, "input_order": {"required": ["default", "path"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JWImageLoadRGBIfExists", "display_name": "Image Load RGB If Exists", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWLoadAudio": {"input": {"required": {"path": ["STRING", {"default": "./audio.mp3"}], "gain_db": ["FLOAT", {"default": 0, "min": -100, "max": 100}], "offset_seconds": ["FLOAT", {"default": 0, "min": 0, "max": 1e+17}], "duration_seconds": ["FLOAT", {"default": 0, "min": 0, "max": 1e+17}], "resample_to_hz": ["FLOAT", {"default": 0, "min": 0, "max": 1e+17}], "make_stereo": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["path", "gain_db", "offset_seconds", "duration_seconds", "resample_to_hz", "make_stereo"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "JWLoadAudio", "display_name": "Audio Load", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWAudioBlend": {"input": {"required": {"a": ["AUDIO"], "b": ["AUDIO"], "ratio": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0}], "if_durations_differ": [["use_longest", "use_shortest"], {"default": "use_longest"}], "if_samplerates_differ": [["use_highest", "use_lowest"], {"default": "use_highest"}]}}, "input_order": {"required": ["a", "b", "ratio", "if_durations_differ", "if_samplerates_differ"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "JWAudioBlend", "display_name": "Audio Blend", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": false}, "JWAudioSaveToPath": {"input": {"required": {"audio": ["AUDIO"], "path": ["STRING", {"default": "./audio.mp3"}], "overwrite": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "path", "overwrite"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "JWAudioSaveToPath", "display_name": "Audio Save to Path", "description": "", "python_module": "custom_nodes.comfyui-various", "category": "jamesWalker55", "output_node": true}, "Load Vit Matte Model (mtb)": {"input": {"required": {"kind": [["Composition-1K", "Distinctions-646"]], "autodownload": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["kind", "autodownload"]}, "output": ["VITMATTE_MODEL"], "output_is_list": [false], "output_name": ["torch_script"], "name": "Load Vit Matte Model (mtb)", "display_name": "Load Vit Matte Model (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/vitmatte", "output_node": false}, "Generate Trimap (mtb)": {"input": {"required": {"mask": ["MASK"], "erode": ["INT", {"default": 10}], "dilate": ["INT", {"default": 10}]}}, "input_order": {"required": ["mask", "erode", "dilate"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["trimap"], "name": "Generate Trimap (mtb)", "display_name": "Generate Trimap (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/vitmatte", "output_node": false}, "Apply Vit Matte (mtb)": {"input": {"required": {"model": ["VITMATTE_MODEL"], "image": ["IMAGE"], "trimap": ["IMAGE"], "returns": [["RGB", "RGBA"]]}}, "input_order": {"required": ["model", "image", "trimap", "returns"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image (rgba)", "mask"], "name": "Apply Vit Matte (mtb)", "display_name": "Apply Vit Matte (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Load Image Sequence (mtb)": {"input": {"required": {"path": ["STRING", {"default": "videos/####.png"}], "current_frame": ["INT", {"default": 0, "min": -1, "max": 9999999}]}, "optional": {"range": ["STRING", {"default": ""}]}}, "input_order": {"required": ["path", "current_frame"], "optional": ["range"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "current_frame", "total_frames"], "name": "Load Image Sequence (mtb)", "display_name": "Load Image Sequence (mtb)", "description": "# Load Image Sequence\n\nLoad an image sequence from a folder. The current frame is used to determine which image to load.  \nThe UX need improvements but you can use it as follow:  \n\n- If current_frame is -1, it will load all the frames matching the pattern.\n- If the path contains a `*` it will glob the paths using it.\n- If range is provided (for instance `0-10` to load frame 0 to 10) current_frame is ignored.\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false}, "Save Image Sequence (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "Sequence"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "current_frame"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Sequence (mtb)", "display_name": "Save Image Sequence (mtb)", "description": "# Save Image Sequence\n\nSave an image sequence to a folder. The current frame is used to determine which image to save.\nThis is merely a wrapper around the `save_images` function with formatting for the output folder and filename.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true}, "Transform Image (mtb)": {"input": {"required": {"image": ["IMAGE"], "x": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "y": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.001, "step": 0.01}], "angle": ["FLOAT", {"default": 0, "step": 1, "min": -360, "max": 360}], "shear": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}, "optional": {"filter_type": [["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"], {"default": "bilinear"}], "stretch_x": ["FLOAT", {"default": 1.0, "min": 0.001, "max": 10.0, "step": 0.01}], "stretch_y": ["FLOAT", {"default": 1.0, "min": 0.001, "max": 10.0, "step": 0.01}], "use_normalized": ["BOOLEAN", {"default": false, "tooltip": "If true, transform values are scaled to image dimensions."}]}}, "input_order": {"required": ["image", "x", "y", "zoom", "angle", "shear", "border_handling", "constant_color"], "optional": ["filter_type", "stretch_x", "stretch_y", "use_normalized"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Transform Image (mtb)", "display_name": "Transform Image (mtb)", "description": "# Transform Image\n\nTransform images while maintaining the input tensor shape\n\n## Filter Types\n1. `NEAREST`: Nearest neighbor - fastest but lowest quality\n2. `BOX`: Box filtering - similar to nearest neighbor but with some averaging\n3. `BILINEAR`: Bilinear filtering - good balance between quality and speed\n4. `HAMMING`: Hamming filtering - improved version of bilinear (doesn't allow rotations)\n5. `BICUBIC`: Bicubic filtering - better quality than bilinear but slower\n6. `LANCZOS`: Lanczos filtering - highest quality but slowest (doesn't allow rotations)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/transform", "output_node": false}, "Qr Code (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://www.github.com"}], "width": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "error_correct": [["L", "M", "Q", "H"], {"default": "L"}], "box_size": ["INT", {"default": 10, "max": 8096, "min": 0, "step": 1}], "border": ["INT", {"default": 4, "max": 8096, "min": 0, "step": 1}], "invert": [["BOOLEAN"], {"default": false}]}}, "input_order": {"required": ["url", "width", "height", "error_correct", "box_size", "border", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Qr Code (mtb)", "display_name": "Qr Code (mtb)", "description": "# QR Code\nBasic QR Code generator\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Model Pruner (mtb)": {"input": {"optional": {"unet": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"]}, "required": {"save_separately": ["BOOLEAN", {"default": false}], "save_folder": ["STRING", {"default": "checkpoints/ComfyUI"}], "fix_clip": ["BOOLEAN", {"default": true}], "remove_junk": ["BOOLEAN", {"default": true}], "ema_mode": [["disabled", "remove_ema", "ema_only"], {"default": "remove_ema"}], "precision_unet": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_unet": [["copy", "convert", "delete"], {"default": "convert"}], "precision_clip": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_clip": [["copy", "convert", "delete"], {"default": "convert"}], "precision_vae": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_vae": [["copy", "convert", "delete"], {"default": "convert"}]}}, "input_order": {"optional": ["unet", "clip", "vae"], "required": ["save_separately", "save_folder", "fix_clip", "remove_junk", "ema_mode", "precision_unet", "operation_unet", "precision_clip", "operation_clip", "precision_vae", "operation_vae"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Model Pruner (mtb)", "display_name": "Model Pruner (mtb)", "description": "# Model Pruner\n\nBasic output node to prune/downsample a model.\n\nIf `save_folder` is a relative path, it will be relative to comfy's output directory?\n\n**This is a bit experimental for now**\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/prune", "output_node": true}, "Postshot Export (mtb)": {"input": {"required": {"project_file": ["STRING", {"default": "", "forceInput": true}], "export_splat_ply": ["STRING", {"default": "output.ply"}], "postshot_cli": ["STRING", {"default": "C:/Program Files/Jawset Postshot/bin/postshot-cli.exe"}]}}, "input_order": {"required": ["project_file", "export_splat_ply", "postshot_cli"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["exported_ply_path"], "name": "Postshot Export (mtb)", "display_name": "Postshot Export (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/postshot", "output_node": true}, "Postshot Train (mtb)": {"input": {"required": {"images": ["IMAGE", {"tooltip": "These image will get save to disk first"}], "profile": [["NeRF L", "NeRF M", "NeRF S", "NeRF XL", "NeRF XXL", "Splat ADC", "Splat MCMC"], {"default": "Splat MCMC", "tooltip": "The radiance field model profile to train"}], "image_select": [["all", "best"], {"default": "best", "tooltip": "How to select training images from the source image sets"}], "train_steps_limit": ["INT", {"default": 30, "min": 1, "max": 1000, "tooltip": "Number of kSteps to train the model for"}], "output_path": ["STRING", {"default": "output", "tooltip": "path to save the project to\nAbsolute paths are kept as is, relatives are from the output directory.\n"}], "postshot_cli": ["STRING", {"default": "C:/Program Files/Jawset Postshot/bin/postshot-cli.exe"}]}, "optional": {"gpu": ["INT", {"default": 0, "min": 0, "max": 255, "tooltip": "Specify the index of the GPU to use"}], "num_train_images": ["INT", {"default": 0, "min": 0, "tooltip": "If image-select best is used, specifies the number of training images to select"}], "max_image_size": ["INT", {"default": 1600, "min": 0, "tooltip": "Downscale training images such that their longer edge is at most this value in pixels. Disabled if zero."}], "max_num_features": ["INT", {"default": 8, "min": 1, "tooltip": "Maximum number of 2D kFeatures extracted from each image."}], "splat_density": ["FLOAT", {"default": 1.0, "min": 0.125, "max": 8.0, "tooltip": "Controls how much additional splats are generated during training.Applies only in 'Splat ADC' profile."}], "max_num_splats": ["INT", {"default": 3000, "min": 1, "tooltip": "Sets the maximum number of splats (in kSplats) created during training. Applies only in 'Splat MCMC' profile."}], "export_splat_ply": ["STRING", {"default": "", "tooltip": "If not empty will also save a ply file.\nAbsolute paths are kept as is, relatives are from the output directory.\n"}]}}, "input_order": {"required": ["images", "profile", "image_select", "train_steps_limit", "output_path", "postshot_cli"], "optional": ["gpu", "num_train_images", "max_image_size", "max_num_features", "splat_density", "max_num_splats", "export_splat_ply"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["project_file_path"], "name": "Postshot Train (mtb)", "display_name": "Postshot Train (mtb)", "description": "# Postshot Train\n\nhttps://github.com/user-attachments/assets/fcaf4163-28c7-4768-a785-bc794fca3ec0\n\n\nWrapper around the [Potshot](https://www.jawset.com/) CLI. \nYou must first run the GUI at least once and login.\nIf you use a custom install location you can specify it in **Settings > MTB**\n\n\n\n## Radiance Field Profile\n\nPostshot supports two different models to create radiance fields:\n- Gaussian Splatting (Splat)\n- Neural Radiance Fields (NeRF).\n\n### Splat MCMC\n\nBoth Splat profiles allow for very fast rendering and quickly reconstruct fine detail in well-covered regions of the scene.\n\nThe Splat MCMC profile is currently the recommended profile for most scenes. It allows limiting the number of Splat primitives and thereby the amount of memory and disk space the resulting model requires.\n\n### Splat ADC\n\nThe Splat ADC profile is very similar to the Splat MCMC profile, but differs in the way it produces detail in the scene during training. You can control the amount of detail it creates during training through the Splat Density parameter.\n\n### NeRF models\n\nWhen using the NeRF model, the maximum accuracy has to be specified before the training can begin. Postshot currently provides five sizes (S, M, L, XL, XXL) for NeRF models. NeRFs are much slower to render than Splats.\n\nHere is an intuition for how 'large' the NeRF profile options are:\n- **S** is for toy-like testing.\n- **M** is a significant step up, such that real scenes can be reasonably captured with low memory requirements.\n- **L** is the recommended default if you want to produce good image quality.\n- **XL** and **XXL** are for pushing toward fine detail in the scene center or for large scenes.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/postshot", "output_node": true}, "Float To Number (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Float To Number (mtb)", "display_name": "Float To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" FLOAT to a NUMBER.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Int To Bool (mtb)": {"input": {"required": {"int": ["INT", {"default": 0}]}}, "input_order": {"required": ["int"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Int To Bool (mtb)", "display_name": "Int To Bool (mtb)", "description": "# Int to Bool\n\nBasic int to bool conversion, >= 1 is true\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Int To Number (mtb)": {"input": {"required": {"int": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["int"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Int To Number (mtb)", "display_name": "Int To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" INT to a NUMBER.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Model Patch Seamless (mtb)": {"input": {"required": {"model": ["MODEL"], "startStep": ["INT", {"default": 0}], "stopStep": ["INT", {"default": 999}], "tilingX": ["BOOLEAN", {"default": true}], "tilingY": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "startStep", "stopStep", "tilingX", "tilingY"]}, "output": ["MODEL", "MODEL"], "output_is_list": [false, false], "output_name": ["Original Model (passthrough)", "Patched Model"], "name": "Model Patch Seamless (mtb)", "display_name": "Model Patch Seamless (mtb)", "description": "# Model Patch Seamless\n\nThis uses this [hack](https://gitlab.com/-/snippets/2395088) to generate seamless image right at the inference stage.\nResults might vary depending on the model and prompt.\n\nHere is a few output from an extended version of the available [example](https://github.com/melMass/comfy_mtb/wiki/Examples). The main difference is that I use an upscale step before running [deep bump](nodes-deep-bump).\n\n|albedo|\n|-|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/3984907b-617e-49ff-8100-92c91af4459e\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1194b2b8-eca4-4f75-8a1c-4d8074c08ea6\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11026b5d-500b-4cfe-8cdc-682cc995dfb1\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1f5d1671-5208-47ca-b625-478b09eed969\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cdf3463f-c66c-472c-8ac3-e80af1901852\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/151b44ca-26e2-49d0-91be-cda938c0577a\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/b4280a65-644f-45d8-9fe8-b6148bf66b3c\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cbfacbbc-2ae2-4cd2-84bc-8849c2115b51\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8c6eea98-ae90-48d3-9051-de542102166e\"/>|", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/textures", "output_node": false}, "Vae Decode (mtb)": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "seamless_model": ["BOOLEAN", {"default": false}], "use_tiling_decoder": ["BOOLEAN", {"default": true}], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["samples", "vae", "seamless_model", "use_tiling_decoder", "tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Vae Decode (mtb)", "display_name": "Vae Decode (mtb)", "description": "# VAE Decode\nThis works exactly as the builtin one but also supports the sd seamless hack, taken from: FlyingFireCo/tiled_ksampler\nthat is use in the `Model Patch Seamless` node.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/decode", "output_node": false}, "Image Remove Background Rembg (mtb)": {"input": {"required": {"image": ["IMAGE"], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "post_process_mask": ["BOOLEAN", {"default": false}], "bgcolor": ["COLOR", {"default": "#000000"}]}}, "input_order": {"required": ["image", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask", "bgcolor"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["Image (rgba)", "Mask", "Image"], "name": "Image Remove Background Rembg (mtb)", "display_name": "Image Remove Background Rembg (mtb)", "description": "# Image Remove Background\n\nRemoves the background from the input using Rembg.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Image H264 Compression (mtb)": {"input": {"required": {"image": ["IMAGE", {"tooltip": "The input image tensor to be compressed and decompressed."}], "crf": ["INT", {"default": 23, "min": 0, "max": 51, "step": 1, "tooltip": "Constant Rate Factor for h264 encoding (lower values mean higher quality)."}]}}, "input_order": {"required": ["image", "crf"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image H264 Compression (mtb)", "display_name": "Image H264 Compression (mtb)", "description": "\n**Encodes the input with h264 compression using a configurable CRF**.\n\n> [!IMPORTANT]\n> This node is not really needed with the latest version of LTXVideo.\n\n> [!NOTE]\n> This was recommended by the creators of LTX over banodoco's discord.\n\n*Orginal code from [mix](https://github.com/XmYx)*", "python_module": "custom_nodes.comfy-mtb", "category": "image", "output_node": false}, "Latent Lerp (mtb)": {"input": {"required": {"A": ["LATENT"], "B": ["LATENT"], "t": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["A", "B", "t"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Lerp (mtb)", "display_name": "Latent Lerp (mtb)", "description": "# Latent Lerp\nLinear interpolation (blend) between two latent vectors\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/latent", "output_node": false}, "Save Gif (mtb)": {"input": {"required": {"image": ["IMAGE"], "fps": ["INT", {"default": 12, "min": 1, "max": 120}], "resize_by": ["FLOAT", {"default": 1.0, "min": 0.1}], "optimize": ["BOOLEAN", {"default": false}], "pingpong": ["BOOLEAN", {"default": false}], "resample_filter": [["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"]], "use_ffmpeg": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "fps", "resize_by", "optimize", "pingpong", "resample_filter", "use_ffmpeg"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Gif (mtb)", "display_name": "Save Gif (mtb)", "description": "# Save GIF\nSave the images from the batch as a GIF\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "deprecated": true}, "Export With Ffmpeg (mtb)": {"input": {"optional": {"images": ["IMAGE"], "playlist": ["PLAYLIST"]}, "required": {"fps": ["FLOAT", {"default": 24, "min": 1}], "prefix": ["STRING", {"default": "export"}], "format": [["mov", "mp4", "mkv", "gif", "avi"], {"default": "mov"}], "codec": [["prores_ks", "libx264", "libx265", "gif"], {"default": "prores_ks"}]}}, "input_order": {"optional": ["images", "playlist"], "required": ["fps", "prefix", "format", "codec"]}, "output": ["VIDEO"], "output_is_list": [false], "output_name": ["VIDEO"], "name": "Export With Ffmpeg (mtb)", "display_name": "Export With Ffmpeg (mtb)", "description": "# Export with FFmpeg\n\nQuite crude node, [VHS](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) is recommended now\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "deprecated": true}, "Add To Playlist (mtb)": {"input": {"required": {"relative_paths": ["BOOLEAN", {"default": false}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["relative_paths", "persistant_playlist", "playlist_name", "index"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Add To Playlist (mtb)", "display_name": "Add To Playlist (mtb)", "description": "Add a video to the playlist", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "experimental": true}, "Read Playlist (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["enable", "persistant_playlist", "playlist_name", "index"]}, "output": ["PLAYLIST"], "output_is_list": [false], "output_name": ["PLAYLIST"], "name": "Read Playlist (mtb)", "display_name": "Read Playlist (mtb)", "description": "# Read a playlist\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false, "experimental": true}, "Stack Images (mtb)": {"input": {"required": {"vertical": ["BOOLEAN", {"default": false}]}, "optional": {"match_method": [["error", "smallest", "largest"], {"default": "error"}]}}, "input_order": {"required": ["vertical"], "optional": ["match_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Stack Images (mtb)", "display_name": "Stack Images (mtb)", "description": "# Stack Images\n\nA simple way to stack images either horizontally or vertically. Stack image uses [dynamic inputs](web-dynamic-inputs).\n\nIt outputs RGBA tensors and supports RGB or RGBA as input (normalized to RGBA internally). If the image dimensions don't match they must at least match:\n- in `width` when stacking vertically.\n- in `height` when stacking horizontally.\n\nHere is an example workflow using [Text To Image](nodes-text-to-image) (the text was generated using [Nous Hermes 2 Vision](https://huggingface.co/billborkowski/llava-NousResearch_Nous-Hermes-2-Vision-GGUF) thanks to the great [ComfyUI_VLM_nodes](https://github.com/gokayfem/ComfyUI_VLM_nodes) extension. For simplicity's sake, the workflow doesn't contain external nodes:\n\n![stack_images](https://github.com/melMass/comfy_mtb/assets/7041726/a0c03621-3377-46cf-a6b4-f47e70c7d11f)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Pick From Batch (mtb)": {"input": {"required": {"image": ["IMAGE"], "from_direction": [["end", "start"], {"default": "start"}], "count": ["INT", {"default": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "from_direction", "count"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Pick From Batch (mtb)", "display_name": "Pick From Batch (mtb)", "description": "# Pick From Batch\nPick a specific number of images from a batch either from the head or the tail.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Save Image (mtb)": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Save Image (mtb)", "display_name": "Save Image (mtb)", "description": "Saves the input images to your ComfyUI output directory.\n    This behaves exactly like the native SaveImage node but isn't an output node.\n    The reason I made this is to allow 'inlining' image save in loops for instance,\n    using the native node there wouldn't run for each iteration of the loop.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Color Correct (mtb)": {"input": {"required": {"image": ["IMAGE"], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct (mtb)", "display_name": "Color Correct (mtb)", "description": "# Color Correct\n\nVarious color correction methods\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Color Correct GPU (mtb)": {"input": {"required": {"image": ["IMAGE"], "force_gpu": ["BOOLEAN", {"default": true}], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "force_gpu", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct GPU (mtb)", "display_name": "Color Correct GPU (mtb)", "description": "Various color correction methods using only Torch.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Image Compare (mtb)": {"input": {"required": {"imageA": ["IMAGE"], "imageB": ["IMAGE"], "mode": [["checkerboard", "diff", "blend"], {"default": "checkerboard"}]}}, "input_order": {"required": ["imageA", "imageB", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Compare (mtb)", "display_name": "Image Compare (mtb)", "description": "# Image Compare\nCompare two images and return a difference image\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Image Tile Offset (mtb)": {"input": {"required": {"image": ["IMAGE"], "tilesX": ["INT", {"default": 2, "min": 1}], "tilesY": ["INT", {"default": 2, "min": 1}]}}, "input_order": {"required": ["image", "tilesX", "tilesY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Tile Offset (mtb)", "display_name": "Image Tile Offset (mtb)", "description": "# Image Tile Offset\n\nMimics an old photoshop technique to check for seamless textures\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Blur (mtb)": {"input": {"required": {"image": ["IMAGE"], "sigmaX": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}], "sigmaY": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}]}, "optional": {"sigmasX": ["FLOATS"], "sigmasY": ["FLOATS"]}}, "input_order": {"required": ["image", "sigmaX", "sigmaY"], "optional": ["sigmasX", "sigmasY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blur (mtb)", "display_name": "Blur (mtb)", "description": "# Blur\n\nApplies a Gaussian blur to the given image / batch.  \nIt allows a few more things than the core blur node, namely:\n- **Higher values** (core is limited to 30)  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/c0cd8426-7b44-4067-bb98-9a178e715169\"/>\n\n- **Individual X & Y blur**  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/f5511f9a-d659-4935-abb5-3242894a0a82\"/>\n\n- [`FLOATS`](nodes-batch#batch-floats) support for individual batch frame blur\n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8aab18d2-b140-4e04-a4bd-fd294f2e187b\"/>\n\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Mask To Image (mtb)": {"input": {"required": {"mask": ["MASK"], "color": ["COLOR"], "background": ["COLOR", {"default": "#000000"}]}, "optional": {"invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "color", "background"], "optional": ["invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mask To Image (mtb)", "display_name": "Mask To Image (mtb)", "description": "# Mask to Image\n\nConverts a mask (alpha) to an RGB image with a color and background\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Colored Image (mtb)": {"input": {"required": {"color": ["COLOR"], "width": ["INT", {"default": 512, "min": 16, "max": 8160}], "height": ["INT", {"default": 512, "min": 16, "max": 8160}]}, "optional": {"foreground_image": ["IMAGE"], "foreground_mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}], "mask_opacity": ["FLOAT", {"default": 1.0, "step": 0.1, "min": 0}]}}, "input_order": {"required": ["color", "width", "height"], "optional": ["foreground_image", "foreground_mask", "invert", "mask_opacity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Colored Image (mtb)", "display_name": "Colored Image (mtb)", "description": "# Colored Image\n\nConstant color images of a given size can also be used to mask images.\n\nThis example uses [VHS Nodes](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) for animation preview\n![batch_shapes](https://github.com/melMass/comfy_mtb/assets/7041726/a1aa62c5-f8cb-4f90-a14a-f7260a982e5a)\n\n**Workflow**: \n```json\n{\"last_node_id\":41,\"last_link_id\":65,\"nodes\":[{\"id\":13,\"type\":\"Batch Float (mtb)\",\"pos\":[-1213,622],\"size\":[315,154],\"flags\":{},\"order\":0,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[30],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",12,0.001,5,\"Quart In/Out\"]},{\"id\":31,\"type\":\"VHS_VideoCombine\",\"pos\":[1080,280],\"size\":[315,314],\"flags\":{},\"order\":16,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":50},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00004.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":22,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[-884,621],\"size\":[315,106],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":30}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[31],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"tail\",0,20]},{\"id\":30,\"type\":\"ImageBlend\",\"pos\":[680,280],\"size\":[315,102],\"flags\":{},\"order\":14,\"mode\":0,\"inputs\":[{\"name\":\"image1\",\"type\":\"IMAGE\",\"link\":65},{\"name\":\"image2\",\"type\":\"IMAGE\",\"link\":48}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[50],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageBlend\"},\"widgets_values\":[1,\"screen\"]},{\"id\":15,\"type\":\"Batch Transform (mtb)\",\"pos\":[484,561],\"size\":[210,194],\"flags\":{},\"order\":10,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":29,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":33},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[48],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":23,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[110,623],\"size\":[315,106],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":32}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[33],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"head\",0,20]},{\"id\":21,\"type\":\"Batch Float (mtb)\",\"pos\":[-246,623],\"size\":[315,154],\"flags\":{},\"order\":1,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[32],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",20,0.001,4.5,\"Quart In/Out\"]},{\"id\":41,\"type\":\"Reroute\",\"pos\":[-91,283],\"size\":[75,26],\"flags\":{},\"order\":12,\"mode\":0,\"inputs\":[{\"name\":\"\",\"type\":\"*\",\"link\":64}],\"outputs\":[{\"name\":\"\",\"type\":\"IMAGE\",\"links\":[65]}],\"properties\":{\"showOutputText\":false,\"horizontal\":false}},{\"id\":14,\"type\":\"Batch Transform (mtb)\",\"pos\":[-517,562],\"size\":[210,194],\"flags\":{},\"order\":9,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":27,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":31},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[37,62,64],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":35,\"type\":\"LoadImage\",\"pos\":[-560,920],\"size\":[315,314],\"flags\":{},\"order\":2,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[56],\"shape\":3,\"slot_index\":0},{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"LoadImage\"},\"widgets_values\":[\"189.png\",\"image\"]},{\"id\":40,\"type\":\"Blur (mtb)\",\"pos\":[-217,1000],\"size\":[315,82],\"flags\":{},\"order\":11,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":62,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[63],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[50,50]},{\"id\":33,\"type\":\"ImageToMask\",\"pos\":[120,997],\"size\":[210,58],\"flags\":{},\"order\":13,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":63,\"slot_index\":0}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[57],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":37,\"type\":\"Colored Image (mtb)\",\"pos\":[350,920],\"size\":[210,138],\"flags\":{},\"order\":15,\"mode\":0,\"inputs\":[{\"name\":\"foreground_image\",\"type\":\"IMAGE\",\"link\":56,\"slot_index\":0},{\"name\":\"foreground_mask\",\"type\":\"MASK\",\"link\":57,\"slot_index\":1}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[55],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Colored Image (mtb)\"},\"widgets_values\":[\"#1603fc\",512,512]},{\"id\":36,\"type\":\"VHS_VideoCombine\",\"pos\":[584,918],\"size\":[315,314],\"flags\":{},\"order\":17,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":55,\"slot_index\":0},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00009.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":20,\"type\":\"Mask To Image (mtb)\",\"pos\":[231,459],\"size\":[210,106],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":28,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[29],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#00ff00\",\"#000000\"]},{\"id\":16,\"type\":\"ImageToMask\",\"pos\":[-750,191],\"size\":[210,58],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":25}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[26,28],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":19,\"type\":\"Mask To Image (mtb)\",\"pos\":[-750,446],\"size\":[210,106],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":26,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[27],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#ff0000\",\"#000000\"]},{\"id\":11,\"type\":\"Batch Shape (mtb)\",\"pos\":[-1039,192],\"size\":[210,334],\"flags\":{},\"order\":3,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[25],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[20,\"Tube\",1024,1024,512,\"#ffffff\",\"#000000\",\"#000000\",250,0,0]}],\"links\":[[25,11,0,16,0,\"IMAGE\"],[26,16,0,19,0,\"MASK\"],[27,19,0,14,0,\"IMAGE\"],[28,16,0,20,0,\"MASK\"],[29,20,0,15,0,\"IMAGE\"],[30,13,0,22,0,\"FLOATS\"],[31,22,0,14,3,\"FLOATS\"],[32,21,0,23,0,\"FLOATS\"],[33,23,0,15,3,\"FLOATS\"],[37,14,0,27,0,\"IMAGE\"],[48,15,0,30,1,\"IMAGE\"],[50,30,0,31,0,\"IMAGE\"],[55,37,0,36,0,\"IMAGE\"],[56,35,0,37,0,\"IMAGE\"],[57,33,0,37,1,\"MASK\"],[62,14,0,40,0,\"IMAGE\"],[63,40,0,33,0,\"IMAGE\"],[64,14,0,41,0,\"*\"],[65,41,0,30,0,\"IMAGE\"]],\"groups\":[],\"config\":{},\"extra\":{\"workspace_info\":{\"id\":\"lHUoc3eCvYMplIxkGM68o\"}},\"version\":0.4}\n```", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Image Premultiply (mtb)": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGBA"], "name": "Image Premultiply (mtb)", "display_name": "Image Premultiply (mtb)", "description": "# Image Premultiply\n\nPremultiply image with mask\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Image Resize Factor (mtb)": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "supersample": ["BOOLEAN", {"default": true}], "resampling": [["nearest", "linear", "bilinear", "bicubic", "trilinear", "area", "nearest-exact"], {"default": "nearest"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "factor", "supersample", "resampling"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Resize Factor (mtb)", "display_name": "Image Resize Factor (mtb)", "description": "# Image Resize Factor\n\nExtracted mostly from WAS Node Suite, with a few edits (most notably multiple image support) and less features.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Save Image Grid (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "save_intermediate": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "save_intermediate"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Grid (mtb)", "display_name": "Save Image Grid (mtb)", "description": "# Save Image Grid\n\nSave all the images in the input batch as a grid of images.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true}, "Load Image From Url (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg"}]}}, "input_order": {"required": ["url"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Load Image From Url (mtb)", "display_name": "Load Image From Url (mtb)", "description": "# Load image from URL\n\nLoad an image from the given URL\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false}, "Sharpen (mtb)": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma_x": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "sigma_y": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.1}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma_x", "sigma_y", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sharpen (mtb)", "display_name": "Sharpen (mtb)", "description": "# Sharpen\nSharpens an image using a Gaussian kernel.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Extract Coordinates From Image (mtb)": {"input": {"required": {"threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "max_points": ["INT", {"default": 50, "min": 0}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["threshold", "max_points"], "optional": ["image", "mask"]}, "output": ["BATCH_COORDINATES", "IMAGE"], "output_is_list": [false, false], "output_name": ["BATCH_COORDINATES", "IMAGE"], "name": "Extract Coordinates From Image (mtb)", "display_name": "Extract Coordinates From Image (mtb)", "description": "Extract 2D points from a batch of images based on a threshold.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/coordinates", "output_node": false}, "Coordinates To String (mtb)": {"input": {"required": {"coordinates": ["BATCH_COORDINATES"], "frame": ["INT"]}}, "input_order": {"required": ["coordinates", "frame"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Coordinates To String (mtb)", "display_name": "Coordinates To String (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/coordinates", "output_node": false}, "String Replace (mtb)": {"input": {"required": {"string": ["STRING", {"forceInput": true}], "old": ["STRING", {"default": ""}], "new": ["STRING", {"default": ""}], "use_regex": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["string", "old", "new", "use_regex"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String Replace (mtb)", "display_name": "String Replace (mtb)", "description": "# String Replace\nBasic string replacement.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/string", "output_node": false}, "Fit Number (mtb)": {"input": {"required": {"value": ["FLOAT", {"default": 0, "forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["value", "clamp", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Fit Number (mtb)", "display_name": "Fit Number (mtb)", "description": "Fit the input float using a source and target range", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/math", "output_node": false}, "Get Batch From History (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "count": ["INT", {"default": 1, "min": 0}], "offset": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0}], "internal_count": ["INT", {"default": 0}]}, "optional": {"passthrough_image": ["IMAGE"]}}, "input_order": {"required": ["enable", "count", "offset", "internal_count"], "optional": ["passthrough_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Get Batch From History (mtb)", "display_name": "Get Batch From History (mtb)", "description": "# Get Batch from History\n\nThis experimental node does something really simple, it reads the outputs from the history endpoint of Comfy.\nOutputs gets populated by... output nodes. There are various ones but  for instance in core comfy, `Save Image` and `Preview Image` are output nodes.\nI advice to start simple and have workflows that only generates one output per queue run. Of course once you master it you can use multiple outputs as output order is kept (as long as all outputs are ran).\n\nAnother basic use case of batch from history that you can see in the 4th [example](Examples), the fake deforum effect, basically this flow allows you to **feedback** an image using the history.\n\nA classic example when showing the feedback concept is the poor man's [grey scott diffusion model](https://groups.csail.mit.edu/mac/projects/amorphous/GrayScott/) i.e the \"creative\" derivative using only a gaussian blur and a sharp at each fed steps. \n\n \nHere is an example workflow of just that.\n\nthis is the output:  \n<p align=center>\n<img width=250 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/162fb62e-96d4-4843-8902-19d59c536469\"/>\n</p>\n\nand the workflow:\n<p align=center>  \n<img width=1000 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11257918-86ff-4ddd-8d08-f2a59f7f45a2\"/>\n</p>\n\n<details><summary>expand here to copy paste this workflow</summary>\n\n```json\n{\"last_node_id\":17,\"last_link_id\":27,\"nodes\":[{\"id\":9,\"type\":\"Get Batch From History (mtb)\",\"pos\":[181,706],\"size\":[315,130],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":null,\"slot_index\":0,\"shape\":7},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":6,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[23],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[true,44,0,969]},{\"id\":13,\"type\":\"Sharpen (mtb)\",\"pos\":[996,276],\"size\":[315,130],\"flags\":{},\"order\":9,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":14}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[22],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Sharpen (mtb)\"},\"widgets_values\":[31,2,1,1]},{\"id\":15,\"type\":\"VHS_VideoCombine\",\"pos\":[528,708],\"size\":[276,580],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":23},{\"name\":\"audio\",\"type\":\"AUDIO\",\"link\":null,\"shape\":7},{\"name\":\"meta_batch\",\"type\":\"VHS_BatchManager\",\"link\":null,\"shape\":7},{\"name\":\"vae\",\"type\":\"VAE\",\"link\":null,\"shape\":7}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":20,\"loop_count\":0,\"filename_prefix\":\"MTB_BatchFromHistory\",\"format\":\"video/h264-mp4\",\"pix_fmt\":\"yuv420p\",\"crf\":19,\"save_metadata\":true,\"pingpong\":false,\"save_output\":true,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_01089.mp4\",\"subfolder\":\"\",\"type\":\"output\",\"format\":\"video/h264-mp4\",\"frame_rate\":20},\"muted\":false}}},{\"id\":16,\"type\":\"LoadImage\",\"pos\":[-168,-216],\"size\":[315,314],\"flags\":{},\"order\":0,\"mode\":4,\"inputs\":[],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[25],\"slot_index\":0},{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":null}],\"properties\":{\"Node name for S&R\":\"LoadImage\"},\"widgets_values\":[\"example.png\",\"image\"]},{\"id\":17,\"type\":\"ImageScale\",\"pos\":[192,-36],\"size\":[315,130],\"flags\":{},\"order\":3,\"mode\":4,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":25}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[],\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageScale\"},\"widgets_values\":[\"nearest-exact\",512,512,\"disabled\"]},{\"id\":10,\"type\":\"Blur (mtb)\",\"pos\":[672,276],\"size\":[315,122],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":24},{\"name\":\"sigmasX\",\"type\":\"FLOATS\",\"link\":null,\"shape\":7},{\"name\":\"sigmasY\",\"type\":\"FLOATS\",\"link\":null,\"shape\":7}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[14],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[6,6]},{\"id\":3,\"type\":\"Get Batch From History (mtb)\",\"pos\":[336,276],\"size\":[315,130],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":27,\"slot_index\":0,\"shape\":7},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":16,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[24],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[false,1,0,969]},{\"id\":6,\"type\":\"Int To Bool (mtb)\",\"pos\":[324,444],\"size\":[210,42.27488708496094],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"int\",\"type\":\"INT\",\"link\":4,\"widget\":{\"name\":\"int\"}}],\"outputs\":[{\"name\":\"BOOLEAN\",\"type\":\"BOOLEAN\",\"links\":[16],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Int To Bool (mtb)\"},\"widgets_values\":[0]},{\"id\":2,\"type\":\"PreviewImage\",\"pos\":[972,456],\"size\":[360,348],\"flags\":{},\"order\":10,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":22}],\"outputs\":[],\"properties\":{\"Node name for S&R\":\"PreviewImage\"},\"widgets_values\":[]},{\"id\":1,\"type\":\"Batch Shape (mtb)\",\"pos\":[-120,192],\"size\":[210,334],\"flags\":{},\"order\":1,\"mode\":0,\"inputs\":[],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[27],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[1,\"Diamond\",512,512,229,\"#ffffff\",\"#000000\",\"#000000\",0,0,0]},{\"id\":4,\"type\":\"Animation Builder (mtb)\",\"pos\":[-110,596],\"size\":[210,318],\"flags\":{},\"order\":2,\"mode\":0,\"inputs\":[],\"outputs\":[{\"name\":\"frame\",\"type\":\"INT\",\"links\":[4],\"slot_index\":0,\"shape\":3},{\"name\":\"0-1 (scaled)\",\"type\":\"FLOAT\",\"links\":null,\"shape\":3},{\"name\":\"count\",\"type\":\"INT\",\"links\":null,\"shape\":3},{\"name\":\"loop_ended\",\"type\":\"BOOLEAN\",\"links\":[6],\"slot_index\":3,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Animation Builder (mtb)\"},\"widgets_values\":[45,1,1,0,0,null,null,\"reset\",\"queue\"]}],\"links\":[[4,4,0,6,0,\"INT\"],[6,4,3,9,1,\"BOOLEAN\"],[14,10,0,13,0,\"IMAGE\"],[16,6,0,3,1,\"BOOLEAN\"],[22,13,0,2,0,\"IMAGE\"],[23,9,0,15,0,\"IMAGE\"],[24,3,0,10,0,\"IMAGE\"],[25,16,0,17,0,\"IMAGE\"],[27,1,0,3,0,\"IMAGE\"]],\"groups\":[],\"config\":{},\"extra\":{\"ds\":{\"scale\":0.6727499949325705,\"offset\":[682.4627866508608,403.88645096355583]},\"ue_links\":[]},\"version\":0.4}\n```\n\n</details>\n\nThe blue bordered node is the one doing the feedback, on first frame (frame == 0 converted to bool is false) the passthrough image will be used, this example uses the [Batch Shape](nodes-batch-shape) node, only on the first queue item, then the previous queue item is fed to each subsequent queue item.\nThe orange bordered one is fetching all the frames we queued once done to assemble the GIF. All this happens in \"one click\" thanks to [Animation Builder](nodes-animation-builder)\n\n\n## Inputs\n|name|description|\n|-|-|\n|passthrough_image | This is the image that gets sent out when `enable` is set to false, useful for the init first image in the fake deforum [example](Examples) for instance ([04-animation_builder-deforum.json](https://github.com/melMass/comfy_mtb/blob/main/examples/04-animation_builder-deforum.json)) |\n|enable | This makes the node not fetch the history. For instance when you just initiated the server the history is empty, see [Animation Builder](nodes-animation-builder) for practical examples |\n|count | the number of frames to fetch from the history |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/animation", "output_node": false}, "Any To String (mtb)": {"input": {"required": {"input": ["*"]}}, "input_order": {"required": ["input"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Any To String (mtb)", "display_name": "Any To String (mtb)", "description": "# Any to String\n\nTries to take any input and convert it to a string.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/converters", "output_node": false}, "Concat Images (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}, "optional": {"on_mismatch": [["Error", "Smallest", "Largest"], {"default": "Smallest"}]}}, "input_order": {"required": ["reverse"], "optional": ["on_mismatch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Concat Images (mtb)", "display_name": "Concat Images (mtb)", "description": "# Concat Images\n\nAdd images to batch.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Math Expression (mtb)": {"input": {"required": {"expression": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["expression"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["result (float)", "result (int)"], "name": "Math Expression (mtb)", "display_name": "Math Expression (mtb)", "description": "evaluate a simple math expression string, only supports literal_eval", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/math", "output_node": false}, "To Device (mtb)": {"input": {"required": {"ignore_errors": ["BOOLEAN", {"default": false}], "device": [["cpu", "cuda:0", "cuda"], {"default": "cuda"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["ignore_errors", "device"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "To Device (mtb)", "display_name": "To Device (mtb)", "description": "# To Device\nSend a image or mask tensor to the given device.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Apply Text Template (mtb)": {"input": {"required": {"template": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["template"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Apply Text Template (mtb)", "display_name": "Apply Text Template (mtb)", "description": "# Apply Text Template\n\nVery basic string interpolation using [dynamic inputs](web-dynamic-inputs).\n\nThe var names are `var_1`, `var_2` etc... They are interpolated like this: `{var_1}`, see the following example for a more concrete idea:\n\n![template_string](https://github.com/melMass/comfy_mtb/assets/7041726/abf8d63e-87f6-426a-adcc-514b85daeb5c)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Match Dimensions (mtb)": {"input": {"required": {"source": ["IMAGE"], "reference": ["IMAGE"], "match": [["height", "width"], {"default": "height"}]}}, "input_order": {"required": ["source", "reference", "match"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["image", "new_width", "new_height"], "name": "Match Dimensions (mtb)", "display_name": "Match Dimensions (mtb)", "description": "# Match Dimensions\n\nMatch images dimensions along the given axis, preserving aspect ratio.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Auto Pan Equilateral (mtb)": {"input": {"required": {"equilateral_image": ["IMAGE"], "fovX": ["FLOAT", {"default": 45.0}], "fovY": ["FLOAT", {"default": 45.0}], "elevation": ["FLOAT", {"default": 0.5}], "frame_count": ["INT", {"default": 100}], "width": ["INT", {"default": 768}], "height": ["INT", {"default": 512}]}, "optional": {"floats_fovX": ["FLOATS"], "floats_fovY": ["FLOATS"], "floats_elevation": ["FLOATS"]}}, "input_order": {"required": ["equilateral_image", "fovX", "fovY", "elevation", "frame_count", "width", "height"], "optional": ["floats_fovX", "floats_fovY", "floats_elevation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Auto Pan Equilateral (mtb)", "display_name": "Auto Pan Equilateral (mtb)", "description": "# Autopan Equilateral\n\nGenerate a 360 panning video from an equilateral image.\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Floats To Float (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "Floats To Float (mtb)", "display_name": "Floats To Float (mtb)", "description": "# `FLOATS` to `FLOAT`\n\nAD, IPA, Fitz etc have commonly choose to mistype float lists as FLOAT.\n\nThis is just a hack to be compatible with these\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Float To Floats (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["floats"], "name": "Float To Floats (mtb)", "display_name": "Float To Floats (mtb)", "description": "Conversion utility for compatibility with other extensions (AD, IPA, Fitz are using FLOAT to represent list of floats.)", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Floats To Ints (mtb)": {"input": {"required": {"floats": ["FLOATS", {"forceInput": true}]}}, "input_order": {"required": ["floats"]}, "output": ["INTS", "INT"], "output_is_list": [false, false], "output_name": ["INTS", "INT"], "name": "Floats To Ints (mtb)", "display_name": "Floats To Ints (mtb)", "description": "Conversion utility for compatibility with frame interpolation.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Tensor Ops (mtb)": {"input": {"required": {"tensor": ["IMAGE"], "operation": [["multiply", "divide", "add", "subtract", "power", "clamp", "abs", "log", "exp", "convert_dtype", "normalize_range", "normalize_per_channel"], {"default": "multiply"}], "value": ["FLOAT", {"default": 1.0, "min": -1000000.0, "max": 1000000.0, "step": 0.01}], "source_min": ["FLOAT", {"default": 0.0, "min": -1000000.0, "max": 1000000.0, "step": 0.01}], "source_max": ["FLOAT", {"default": 1.0, "min": -1000000.0, "max": 1000000.0, "step": 0.01}], "target_min": ["FLOAT", {"default": 0.0, "min": -1000000.0, "max": 1000000.0, "step": 0.01}], "target_max": ["FLOAT", {"default": 16.0, "min": -1000000.0, "max": 1000000.0, "step": 0.01}], "dtype": [["uint8", "float32", "float16", "bfloat16"], {"default": "float32"}], "use_mean": ["BOOLEAN", {"default": false}]}, "optional": {"target_tensor": ["IMAGE"]}}, "input_order": {"required": ["tensor", "operation", "value", "source_min", "source_max", "target_min", "target_max", "dtype", "use_mean"], "optional": ["target_tensor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tensor Ops (mtb)", "display_name": "Tensor Ops (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/tensor_ops", "output_node": false}, "Unsplash Image (mtb)": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "random_seed": ["INT", {"default": 0, "max": 100000.0, "min": 0, "step": 1}]}, "optional": {"keyword": ["STRING", {"default": "nature"}]}}, "input_order": {"required": ["width", "height", "random_seed"], "optional": ["keyword"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Unsplash Image (mtb)", "display_name": "Unsplash Image (mtb)", "description": "# Unsplash Image\n\nUnsplash Image given a keyword and a size\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Text To Image (mtb)": {"input": {"required": {"text": ["STRING", {"default": "Hello world!"}], "font": [["font"]], "wrap": ["BOOLEAN", {"default": true}], "trim": ["BOOLEAN", {"default": true}], "line_height": ["FLOAT", {"default": 1.0, "min": 0, "step": 0.1}], "font_size": ["INT", {"default": 32, "min": 1, "max": 2500, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "color": ["COLOR", {"default": "black"}], "background": ["COLOR", {"default": "white"}], "h_align": [["left", "center", "right"], {"default": "left"}], "v_align": [["top", "center", "bottom"], {"default": "top"}], "h_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "v_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "h_coverage": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}]}, "optional": {"whisper_chunks": ["WHISPER_CHUNKS"], "fps": ["INT", {"default": 24, "min": 1, "max": 60, "step": 1}], "fade_duration": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 5.0, "step": 0.1}]}}, "input_order": {"required": ["text", "font", "wrap", "trim", "line_height", "font_size", "width", "height", "color", "background", "h_align", "v_align", "h_offset", "v_offset", "h_coverage"], "optional": ["whisper_chunks", "fps", "fade_duration"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Text To Image (mtb)", "display_name": "Text To Image (mtb)", "description": "# Text to Image\n\nThis node look for any font files in comfy_dir/fonts.\nby default it fallsback to a default font.\n\n![img](https://i.imgur.com/3GT92hy.gif)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Filter Z (mtb)": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "to_black": ["BOOLEAN", {"default": true}], "threshold": ["FLOAT", {"default": 0.5, "step": 0.01, "min": 0.0, "max": 1.0}], "invert": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "depth", "to_black", "threshold", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Filter Z (mtb)", "display_name": "Filter Z (mtb)", "description": "# Filter Z\nFilters an image based on a depth map\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/filters", "output_node": false}, "Face Swap (mtb)": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "faces_index": ["STRING", {"default": "0"}], "faceanalysis_model": ["FACE_ANALYSIS_MODEL", {"default": "None"}], "faceswap_model": ["FACESWAP_MODEL", {"default": "None"}]}, "optional": {"preserve_alpha": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "reference", "faces_index", "faceanalysis_model", "faceswap_model"], "optional": ["preserve_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Face Swap (mtb)", "display_name": "Face Swap (mtb)", "description": "# Face Swap\nFace swap using deepinsight/insightface models\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Load Face Swap Model (mtb)": {"input": {"required": {"faceswap_model": [[], {"default": "None"}]}}, "input_order": {"required": ["faceswap_model"]}, "output": ["FACESWAP_MODEL"], "output_is_list": [false], "output_name": ["FACESWAP_MODEL"], "name": "Load Face Swap Model (mtb)", "display_name": "Load Face Swap Model (mtb)", "description": "# Load Face Swap Model\n\nLoads a faceswap model\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Load Face Analysis Model (mtb)": {"input": {"required": {"faceswap_model": [["antelopev2", "buffalo_l", "buffalo_m", "buffalo_sc"], {"default": "buffalo_l"}]}}, "input_order": {"required": ["faceswap_model"]}, "output": ["FACE_ANALYSIS_MODEL"], "output_is_list": [false], "output_name": ["FACE_ANALYSIS_MODEL"], "name": "Load Face Analysis Model (mtb)", "display_name": "Load Face Analysis Model (mtb)", "description": "# Load Face Analysis\n\nLoads a face analysis model\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Restore Face (mtb)": {"input": {"required": {"image": ["IMAGE"], "model": ["FACEENHANCE_MODEL"], "aligned": ["BOOLEAN", {"default": false}], "only_center_face": ["BOOLEAN", {"default": false}], "weight": ["FLOAT", {"default": 0.5}], "save_tmp_steps": ["BOOLEAN", {"default": true}]}, "optional": {"preserve_alpha": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "model", "aligned", "only_center_face", "weight", "save_tmp_steps"], "optional": ["preserve_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Restore Face (mtb)", "display_name": "Restore Face (mtb)", "description": "# Restore Face\nUses GFPGan to restore faces\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Load Face Enhance Model (mtb)": {"input": {"required": {"model_name": [[], {"default": "None"}], "upscale": ["INT", {"default": 1}]}, "optional": {"bg_upsampler": ["UPSCALE_MODEL", {"default": null}]}}, "input_order": {"required": ["model_name", "upscale"], "optional": ["bg_upsampler"]}, "output": ["FACEENHANCE_MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "Load Face Enhance Model (mtb)", "display_name": "Load Face Enhance Model (mtb)", "description": "# Load Face Enhance Model\n\nLoads a GFPGan or RestoreFormer model for face enhancement.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Deep Bump (mtb)": {"input": {"required": {"image": ["IMAGE"], "mode": [["Color to Normals", "Normals to Curvature", "Normals to Height"]], "color_to_normals_overlap": [["SMALL", "MEDIUM", "LARGE"]], "normals_to_curvature_blur_radius": [["SMALLEST", "SMALLER", "SMALL", "MEDIUM", "LARGE", "LARGER", "LARGEST"]], "normals_to_height_seamless": ["BOOLEAN", {"default": true}]}, "optional": {"auto_download": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "mode", "color_to_normals_overlap", "normals_to_curvature_blur_radius", "normals_to_height_seamless"], "optional": ["auto_download"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Deep Bump (mtb)", "display_name": "Deep Bump (mtb)", "description": "# Deep Bump\n\nThis node uses the [deep bump](https://github.com/HugoTini/DeepBump) model (GPLv3).\nThe 3 inference modes (color -> normals, normals -> curvature, normals -> depth) are all baked into a single node with a dropdown to select the operation.\nSome inputs are only used in some context, UX could be better.\nThe inputs are self explanatory, but you should probably experiment a bit with it since inference is quite fast. One thing to be sure is to tick `normals_to_height_seamless` when the input is seamless, see below for more infos.\n\nThis example is available in the [base examples list](https://github.com/melMass/comfy_mtb/wiki/Examples). In the example we also use the [Model Patch Seamless](nodes-model-patch-seamless) node in order to have non repeating, tileable textures\n| workflow | This is the output textures from the workflow applied to a tessellated mesh in blender | \n| - | - |\n|![](https://user-images.githubusercontent.com/7041726/272970715-7e4477f6-8e18-4839-9864-83d07d6690a1.png)| ![](https://user-images.githubusercontent.com/7041726/272970506-9db516b5-45d2-4389-b904-b3a94660f24c.png) |", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/textures", "output_node": false}, "Debug (mtb)": {"input": {"required": {"output_to_console": ["BOOLEAN", {"default": false}]}, "optional": {"as_detailed_types": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["output_to_console"], "optional": ["as_detailed_types"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Debug (mtb)", "display_name": "Debug (mtb)", "description": "# Debug\n\nThis node is basically trying to provide informations about any input types supported by Comfy.\nIt uses the [dynamic inputs](web-dynamic-inputs) concept used across a few of the mtb nodes.\nIt specifically handles a few types and fallback to string representation for the others.\n\n![debug](https://github.com/melMass/comfy_mtb/assets/7041726/e20b5379-b5bf-4e2f-8d4c-c79f217d7f8d)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/debug", "output_node": true}, "Save Tensors (mtb)": {"input": {"required": {"filename_prefix": ["STRING", {"default": "ComfyPickle"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"], "latent": ["LATENT"]}}, "input_order": {"required": ["filename_prefix"], "optional": ["image", "mask", "latent"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Tensors (mtb)", "display_name": "Save Tensors (mtb)", "description": "# Save Tensors\nSave torch tensors (image, mask or latent) to disk.\nuseful to debug things outside comfy like in notebooks.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/debug", "output_node": true}, "Curve (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE"]}}, "input_order": {"required": ["curve"]}, "output": ["FLOAT_CURVE"], "output_is_list": [false], "output_name": ["FLOAT_CURVE"], "name": "Curve (mtb)", "display_name": "Curve (mtb)", "description": "# Curve\n\n*WIP*\nA basic FLOAT_CURVE input node.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/curve", "output_node": false}, "Curve To Float (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE", {"forceInput": true}], "steps": ["INT", {"default": 10, "min": 2}]}}, "input_order": {"required": ["curve", "steps"]}, "output": ["FLOATS", "FLOAT"], "output_is_list": [false, false], "output_name": ["FLOATS", "FLOAT"], "name": "Curve To Float (mtb)", "display_name": "Curve To Float (mtb)", "description": "Convert a FLOAT_CURVE to a FLOAT or FLOATS", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/curve", "output_node": false}, "Bbox From Mask (mtb)": {"input": {"required": {"mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["mask", "invert"], "optional": ["image"]}, "output": ["BBOX", "IMAGE"], "output_is_list": [false, false], "output_name": ["bbox", "image (optional)"], "name": "Bbox From Mask (mtb)", "display_name": "Bbox From Mask (mtb)", "description": "# BBox from Mask\n\nFrom a mask extract the bounding box\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Bbox (mtb)": {"input": {"required": {"x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["x", "y", "width", "height"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Bbox (mtb)", "display_name": "Bbox (mtb)", "description": "# BBox\n\nThe bounding box (BBOX) custom type used by other nodes\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Crop (mtb)": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"mask": ["MASK"], "x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bbox": ["BBOX"]}}, "input_order": {"required": ["image"], "optional": ["mask", "x", "y", "width", "height", "bbox"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "BBOX"], "name": "Crop (mtb)", "display_name": "Crop (mtb)", "description": "# Crop\n\nCrops an image and an optional mask to a given bounding box\n\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Uncrop (mtb)": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "bbox": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "crop_image", "bbox", "border_blending"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Uncrop (mtb)", "display_name": "Uncrop (mtb)", "description": "# Uncrop\nUncrops an image to a given bounding box\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Split Bbox (mtb)": {"input": {"required": {"bbox": ["BBOX"]}}, "input_order": {"required": ["bbox"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["x", "y", "width", "height"], "name": "Split Bbox (mtb)", "display_name": "Split Bbox (mtb)", "description": "Split the components of a bbox", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Upscale Bbox By (mtb)": {"input": {"required": {"bbox": ["BBOX"], "scale": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["bbox", "scale"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Upscale Bbox By (mtb)", "display_name": "Upscale Bbox By (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "BBox Force Dimensions (mtb)": {"input": {"required": {"bbox": ["BBOX"], "width": ["INT", {"default": 512, "min": 1, "max": 8192}], "height": ["INT", {"default": 512, "min": 1, "max": 8192}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["bbox", "width", "height"], "optional": ["image"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "BBox Force Dimensions (mtb)", "display_name": "BBox Force Dimensions (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Smart Step (mtb)": {"input": {"required": {"step": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "start_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "end_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["step", "start_percent", "end_percent"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["step", "start", "end"], "name": "Smart Step (mtb)", "display_name": "Smart Step (mtb)", "description": "# Smart Step\n\nUtils to control the steps start/stop of the KAdvancedSampler in percentage\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Styles Loader (mtb)": {"input": {"required": {"style_name": [["name", "\u274cLow Token", "\u2705Line Art / Manga"]]}}, "input_order": {"required": ["style_name"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Styles Loader (mtb)", "display_name": "Styles Loader (mtb)", "description": "# Styles Loader\n\nThis node uses the same logic as the A111 styles csv.  \nThe first column is the name, the second the positive, the third the negative.  \nA sample [styles.csv](https://github.com/melMass/comfy_mtb/blob/main/styles.csv) gets installed on first run.\n\n> **Note**\n> Some styles can have empty columns, for instance I personally use distinct ones for positive and negatives, so be sure to wire the right output.\n\n## Extract Styles\nIt's sometime useful to be able to directly act on the content of a given style, for that an option was added to the context menu of that node to.. extract the styles to plain text inputs:  \n![extract](https://github.com/melMass/comfy_mtb/assets/7041726/c068d770-d5a8-4078-bc3c-20bb6533e42d)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Interpolate Clip Sequential (mtb)": {"input": {"required": {"base_text": ["STRING", {"multiline": true}], "text_to_replace": ["STRING", {"default": ""}], "clip": ["CLIP"], "interpolation_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["base_text", "text_to_replace", "clip", "interpolation_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Interpolate Clip Sequential (mtb)", "display_name": "Interpolate Clip Sequential (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Interpolate Condition (mtb)": {"input": {"required": {"blend": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["blend"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Interpolate Condition (mtb)", "display_name": "Interpolate Condition (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Batch2d Transform (mtb)": {"input": {"required": {"image": ["IMAGE"], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}, "optional": {"x": ["FLOATS"], "y": ["FLOATS"], "zoom": ["FLOATS"], "angle": ["FLOATS"], "shear": ["FLOATS"], "use_normalized": ["BOOLEAN", {"default": false, "tooltip": "If true, transform values will be scaled to image dimensions."}]}}, "input_order": {"required": ["image", "border_handling", "constant_color"], "optional": ["x", "y", "zoom", "angle", "shear", "use_normalized"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch2d Transform (mtb)", "display_name": "Batch2d Transform (mtb)", "description": "# Batch Transform\n\nTransform a batch of images using a batch of keyframes\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float (mtb)": {"input": {"required": {"mode": [["Single", "Steps"], {"default": "Steps"}], "count": ["INT", {"default": 2}], "min": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "max": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["mode", "count", "min", "max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float (mtb)", "display_name": "Batch Float (mtb)", "description": "# Batch Float\n\nGenerates a batch of float values with interpolation\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Assemble (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["reverse"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Assemble (mtb)", "display_name": "Batch Float Assemble (mtb)", "description": "# Batch Float Assemble\n\nAssembles mutiple batches of floats into a single stream (batch)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fill (mtb)": {"input": {"required": {"floats": ["FLOATS"], "direction": [["head", "tail"], {"default": "tail"}], "value": ["FLOAT", {"default": 0.0}], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["floats", "direction", "value", "count"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fill (mtb)", "display_name": "Batch Float Fill (mtb)", "description": "# Batch Float Fill\n\nFills a batch float with a single value until it reaches the target length\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fit (mtb)": {"input": {"required": {"values": ["FLOATS", {"forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "auto_compute_source": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["values", "clamp", "auto_compute_source", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fit (mtb)", "display_name": "Batch Float Fit (mtb)", "description": "Fit a list of floats using a source and target range", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Math (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}], "operation": [["add", "sub", "mul", "div", "pow", "abs"], {"default": "add"}]}}, "input_order": {"required": ["reverse", "operation"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Math (mtb)", "display_name": "Batch Float Math (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Batch Float Normalize (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["normalized_floats"], "name": "Batch Float Normalize (mtb)", "display_name": "Batch Float Normalize (mtb)", "description": "Normalize the values in the list of floats", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch From Folder (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true, "tooltip": "Enable or disable the node. If disabled, returns passthrough_image or an empty tensor."}], "folder_path": ["STRING", {"default": "", "tooltip": "Path to the folder containing images. Relative paths are resolved to the ComfyUI output directory."}], "mode": [["latest", "oldest", "random"], {"default": "latest", "tooltip": "How to select images: latest, oldest, or random."}], "count": ["INT", {"default": 10, "min": 1, "max": 1000, "tooltip": "Number of images to load from the folder."}], "filter": ["STRING", {"default": "*", "tooltip": "Glob filter for image filenames (e.g. *.png)."}]}, "optional": {"passthrough_image": ["IMAGE", {"tooltip": "If provided and node is disabled, this image is passed through instead of returning an empty tensor."}]}}, "input_order": {"required": ["enable", "folder_path", "mode", "count", "filter"], "optional": ["passthrough_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Batch From Folder (mtb)", "display_name": "Batch From Folder (mtb)", "description": "Load images from a folder with options for latest, oldest, or random selection.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Make (mtb)": {"input": {"required": {"image": ["IMAGE"], "count": ["INT", {"default": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "count"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Make (mtb)", "display_name": "Batch Make (mtb)", "description": "# Batch Make \n\nSimply duplicates the input frame as a batch", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Merge (mtb)": {"input": {"required": {"fusion_mode": [["add", "multiply", "average"], {"default": "average"}], "fill": [["head", "tail"], {"default": "tail"}]}}, "input_order": {"required": ["fusion_mode", "fill"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Merge (mtb)", "display_name": "Batch Merge (mtb)", "description": "# Batch Merge\n\nMerges multiple image batches with different frame counts\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Sequence (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["reverse"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Sequence (mtb)", "display_name": "Batch Sequence (mtb)", "description": "Sequences multiple image batches one after another", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Sequence Plus (mtb)": {"input": {"required": {"transition": [["none", "crossfade", "slide_left", "slide_right", "slide_up", "slide_down", "wipe_left", "wipe_right", "wipe_up", "wipe_down", "band_wipe_h", "band_wipe_v"], {"default": "none"}], "overlap_frames": ["INT", {"default": 0, "min": 0, "max": 120, "step": 1}], "reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["transition", "overlap_frames", "reverse"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Sequence Plus (mtb)", "display_name": "Batch Sequence Plus (mtb)", "description": "Sequences multiple image batches with transition effects.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Shake (mtb)": {"input": {"required": {"images": ["IMAGE"], "position_amount_x": ["FLOAT", {"default": 1.0}], "position_amount_y": ["FLOAT", {"default": 1.0}], "rotation_amount": ["FLOAT", {"default": 10.0}], "frequency": ["FLOAT", {"default": 1.0, "min": 0.005}], "frequency_divider": ["FLOAT", {"default": 1.0, "min": 0.005}], "octaves": ["INT", {"default": 1, "min": 1}], "seed": ["INT", {"default": 0}]}}, "input_order": {"required": ["images", "position_amount_x", "position_amount_y", "rotation_amount", "frequency", "frequency_divider", "octaves", "seed"]}, "output": ["IMAGE", "FLOATS", "FLOATS", "FLOATS"], "output_is_list": [false, false, false, false], "output_name": ["image", "pos_x", "pos_y", "rot"], "name": "Batch Shake (mtb)", "display_name": "Batch Shake (mtb)", "description": "# Batch Shake\n\nApplies a shaking effect to batches of images.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Shape (mtb)": {"input": {"required": {"count": ["INT", {"default": 1}], "shape": [["Box", "Circle", "Diamond", "Tube"], {"default": "Circle"}], "image_width": ["INT", {"default": 512}], "image_height": ["INT", {"default": 512}], "shape_size": ["INT", {"default": 100}], "color": ["COLOR", {"default": "#ffffff"}], "bg_color": ["COLOR", {"default": "#000000"}], "shade_color": ["COLOR", {"default": "#000000"}], "thickness": ["INT", {"default": 5}], "shadex": ["FLOAT", {"default": 0.0}], "shadey": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["count", "shape", "image_width", "image_height", "shape_size", "color", "bg_color", "shade_color", "thickness", "shadex", "shadey"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Shape (mtb)", "display_name": "Batch Shape (mtb)", "description": "# Batch Shape\n\nGenerates a batch of 2D shapes with optional shading (experimental)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Time Wrap (mtb)": {"input": {"required": {"target_count": ["INT", {"default": 25, "min": 2}], "frames": ["IMAGE"], "curve": ["FLOATS"]}}, "input_order": {"required": ["target_count", "frames", "curve"]}, "output": ["IMAGE", "FLOATS"], "output_is_list": [false, false], "output_name": ["image", "interpolated_floats"], "name": "Batch Time Wrap (mtb)", "display_name": "Batch Time Wrap (mtb)", "description": "Remap a batch using a time curve (FLOATS)", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Plot Batch Float (mtb)": {"input": {"required": {"width": ["INT", {"default": 768}], "height": ["INT", {"default": 768}], "point_size": ["INT", {"default": 4}], "seed": ["INT", {"default": 1}], "start_at_zero": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["width", "height", "point_size", "seed", "start_at_zero"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["plot"], "name": "Plot Batch Float (mtb)", "display_name": "Plot Batch Float (mtb)", "description": "# Plot `FLOATS`\nPlot FLOATS using matplotlib, each of them are drawn in a different\ncolor.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Sublist To Image Batch (mtb)": {"input": {"required": {"tensors": ["IMAGE"]}}, "input_order": {"required": ["tensors"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sublist To Image Batch (mtb)", "display_name": "Sublist To Image Batch (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "batch_processing", "output_node": false}, "Image Batch To Sublist (mtb)": {"input": {"required": {"sub_batch_size": ["INT", {"default": 1, "min": 1, "max": 1000, "step": 1}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["sub_batch_size"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK", "INT"], "output_is_list": [true, true], "output_name": ["image_list", "mask_list", "item_count"], "name": "Image Batch To Sublist (mtb)", "display_name": "Image Batch To Sublist (mtb)", "description": "\n    # Image Batch To Sublist \ud83d\udd04\n\n    Splits a large batched tensor into smaller sub-batches for memory-efficient processing.\n    ", "python_module": "custom_nodes.comfy-mtb", "category": "batch_processing", "output_node": false}, "Audio Sequence (mtb)": {"input": {"required": {"silence_duration": ["FLOAT", {"default": 0.0, "min": -999.0, "max": 999, "step": 0.01}]}}, "input_order": {"required": ["silence_duration"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["sequenced_audio"], "name": "Audio Sequence (mtb)", "display_name": "Audio Sequence (mtb)", "description": "Sequence audio inputs (dynamic inputs).\n\n    - adding silence_duration between each segment\n      can now also be negative to overlap the clips, safely bound\n      to the the input length.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Stack (mtb)": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["stacked_audio"], "name": "Audio Stack (mtb)", "display_name": "Audio Stack (mtb)", "description": "Stack/Overlay audio inputs (dynamic inputs).\n\n    - pad audios to the longest inputs.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Cut (mtb)": {"input": {"required": {"audio": ["AUDIO"], "length": ["FLOAT", {"default": 1000.0, "min": 0.0, "max": 999999.0, "step": 1}], "offset": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1}]}}, "input_order": {"required": ["audio", "length", "offset"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["cut_audio"], "name": "Audio Cut (mtb)", "display_name": "Audio Cut (mtb)", "description": "Basic audio cutter, values are in ms.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Resample (mtb)": {"input": {"required": {"audio": ["AUDIO"], "sample_rate": ["INT", {"default": 16000, "min": 1000, "max": 192000, "step": 100, "tooltip": "Target sample rate in Hz. Whisper requires 16000."}]}}, "input_order": {"required": ["audio", "sample_rate"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["resampled_audio"], "name": "Audio Resample (mtb)", "display_name": "Audio Resample (mtb)", "description": "Resample audio to a different sample rate.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Isolate Speaker (mtb)": {"input": {"required": {"audio": ["AUDIO"], "whisper_data": ["WHISPER_CHUNKS"], "target_speaker": ["STRING", {"default": "SPEAKER_00"}], "mode": [["isolate", "mute"], {"default": "isolate"}], "fade_ms": ["FLOAT", {"default": 100.0, "min": 0.0, "max": 1000.0, "step": 10, "tooltip": "Fade duration in milliseconds to avoid clicks"}]}}, "input_order": {"required": ["audio", "whisper_data", "target_speaker", "mode", "fade_ms"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["processed_audio"], "name": "Audio Isolate Speaker (mtb)", "display_name": "Audio Isolate Speaker (mtb)", "description": "Isolate or mute specific speakers using WhisperData", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Load Whisper (mtb)": {"input": {"required": {"model_size": [["tiny", "small", "medium", "medium.en", "base", "large", "large-v2", "large-v3", "large-v3-turbo"], {"default": "tiny"}]}, "optional": {"download_missing": ["BOOLEAN", {"default": false, "tooltip": "Download missing models if missing,otherwise they must be in ComfyUI/models/whisper"}]}}, "input_order": {"required": ["model_size"], "optional": ["download_missing"]}, "output": ["WHISPER_PIPELINE"], "output_is_list": [false], "output_name": ["pipeline"], "name": "Load Whisper (mtb)", "display_name": "Load Whisper (mtb)", "description": "Load Whisper model and processor.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio To Text (mtb)": {"input": {"required": {"pipeline": ["WHISPER_PIPELINE"], "audio": ["AUDIO"], "language": [["auto", "de", "en", "es", "fr", "it", "ja", "ko", "nl", "pt", "ru", "zh"], {"default": "auto"}], "return_timestamps": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["pipeline", "audio", "language", "return_timestamps"]}, "output": ["STRING", "WHISPER_OUTPUT"], "output_is_list": [false, false], "output_name": ["STRING", "WHISPER_OUTPUT"], "name": "Audio To Text (mtb)", "display_name": "Audio To Text (mtb)", "description": "Transcribe audio to text using Whisper.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Process Whisper Output (mtb)": {"input": {"required": {"whisper_output": ["WHISPER_OUTPUT"], "min_chunk_length": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["whisper_output", "min_chunk_length"]}, "output": ["STRING", "WHISPER_CHUNKS"], "output_is_list": [false, false], "output_name": ["STRING", "WHISPER_CHUNKS"], "name": "Process Whisper Output (mtb)", "display_name": "Process Whisper Output (mtb)", "description": "Process Whisper output into timestamped chunks.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Process Whisper Diarization (mtb)": {"input": {"required": {"whisper_chunks": ["WHISPER_CHUNKS"], "audio": ["AUDIO"], "backend": [["pyannote", "nemo"], {"default": "pyannote"}], "num_speakers": ["INT", {"default": 2, "min": 1, "max": 10, "step": 1}]}, "optional": {"device": [["cuda", "cpu"], {"default": "cuda"}]}}, "input_order": {"required": ["whisper_chunks", "audio", "backend", "num_speakers"], "optional": ["device"]}, "output": ["WHISPER_CHUNKS"], "output_is_list": [false], "output_name": ["WHISPER_CHUNKS"], "name": "Process Whisper Diarization (mtb)", "display_name": "Process Whisper Diarization (mtb)", "description": "Process Whisper chunks with speaker diarization using either pyannote or NeMo.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Duration (mtb)": {"input": {"required": {"audio": ["AUDIO"]}}, "input_order": {"required": ["audio"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["duration_ms"], "name": "Audio Duration (mtb)", "display_name": "Audio Duration (mtb)", "description": "Get audio duration in milliseconds.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Animation Builder (mtb)": {"input": {"required": {"total_frames": ["INT", {"default": 100, "min": 0}], "scale_float": ["FLOAT", {"default": 1.0, "min": 0.0}], "loop_count": ["INT", {"default": 1, "min": 0}], "raw_iteration": ["INT", {"default": 0, "min": 0}], "raw_loop": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["total_frames", "scale_float", "loop_count", "raw_iteration", "raw_loop"]}, "output": ["INT", "FLOAT", "INT", "BOOLEAN"], "output_is_list": [false, false, false, false], "output_name": ["frame", "0-1 (scaled)", "count", "loop_ended"], "name": "Animation Builder (mtb)", "display_name": "Animation Builder (mtb)", "description": "\n# Animation Builder\n\nCheck the\n[wiki page](https://github.com/melMass/comfy_mtb/wiki/nodes-animation-builder)\nfor more info.\n\n\n- This basic example should help to understand the meaning of\nits inputs and outputs thanks to the [debug](nodes-debug) node.\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/2b5c7e4f-372d-4494-9e73-abb2daa7cb36)\n\n- In this other example Animation Builder is used in combination with\n[Batch From History](https://github.com/melMass/comfy_mtb/wiki/nodes-batch-from-history)\nto create a zoom-in animation on a static image\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/77d37da1-0a8e-4519-a493-dfdef7f755ea)\n\n## Inputs\n\n| name | description |\n| ---- | :----------:|\n| total_frames | The number of frame to queue (this is multiplied by the `loop_count`)|\n| scale_float | Convenience input to scale the normalized `current value` (a float between 0 and 1 lerp over the current queue length) |\n| loop_count | The number of loops to queue |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/animation", "output_node": false}, "CLIPTextEncodeSDXL+": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "size_cond_factor": ["INT", {"default": 4, "min": 1, "max": 16}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": ""}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "size_cond_factor", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL+", "display_name": "\ud83d\udd27 SDXL CLIPTextEncode", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "ConditioningCombineMultiple+": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}, "optional": {"conditioning_3": ["CONDITIONING"], "conditioning_4": ["CONDITIONING"], "conditioning_5": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"], "optional": ["conditioning_3", "conditioning_4", "conditioning_5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombineMultiple+", "display_name": "\ud83d\udd27 Cond Combine Multiple", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "SD3NegativeConditioning+": {"input": {"required": {"conditioning": ["CONDITIONING"], "end": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "SD3NegativeConditioning+", "display_name": "\ud83d\udd27 SD3 Negative Conditioning", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "ImageEnhanceDifference+": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "exponent": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image1", "image2", "exponent"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEnhanceDifference+", "display_name": "\ud83d\udd27 Image Enhance Difference", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image analysis", "output_node": false}, "ImageBatchMultiple+": {"input": {"required": {"image_1": ["IMAGE"], "method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"], {"default": "lanczos"}]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"]}}, "input_order": {"required": ["image_1", "method"], "optional": ["image_2", "image_3", "image_4", "image_5"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchMultiple+", "display_name": "\ud83d\udd27 Images Batch Multiple", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageExpandBatch+": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageExpandBatch+", "display_name": "\ud83d\udd27 Image Expand Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageFromBatch+": {"input": {"required": {"image": ["IMAGE"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": -1, "min": -1, "step": 1}]}}, "input_order": {"required": ["image", "start", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch+", "display_name": "\ud83d\udd27 Image From Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageListToBatch+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToBatch+", "display_name": "\ud83d\udd27 Image List To Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageCompositeFromMaskBatch+": {"input": {"required": {"image_from": ["IMAGE"], "image_to": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image_from", "image_to", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeFromMaskBatch+", "display_name": "\ud83d\udd27 Image Composite From Mask Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageComposite+": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "offset_x", "offset_y"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageComposite+", "display_name": "\ud83d\udd27 Image Composite", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageCrop+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "position": [["top-left", "top-center", "top-right", "right-center", "bottom-right", "bottom-center", "bottom-left", "left-center", "center"]], "x_offset": ["INT", {"default": 0, "min": -99999, "step": 1}], "y_offset": ["INT", {"default": 0, "min": -99999, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "position", "x_offset", "y_offset"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "x", "y"], "name": "ImageCrop+", "display_name": "\ud83d\udd27 Image Crop", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageFlip+": {"input": {"required": {"image": ["IMAGE"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["image", "axis"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFlip+", "display_name": "\ud83d\udd27 Image Flip", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRandomTransform+": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "repeat": ["INT", {"default": 1, "min": 1, "max": 256, "step": 1}], "variation": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "seed", "repeat", "variation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRandomTransform+", "display_name": "\ud83d\udd27 Image Random Transform", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRemoveAlpha+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRemoveAlpha+", "display_name": "\ud83d\udd27 Image Remove Alpha", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImageRemoveBackground+": {"input": {"required": {"rembg_session": ["REMBG_SESSION"], "image": ["IMAGE"]}}, "input_order": {"required": ["rembg_session", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageRemoveBackground+", "display_name": "\ud83d\udd27 Image Remove Background", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageResize+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "interpolation": [["nearest", "bilinear", "bicubic", "area", "nearest-exact", "lanczos"]], "method": [["stretch", "keep proportion", "fill / crop", "pad"]], "condition": [["always", "downscale if bigger", "upscale if smaller", "if bigger area", "if smaller area"]], "multiple_of": ["INT", {"default": 0, "min": 0, "max": 512, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "interpolation", "method", "condition", "multiple_of"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResize+", "display_name": "\ud83d\udd27 Image Resize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageSeamCarving+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "energy": [["backward", "forward"]], "order": [["width-first", "height-first"]]}, "optional": {"keep_mask": ["MASK"], "drop_mask": ["MASK"]}}, "input_order": {"required": ["image", "width", "height", "energy", "order"], "optional": ["keep_mask", "drop_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSeamCarving+", "display_name": "\ud83d\udd27 Image Seam Carving", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageTile+": {"input": {"required": {"image": ["IMAGE"], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "overlap": ["FLOAT", {"default": 0, "min": 0, "max": 0.5, "step": 0.01}], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}]}}, "input_order": {"required": ["image", "rows", "cols", "overlap", "overlap_x", "overlap_y"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["IMAGE", "tile_width", "tile_height", "overlap_x", "overlap_y"], "name": "ImageTile+", "display_name": "\ud83d\udd27 Image Tile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageUntile+": {"input": {"required": {"tiles": ["IMAGE"], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}]}}, "input_order": {"required": ["tiles", "overlap_x", "overlap_y", "rows", "cols"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUntile+", "display_name": "\ud83d\udd27 Image Untile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "RemBGSession+": {"input": {"required": {"model": [["u2net: general purpose", "u2netp: lightweight general purpose", "u2net_human_seg: human segmentation", "u2net_cloth_seg: cloths Parsing", "silueta: very small u2net", "isnet-general-use: general purpose", "isnet-anime: anime illustrations", "sam: general purpose"]], "providers": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML", "Tensorrt", "Azure"]]}}, "input_order": {"required": ["model", "providers"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "RemBGSession+", "display_name": "\ud83d\udd27 RemBG Session", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "TransparentBGSession+": {"input": {"required": {"mode": [["base", "fast", "base-nightly"]], "use_jit": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mode", "use_jit"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "TransparentBGSession+", "display_name": "\ud83d\udd27 InSPyReNet TransparentBG", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageApplyLUT+": {"input": {"required": {"image": ["IMAGE"], "lut_file": [[]], "gamma_correction": ["BOOLEAN", {"default": true}], "clip_values": ["BOOLEAN", {"default": true}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "lut_file", "gamma_correction", "clip_values", "strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageApplyLUT+", "display_name": "\ud83d\udd27 Image Apply LUT", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageCASharpening+": {"input": {"required": {"image": ["IMAGE"], "amount": ["FLOAT", {"default": 0.8, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCASharpening+", "display_name": "\ud83d\udd27 Image Contrast Adaptive Sharpening", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageDesaturate+": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "method": [["luminance (Rec.709)", "luminance (Rec.601)", "average", "lightness"]]}}, "input_order": {"required": ["image", "factor", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDesaturate+", "display_name": "\ud83d\udd27 Image Desaturate", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "PixelOEPixelize+": {"input": {"required": {"image": ["IMAGE"], "downscale_mode": [["contrast", "bicubic", "nearest", "center", "k-centroid"]], "target_size": ["INT", {"default": 128, "min": 0, "max": 16384, "step": 8}], "patch_size": ["INT", {"default": 16, "min": 4, "max": 32, "step": 2}], "thickness": ["INT", {"default": 2, "min": 1, "max": 16, "step": 1}], "color_matching": ["BOOLEAN", {"default": true}], "upscale": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "downscale_mode", "target_size", "patch_size", "thickness", "color_matching", "upscale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PixelOEPixelize+", "display_name": "\ud83d\udd27 Pixelize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImagePosterize+": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePosterize+", "display_name": "\ud83d\udd27 Image Posterize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["LAB", "YCbCr", "RGB", "LUV", "YUV", "XYZ"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]], "batch_size": ["INT", {"default": 0, "min": 0, "max": 1024, "step": 1}]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "factor", "device", "batch_size"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatch+", "display_name": "\ud83d\udd27 Image Color Match", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatchAdobe+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["RGB", "LAB"]], "luminance_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "color_intensity_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "fade_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "neutralization_factor": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "luminance_factor", "color_intensity_factor", "fade_factor", "neutralization_factor", "device"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatchAdobe+", "display_name": "\ud83d\udd27 Image Color Match Adobe", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageHistogramMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "method": [["pytorch", "skimage"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "reference", "method", "factor", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageHistogramMatch+", "display_name": "\ud83d\udd27 Image Histogram Match", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "GetImageSize+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["width", "height", "count"], "name": "GetImageSize+", "display_name": "\ud83d\udd27 Get Image Size", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImageToDevice+": {"input": {"required": {"image": ["IMAGE"], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageToDevice+", "display_name": "\ud83d\udd27 Image To Device", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImagePreviewFromLatent+": {"input": {"required": {"latent": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}]}, "optional": {"image": [["none"], {"image_upload": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["latent", "vae", "tile_size"], "optional": ["image"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "MASK", "width", "height"], "name": "ImagePreviewFromLatent+", "display_name": "\ud83d\udd27 Image Preview From Latent", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": true}, "NoiseFromImage+": {"input": {"required": {"image": ["IMAGE"], "noise_strenght": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_size": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "color_noise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_scale_diff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "saturation": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.1}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "blur": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}]}, "optional": {"noise_mask": ["IMAGE"]}}, "input_order": {"required": ["image", "noise_strenght", "noise_size", "color_noise", "mask_strength", "mask_scale_diff", "mask_contrast", "saturation", "contrast", "blur"], "optional": ["noise_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NoiseFromImage+", "display_name": "\ud83d\udd27 Noise From Image", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "MaskBlur+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 6, "min": 0, "max": 256, "step": 1}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["mask", "amount", "device"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBlur+", "display_name": "\ud83d\udd27 Mask Blur", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskBoundingBox+": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}, "optional": {"image_optional": ["IMAGE"]}}, "input_order": {"required": ["mask", "padding", "blur"], "optional": ["image_optional"]}, "output": ["MASK", "IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["MASK", "IMAGE", "x", "y", "width", "height"], "name": "MaskBoundingBox+", "display_name": "\ud83d\udd27 Mask Bounding Box", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFix+": {"input": {"required": {"mask": ["MASK"], "erode_dilate": ["INT", {"default": 0, "min": -256, "max": 256, "step": 1}], "fill_holes": ["INT", {"default": 0, "min": 0, "max": 128, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "smooth": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}}, "input_order": {"required": ["mask", "erode_dilate", "fill_holes", "remove_isolated_pixels", "smooth", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFix+", "display_name": "\ud83d\udd27 Mask Fix", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFlip+": {"input": {"required": {"mask": ["MASK"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["mask", "axis"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFlip+", "display_name": "\ud83d\udd27 Mask Flip", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromColor+": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromColor+", "display_name": "\ud83d\udd27 Mask From Color", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromList+": {"input": {"required": {"width": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}]}, "optional": {"values": ["INT,FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0}], "str_values": ["STRING", {"default": "", "multiline": true, "placeholder": "0.0, 0.5, 1.0"}]}}, "input_order": {"required": ["width", "height"], "optional": ["values", "str_values"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromList+", "display_name": "\ud83d\udd27 Mask From List", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromRGBCMYBW+": {"input": {"required": {"image": ["IMAGE"], "threshold_r": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_g": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_b": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold_r", "threshold_g", "threshold_b"]}, "output": ["MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["red", "green", "blue", "cyan", "magenta", "yellow", "black", "white"], "name": "MaskFromRGBCMYBW+", "display_name": "\ud83d\udd27 Mask From RGB/CMY/BW", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromSegmentation+": {"input": {"required": {"image": ["IMAGE"], "segments": ["INT", {"default": 6, "min": 1, "max": 16, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "remove_small_masks": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "segments", "remove_isolated_pixels", "remove_small_masks", "fill_holes"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromSegmentation+", "display_name": "\ud83d\udd27 Mask From Segmentation", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskPreview+": {"input": {"required": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "MaskPreview+", "display_name": "\ud83d\udd27 Mask Preview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": true}, "MaskSmooth+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["mask", "amount"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskSmooth+", "display_name": "\ud83d\udd27 Mask Smooth", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "TransitionMask+": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "frames": ["INT", {"default": 16, "min": 1, "max": 9999, "step": 1}], "start_frame": ["INT", {"default": 0, "min": 0, "step": 1}], "end_frame": ["INT", {"default": 9999, "min": 0, "step": 1}], "transition_type": [["horizontal slide", "vertical slide", "horizontal bar", "vertical bar", "center box", "horizontal door", "vertical door", "circle", "fade"]], "timing_function": [["linear", "in", "out", "in-out"]]}}, "input_order": {"required": ["width", "height", "frames", "start_frame", "end_frame", "transition_type", "timing_function"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "TransitionMask+", "display_name": "\ud83d\udd27 Transition Mask", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskBatch+": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBatch+", "display_name": "\ud83d\udd27 Mask Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskExpandBatch+": {"input": {"required": {"mask": ["MASK"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["mask", "size", "method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskExpandBatch+", "display_name": "\ud83d\udd27 Mask Expand Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskFromBatch+": {"input": {"required": {"mask": ["MASK"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["mask", "start", "length"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromBatch+", "display_name": "\ud83d\udd27 Mask From Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "KSamplerVariationsStochastic+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}], "cfg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "noise_seed", "steps", "cfg", "sampler", "scheduler", "positive", "negative", "variation_seed", "variation_strength", "cfg_scale"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsStochastic+", "display_name": "\ud83d\udd27 KSampler Stochastic Variations", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "KSamplerVariationsWithNoise+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "main_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_strength": ["FLOAT", {"default": 0.17, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}], "variation_seed": ["INT:seed", {"default": 12345, "min": 0, "max": 18446744073709551615}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "main_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "variation_strength", "variation_seed", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsWithNoise+", "display_name": "\ud83d\udd27 KSampler Variations with Noise Injection", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "InjectLatentNoise+": {"input": {"required": {"latent": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "noise_strength": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latent", "noise_seed", "noise_strength"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectLatentNoise+", "display_name": "\ud83d\udd27 Inject Latent Noise", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "FluxSamplerParams+": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "latent_image": ["LATENT"], "noise": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "?"}], "sampler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "ipndm"}], "scheduler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "simple"}], "steps": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "20"}], "guidance": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "3.5"}], "max_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.15"}], "base_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "0.5"}], "split_sigmas": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}], "denoise": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}]}}, "input_order": {"required": ["model", "conditioning", "latent_image", "noise", "sampler", "scheduler", "steps", "guidance", "max_shift", "base_shift", "split_sigmas", "denoise"]}, "output": ["LATENT", "SAMPLER_PARAMS"], "output_is_list": [false, false], "output_name": ["latent", "params"], "name": "FluxSamplerParams+", "display_name": "\ud83d\udd27 Flux Sampler Parameters", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "PlotParameters+": {"input": {"required": {"images": ["IMAGE"], "params": ["SAMPLER_PARAMS"], "order_by": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler"]], "cols_value": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler"]], "cols_num": ["INT", {"default": -1, "min": -1, "max": 1024}]}}, "input_order": {"required": ["images", "params", "order_by", "cols_value", "cols_num"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PlotParameters+", "display_name": "\ud83d\udd27 Plot Sampler Parameters", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "ApplyCLIPSeg+": {"input": {"required": {"clip_seg": ["CLIP_SEG"], "image": ["IMAGE"], "prompt": ["STRING", {"multiline": false, "default": ""}], "threshold": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.05}], "smooth": ["INT", {"default": 9, "min": 0, "max": 32, "step": 1}], "dilate": ["INT", {"default": 0, "min": -32, "max": 32, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["clip_seg", "image", "prompt", "threshold", "smooth", "dilate", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ApplyCLIPSeg+", "display_name": "\ud83d\udd27 Apply CLIPSeg", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/segmentation", "output_node": false}, "LoadCLIPSegModels+": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CLIP_SEG"], "output_is_list": [false], "output_name": ["CLIP_SEG"], "name": "LoadCLIPSegModels+", "display_name": "\ud83d\udd27 Load CLIPSeg Models", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/segmentation", "output_node": false}, "DrawText+": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "Hello, World!"}], "font": [["ShareTechMono-Regular.ttf"]], "size": ["INT", {"default": 56, "min": 1, "max": 9999, "step": 1}], "color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "background_color": ["STRING", {"multiline": false, "default": "#00000000"}], "shadow_distance": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"multiline": false, "default": "#000000"}], "horizontal_align": [["left", "center", "right"]], "vertical_align": [["top", "center", "bottom"]], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}]}, "optional": {"img_composite": ["IMAGE"]}}, "input_order": {"required": ["text", "font", "size", "color", "background_color", "shadow_distance", "shadow_blur", "shadow_color", "horizontal_align", "vertical_align", "offset_x", "offset_y"], "optional": ["img_composite"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "DrawText+", "display_name": "\ud83d\udd27 Draw Text", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/text", "output_node": false}, "BatchCount+": {"input": {"required": {"batch": ["*", {}]}}, "input_order": {"required": ["batch"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "BatchCount+", "display_name": "\ud83d\udd27 Batch Count", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "ConsoleDebug+": {"input": {"required": {"value": ["*", {}]}, "optional": {"prefix": ["STRING", {"multiline": false, "default": "Value:"}]}}, "input_order": {"required": ["value"], "optional": ["prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ConsoleDebug+", "display_name": "\ud83d\udd27 Console Debug", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": true}, "DebugTensorShape+": {"input": {"required": {"tensor": ["*", {}]}}, "input_order": {"required": ["tensor"]}, "output": [], "output_is_list": [], "output_name": [], "name": "DebugTensorShape+", "display_name": "\ud83d\udd27 Debug Tensor Shape", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": true}, "ModelCompile+": {"input": {"required": {"model": ["MODEL"], "fullgraph": ["BOOLEAN", {"default": false}], "dynamic": ["BOOLEAN", {"default": false}], "mode": [["default", "reduce-overhead", "max-autotune", "max-autotune-no-cudagraphs"]]}}, "input_order": {"required": ["model", "fullgraph", "dynamic", "mode"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelCompile+", "display_name": "\ud83d\udd27 Model Compile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "RemoveLatentMask+": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RemoveLatentMask+", "display_name": "\ud83d\udd27 Remove Latent Mask", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "SDXLEmptyLatentSizePicker+": {"input": {"required": {"resolution": [["704x1408 (0.5)", "704x1344 (0.52)", "768x1344 (0.57)", "768x1280 (0.6)", "832x1216 (0.68)", "832x1152 (0.72)", "896x1152 (0.78)", "896x1088 (0.82)", "960x1088 (0.88)", "960x1024 (0.94)", "1024x1024 (1.0)", "1024x960 (1.07)", "1088x960 (1.13)", "1088x896 (1.21)", "1152x896 (1.29)", "1152x832 (1.38)", "1216x832 (1.46)", "1280x768 (1.67)", "1344x768 (1.75)", "1344x704 (1.91)", "1408x704 (2.0)", "1472x704 (2.09)", "1536x640 (2.4)", "1600x640 (2.5)", "1664x576 (2.89)", "1728x576 (3.0)"], {"default": "1024x1024 (1.0)"}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "width_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "height_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["resolution", "batch_size", "width_override", "height_override"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "width", "height"], "name": "SDXLEmptyLatentSizePicker+", "display_name": "\ud83d\udd27 SDXL Empty Latent Size Picker", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMath+": {"input": {"optional": {"a": ["INT,FLOAT", {"default": 0.0, "step": 0.1}], "b": ["INT,FLOAT", {"default": 0.0, "step": 0.1}]}, "required": {"value": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"optional": ["a", "b"], "required": ["value"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "SimpleMath+", "display_name": "\ud83d\udd27 Simple Math", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "CR Image Output": {"input": {"required": {"images": ["IMAGE"], "output_type": [["Preview", "Save", "UI (no batch)"]], "filename_prefix": ["STRING", {"default": "CR"}], "prefix_presets": [["None", "yyyyMMdd"]], "file_format": [["png", "jpg", "webp", "tif"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "output_type", "filename_prefix", "prefix_presets", "file_format"], "hidden": ["prompt", "extra_pnginfo"], "optional": ["trigger"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["trigger"], "name": "CR Image Output", "display_name": "\ud83d\udcbe CR Image Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Latent Batch Size": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}]}}, "input_order": {"required": ["latent", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CR Latent Batch Size", "display_name": "\u2699\ufe0f CR Latent Batch Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Conditioning Mixer": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "mix_method": [["Combine", "Average", "Concatenate"]], "average_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_1", "conditioning_2", "mix_method", "average_strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Mixer", "display_name": "\u2699\ufe0f CR Conditioning Mixer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Select Model": {"input": {"required": {"ckpt_name1": [["None"]], "ckpt_name2": [["None"]], "ckpt_name3": [["None"]], "ckpt_name4": [["None"]], "ckpt_name5": [["None"]], "select_model": ["INT", {"default": 1, "min": 1, "max": 5}]}}, "input_order": {"required": ["ckpt_name1", "ckpt_name2", "ckpt_name3", "ckpt_name4", "ckpt_name5", "select_model"]}, "output": ["MODEL", "CLIP", "VAE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "ckpt_name", "show_help"], "name": "CR Select Model", "display_name": "\ud83d\udd2e CR Select Model", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["seed", "show_help"], "name": "CR Seed", "display_name": "\ud83c\udf31 CR Seed", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Prompt Text": {"input": {"required": {"prompt": ["STRING", {"default": "prompt", "multiline": true}]}}, "input_order": {"required": ["prompt"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Prompt Text", "display_name": "\u2699\ufe0f CR Prompt Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Combine Prompt": {"input": {"required": {}, "optional": {"part1": ["STRING", {"default": "", "multiline": true}], "part2": ["STRING", {"default": "", "multiline": true}], "part3": ["STRING", {"default": "", "multiline": true}], "part4": ["STRING", {"default": "", "multiline": true}], "separator": ["STRING", {"default": ",", "multiline": false}]}}, "input_order": {"required": [], "optional": ["part1", "part2", "part3", "part4", "separator"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Combine Prompt", "display_name": "\u2699\ufe0f CR Combine Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR VAE Decode": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tiled": ["BOOLEAN", {"default": false}], "circular": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["samples", "vae", "tiled", "circular"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR VAE Decode", "display_name": "\u2699\ufe0f CR VAE Decode", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Text List": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": "text"}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["multiline_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Text List", "display_name": "\ud83d\udcdc CR Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Prompt List": {"input": {"required": {"prepend_text": ["STRING", {"multiline": false, "default": ""}], "multiline_text": ["STRING", {"multiline": true, "default": "body_text"}], "append_text": ["STRING", {"multiline": false, "default": ""}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["prepend_text", "multiline_text", "append_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [true, true, false], "output_name": ["prompt", "body_text", "show_help"], "name": "CR Prompt List", "display_name": "\ud83d\udcdc CR Prompt List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Simple List": {"input": {"required": {"list_values": ["STRING", {"multiline": true, "default": "text"}]}}, "input_order": {"required": ["list_values"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Simple List", "display_name": "\ud83d\udcdc CR Simple List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Float Range List": {"input": {"required": {"start": ["FLOAT", {"default": 0.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "end": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "step": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "operation": [["none", "sin", "cos", "tan"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}], "ignore_first_value": ["BOOLEAN", {"default": true}], "max_values_per_loop": ["INT", {"default": 128, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "operation", "decimal_places", "ignore_first_value", "max_values_per_loop", "loops", "ping_pong"]}, "output": ["FLOAT", "STRING"], "output_is_list": [true, false], "output_name": ["FLOAT", "show_help"], "name": "CR Float Range List", "display_name": "\ud83d\udcdc CR Float Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Integer Range List": {"input": {"required": {"start": ["INT", {"default": 0, "min": -99999, "max": 99999}], "end": ["INT", {"default": 0, "min": -99999, "max": 99999}], "step": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "loops", "ping_pong"]}, "output": ["INT", "STRING"], "output_is_list": [true, false], "output_name": ["INT", "show_help"], "name": "CR Integer Range List", "display_name": "\ud83d\udcdc CR Integer Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Text List": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Load Text List", "display_name": "\ud83d\udcdc CR Load Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Binary To Bit List": {"input": {"required": {"bit_string": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["bit_string"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Binary To Bit List", "display_name": "\ud83d\udcdc CR Binary To Bit List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Text Cycler": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["text", "repeats", "loops"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_text"], "name": "CR Text Cycler", "display_name": "\ud83d\udcdc CR Text Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Value Cycler": {"input": {"required": {"values": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["values", "repeats", "loops"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [true, true, false], "output_name": ["FLOAT", "INT", "show_text"], "name": "CR Value Cycler", "display_name": "\ud83d\udcdc CR Value Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Image List": {"input": {"required": {"input_folder": [["3d", "clipspace", "pasted"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 9999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "STRING"], "output_is_list": [true, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Image List", "display_name": "\u2328\ufe0f CR Load Image List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load Image List Plus": {"input": {"required": {"input_folder": [["3d", "clipspace", "pasted"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "INT", "STRING", "INT", "INT", "INT", "STRING"], "output_is_list": [true, true, true, true, false, false, false, false], "output_name": ["IMAGE", "MASK", "index", "filename", "width", "height", "list_length", "show_help"], "name": "CR Load Image List Plus", "display_name": "\u2328\ufe0f CR Load Image List Plus", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load GIF As List": {"input": {"required": {"input_folder": [["3d", "clipspace", "pasted"]], "gif_filename": ["STRING", {"multiline": false, "default": "text"}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "gif_filename", "start_frame", "max_frames"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [true, true, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Load GIF As List", "display_name": "\u2328\ufe0f CR Load GIF As List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Font File List": {"input": {"required": {"source_folder": [["system", "Comfyroll", "from folder"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}, "optional": {"folder_path": ["STRING", {"default": "C:\\Windows\\Fonts", "multiline": false}]}}, "input_order": {"required": ["source_folder", "start_index", "max_rows"], "optional": ["folder_path"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Font File List", "display_name": "\u2328\ufe0f CR Font File List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Batch Images From List": {"input": {"required": {"image_list": ["IMAGE"]}}, "input_order": {"required": ["image_list"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image_batch", "show_help"], "name": "CR Batch Images From List", "display_name": "\ud83d\udee0\ufe0f CR Batch Images From List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Intertwine Lists": {"input": {"required": {"list1": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "list2": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}}, "input_order": {"required": ["list1", "list2"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Intertwine Lists", "display_name": "\ud83d\udee0\ufe0f CR Intertwine Lists", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Repeater": {"input": {"required": {"input_data": ["*"], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["input_data", "repeats"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["list", "show_help"], "name": "CR Repeater", "display_name": "\ud83d\udee0\ufe0f CR Repeater", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR XY Product": {"input": {"required": {"text_x": ["STRING", {"multiline": true}], "text_y": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text_x", "text_y"]}, "output": ["*", "*", "STRING"], "output_is_list": [true, true, false], "output_name": ["x_values", "y_values", "show_help"], "name": "CR XY Product", "display_name": "\ud83d\udee0\ufe0f CR XY Product", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Text List To String": {"input": {"required": {"text_list": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text_list"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text List To String", "display_name": "\ud83d\udee0\ufe0f CR Text List To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR SD1.5 Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 8192}], "height": ["INT", {"default": 512, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 512x512", "1:1 square 1024x1024", "2:3 portrait 512x768", "3:4 portrait 512x682", "3:2 landscape 768x512", "4:3 landscape 682x512", "16:9 cinema 910x512", "1.85:1 cinema 952x512", "2:1 cinema 1024x512", "2.39:1 anamorphic 1224x512"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SD1.5 Aspect Ratio", "display_name": "\ud83d\udd33 CR SD1.5 Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR SDXL Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SDXL Aspect Ratio", "display_name": "\ud83d\udd33 CR SDXL Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "SD1.5 - 1:1 square 512x512", "SD1.5 - 2:3 portrait 512x768", "SD1.5 - 3:4 portrait 512x682", "SD1.5 - 3:2 landscape 768x512", "SD1.5 - 4:3 landscape 682x512", "SD1.5 - 16:9 cinema 910x512", "SD1.5 - 1.85:1 cinema 952x512", "SD1.5 - 2:1 cinema 1024x512", "SDXL - 1:1 square 1024x1024", "SDXL - 3:4 portrait 896x1152", "SDXL - 5:8 portrait 832x1216", "SDXL - 9:16 portrait 768x1344", "SDXL - 9:21 portrait 640x1536", "SDXL - 4:3 landscape 1152x896", "SDXL - 3:2 landscape 1216x832", "SDXL - 16:9 landscape 1344x768", "SDXL - 21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio", "display_name": "\ud83d\udd33 CR Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Banners": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Large Rectangle - 336x280", "Medium Rectangle - 300x250", "Small Rectangle - 180x150", "Square - 250x250", "Small Square - 200x200", "Button - 125x125", "Half Page - 300x600", "Vertical Banner - 120x240", "Wide Skyscraper - 160x600", "Skyscraper - 120x600", "Billboard - 970x250", "Portrait - 300x1050", "Banner - 468x60", "Leaderboard - 728x90"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Banners", "display_name": "\ud83d\udd33 CR Aspect Ratio Banners", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Social Media": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Instagram Portrait - 1080x1350", "Instagram Square - 1080x1080", "Instagram Landscape - 1080x608", "Instagram Stories/Reels - 1080x1920", "Facebook Landscape - 1080x1350", "Facebook Marketplace - 1200x1200", "Facebook Stories - 1080x1920", "TikTok - 1080x1920", "YouTube Banner - 2560\u00d71440", "LinkedIn Profile Banner - 1584x396", "LinkedIn Page Cover - 1128x191", "LinkedIn Post - 1200x627", "Pinterest Pin Image - 1000x1500", "CivitAI Cover - 1600x400", "OpenArt App - 1500x1000"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Social Media", "display_name": "\ud83d\udd33 CR Aspect Ratio Social Media", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR_Aspect Ratio For Print": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472", "Letter (8.5 x 11 inches) - 2550x3300", "Legal (8.5 x 14 inches) - 2550x4200"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR_Aspect Ratio For Print", "display_name": "\ud83d\udd33 CR_Aspect Ratio For Print", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Image Size": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": ["width", "height", "upscale_factor"]}, "output": ["INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["Width", "Height", "upscale_factor", "show_help"], "name": "CR Image Size", "display_name": "CR Image Size (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Aspect Ratio SDXL": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 2048}], "height": ["INT", {"default": 1024, "min": 64, "max": 2048}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor1": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "upscale_factor2": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor1", "upscale_factor2", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["INT", "INT", "FLOAT", "FLOAT", "INT", "show_help"], "name": "CR Aspect Ratio SDXL", "display_name": "CR Aspect Ratio SDXL (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR SDXL Prompt Mixer": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "BASE_POSITIVE"}], "prompt_negative": ["STRING", {"multiline": true, "default": "BASE_NEGATIVE"}], "style_positive": ["STRING", {"multiline": true, "default": "REFINER_POSTIVE"}], "style_negative": ["STRING", {"multiline": true, "default": "REFINER_NEGATIVE"}], "preset": [["preset 1", "preset 2", "preset 3", "preset 4", "preset 5"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r"], "name": "CR SDXL Prompt Mixer", "display_name": "CR SDXL Prompt Mixer (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Seed to Int": {"input": {"required": {"seed": ["SEED"]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Seed to Int", "display_name": "CR Seed to Int (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Apply ControlNet": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "switch": [["On", "Off"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "switch", "strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Apply ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Multi-ControlNet Stack": {"input": {"required": {}, "optional": {"switch_1": [["Off", "On"]], "controlnet_1": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"]], "controlnet_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_2": [["Off", "On"]], "controlnet_2": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"]], "controlnet_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_3": [["Off", "On"]], "controlnet_3": [["None", "ControlNetModel/diffusion_pytorch_model.safetensors"]], "controlnet_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": [], "optional": ["switch_1", "controlnet_1", "controlnet_strength_1", "start_percent_1", "end_percent_1", "switch_2", "controlnet_2", "controlnet_strength_2", "start_percent_2", "end_percent_2", "switch_3", "controlnet_3", "controlnet_strength_3", "start_percent_3", "end_percent_3", "image_1", "image_2", "image_3", "controlnet_stack"]}, "output": ["CONTROL_NET_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROLNET_STACK", "show_help"], "name": "CR Multi-ControlNet Stack", "display_name": "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Apply Multi-ControlNet": {"input": {"required": {"base_positive": ["CONDITIONING"], "base_negative": ["CONDITIONING"], "switch": [["Off", "On"]], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["base_positive", "base_negative", "switch", "controlnet_stack"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_pos", "base_neg", "show_help"], "name": "CR Apply Multi-ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Load LoRA": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "switch": [["On", "Off"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "switch", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load LoRA", "display_name": "\ud83d\udc8a CR Load LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR LoRA Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "lora_name_1": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_2": [["Off", "On"]], "lora_name_2": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_3": [["Off", "On"]], "lora_name_3": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["switch_1", "lora_name_1", "model_weight_1", "clip_weight_1", "switch_2", "lora_name_2", "model_weight_2", "clip_weight_2", "switch_3", "lora_name_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_STACK", "show_help"], "name": "CR LoRA Stack", "display_name": "\ud83d\udc8a CR LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random LoRA Stack": {"input": {"required": {"exclusive_mode": [["Off", "On"]], "stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name_1": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "switch_1": [["Off", "On"]], "chance_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "switch_2": [["Off", "On"]], "chance_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "switch_3": [["Off", "On"]], "chance_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["exclusive_mode", "stride", "force_randomize_after_stride", "lora_name_1", "switch_1", "chance_1", "model_weight_1", "clip_weight_1", "lora_name_2", "switch_2", "chance_2", "model_weight_2", "clip_weight_2", "lora_name_3", "switch_3", "chance_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random LoRA Stack", "display_name": "\ud83d\udc8a CR Random LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random Weight LoRA": {"input": {"required": {"stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "switch": [["Off", "On"]], "weight_min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.01}], "weight_max": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["stride", "force_randomize_after_stride", "lora_name", "switch", "weight_min", "weight_max", "clip_weight"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random Weight LoRA", "display_name": "\ud83d\udc8a CR Random Weight LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply LoRA Stack": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["model", "clip", "lora_stack"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Apply LoRA Stack", "display_name": "\ud83d\udc8a CR Apply LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply Model Merge": {"input": {"required": {"model_stack": ["MODEL_STACK"], "merge_method": [["Recursive", "Weighted"]], "normalise_ratios": [["Yes", "No"]], "weight_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_stack", "merge_method", "normalise_ratios", "weight_factor"]}, "output": ["MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "model_mix_info", "show_help"], "name": "CR Apply Model Merge", "display_name": "\u26cf\ufe0f CR Apply Model Merge", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Model Merge Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "ckpt_name1": [["None"]], "model_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_2": [["Off", "On"]], "ckpt_name2": [["None"]], "model_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_3": [["Off", "On"]], "ckpt_name3": [["None"]], "model_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}, "optional": {"model_stack": ["MODEL_STACK"]}}, "input_order": {"required": ["switch_1", "ckpt_name1", "model_ratio1", "clip_ratio1", "switch_2", "ckpt_name2", "model_ratio2", "clip_ratio2", "switch_3", "ckpt_name3", "model_ratio3", "clip_ratio3"], "optional": ["model_stack"]}, "output": ["MODEL_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_STACK", "show_help"], "name": "CR Model Merge Stack", "display_name": "\u26cf\ufe0f CR Model Merge Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Data Bus In": {"input": {"required": {}, "optional": {"pipe": ["*"], "any1": ["*"], "any2": ["*"], "any3": ["*"], "any4": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "any1", "any2", "any3", "any4"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Data Bus In", "display_name": "\ud83d\ude8c CR Data Bus In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Data Bus Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "any1", "any2", "any3", "any4", "show_help"], "name": "CR Data Bus Out", "display_name": "\ud83d\ude8c CR Data Bus Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel In": {"input": {"required": {}, "optional": {"pipe": ["*"], "ch1": ["*"], "ch2": ["*"], "ch3": ["*"], "ch4": ["*"], "ch5": ["*"], "ch6": ["*"], "ch7": ["*"], "ch8": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR 8 Channel In", "display_name": "\ud83d\ude8c CR 8 Channel In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8", "show_help"], "name": "CR 8 Channel Out", "display_name": "\ud83d\ude8c CR 8 Channel Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Module Pipe Loader": {"input": {"required": {}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": [], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Pipe Loader", "display_name": "\u2708\ufe0f CR Module Pipe Loader", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Input": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "CONTROL_NET", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed", "show_help"], "name": "CR Module Input", "display_name": "\u2708\ufe0f CR Module Input", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Output": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["pipe"], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Output", "display_name": "\u2708\ufe0f CR Module Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Image Pipe In": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": [], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe In", "display_name": "\ud83d\udee9 CR Image Pipe In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Edit": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "height": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000, "forceInput": true}]}}, "input_order": {"required": ["pipe"], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe Edit", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Edit", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "IMAGE", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "image", "width", "height", "upscale_factor", "show_help"], "name": "CR Image Pipe Out", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Pipe Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "pipe1": ["PIPE_LINE"], "pipe2": ["PIPE_LINE"]}}, "input_order": {"required": ["Input", "pipe1", "pipe2"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["PIPE_LINE", "show_help"], "name": "CR Pipe Switch", "display_name": "\ud83d\udd00\ufe0f CR Pipe Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe", "output_node": true}, "CR SDXL Prompt Mix Presets": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "prompt_pos"}], "prompt_negative": ["STRING", {"multiline": true, "default": "prompt_neg"}], "style_positive": ["STRING", {"multiline": true, "default": "style_pos"}], "style_negative": ["STRING", {"multiline": true, "default": "style_neg"}], "preset": [["default with no style text", "default with style text", "style boost 1", "style boost 2", "style text to refiner"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r", "show_help"], "name": "CR SDXL Prompt Mix Presets", "display_name": "\ud83c\udf1f CR SDXL Prompt Mix Presets", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Style Text": {"input": {"required": {"positive_style": ["STRING", {"default": "POS_STYLE", "multiline": true}], "negative_style": ["STRING", {"default": "NEG_STYLE", "multiline": true}]}}, "input_order": {"required": ["positive_style", "negative_style"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["positive_prompt_text_l", "negative_prompt_text_l", "show_help"], "name": "CR SDXL Style Text", "display_name": "\ud83c\udf1f CR SDXL Style Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Base Prompt Encoder": {"input": {"required": {"base_clip": ["CLIP"], "pos_g": ["STRING", {"multiline": true, "default": "POS_G"}], "pos_l": ["STRING", {"multiline": true, "default": "POS_L"}], "neg_g": ["STRING", {"multiline": true, "default": "NEG_G"}], "neg_l": ["STRING", {"multiline": true, "default": "NEG_L"}], "preset": [["preset A", "preset B", "preset C"]], "base_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "base_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "target_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "target_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}]}}, "input_order": {"required": ["base_clip", "pos_g", "pos_l", "neg_g", "neg_l", "preset", "base_width", "base_height", "crop_w", "crop_h", "target_width", "target_height"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_positive", "base_negative", "show_help"], "name": "CR SDXL Base Prompt Encoder", "display_name": "\ud83c\udf1f CR SDXL Base Prompt Encoder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR Multi Upscale Stack": {"input": {"required": {"switch_1": [["On", "Off"]], "upscale_model_1": [["None", "1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]], "rescale_factor_1": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_2": [["On", "Off"]], "upscale_model_2": [["None", "1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]], "rescale_factor_2": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_3": [["On", "Off"]], "upscale_model_3": [["None", "1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]], "rescale_factor_3": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}]}, "optional": {"upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["switch_1", "upscale_model_1", "rescale_factor_1", "switch_2", "upscale_model_2", "rescale_factor_2", "switch_3", "upscale_model_3", "rescale_factor_3"], "optional": ["upscale_stack"]}, "output": ["UPSCALE_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_STACK", "show_help"], "name": "CR Multi Upscale Stack", "display_name": "\ud83d\udd0d CR Multi Upscale Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Upscale Image": {"input": {"required": {"image": ["IMAGE"], "upscale_model": [["1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]], "mode": [["rescale", "resize"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}]}}, "input_order": {"required": ["image", "upscale_model", "mode", "rescale_factor", "resize_width", "resampling_method", "supersample", "rounding_modulus"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Upscale Image", "display_name": "\ud83d\udd0d CR Upscale Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Apply Multi Upscale": {"input": {"required": {"image": ["IMAGE"], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["image", "resampling_method", "supersample", "rounding_modulus", "upscale_stack"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Apply Multi Upscale", "display_name": "\ud83d\udd0d CR Apply Multi Upscale", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR XY List": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "list1": ["STRING", {"multiline": true, "default": "x"}], "x_prepend": ["STRING", {"multiline": false, "default": ""}], "x_append": ["STRING", {"multiline": false, "default": ""}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "list2": ["STRING", {"multiline": true, "default": "y"}], "y_prepend": ["STRING", {"multiline": false, "default": ""}], "y_append": ["STRING", {"multiline": false, "default": ""}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["index", "list1", "x_prepend", "x_append", "x_annotation_prepend", "list2", "y_prepend", "y_append", "y_annotation_prepend"]}, "output": ["STRING", "STRING", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY List", "display_name": "\ud83d\udcc9 CR XY List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Interpolate": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "x_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["x_columns", "x_start_value", "x_step", "x_annotation_prepend", "y_rows", "y_start_value", "y_step", "y_annotation_prepend", "index", "gradient_profile"]}, "output": ["FLOAT", "FLOAT", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY Interpolate", "display_name": "\ud83d\udcc9 CR XY Interpolate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY From Folder": {"input": {"required": {"image_folder": [[".ipynb_checkpoints", "Danrisi", "Danrisi2", "compressed"]], "start_index": ["INT", {"default": 1, "min": 0, "max": 10000}], "end_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_columns": ["INT", {"default": 1, "min": 1, "max": 10000}], "x_annotation": ["STRING", {"multiline": true}], "y_annotation": ["STRING", {"multiline": true}], "font_size": ["INT", {"default": 50, "min": 1}], "gap": ["INT", {"default": 0, "min": 0}]}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image_folder", "start_index", "end_index", "max_columns", "x_annotation", "y_annotation", "font_size", "gap"], "optional": ["trigger"]}, "output": ["IMAGE", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "trigger", "show_help"], "name": "CR XY From Folder", "display_name": "\ud83d\udcc9 CR XY From Folder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Save Grid Image": {"input": {"required": {"mode": [["Save", "Preview"]], "output_folder": [[".ipynb_checkpoints", "Danrisi", "Danrisi2", "compressed"]], "image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "file_format": [["webp", "jpg", "png", "tif"]]}, "optional": {"output_path": ["STRING", {"default": "", "multiline": false}], "trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mode", "output_folder", "image", "filename_prefix", "file_format"], "optional": ["output_path", "trigger"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR XY Save Grid Image", "display_name": "\ud83d\udcc9 CR XY Save Grid Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": true}, "CR XY Index": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["x_columns", "y_rows", "index"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["x", "y", "show_help"], "name": "CR XY Index", "display_name": "\ud83d\udcc9 CR XY Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR Halftone Grid": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "dot_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "reverse_dot_style": [["No", "Yes"]], "dot_frequency": ["INT", {"default": 50, "min": 1, "max": 200, "step": 1}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "y_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "dot_style", "reverse_dot_style", "dot_frequency", "background_color", "x_pos", "y_pos"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Grid", "display_name": "\ud83d\udfeb CR Halftone Grid", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Bars": {"input": {"required": {"mode": [["2-color"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "orientation": [["vertical", "horizontal", "diagonal", "alt_diagonal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}], "offset": ["FLOAT", {"default": 0, "min": 0, "max": 20, "step": 0.05}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "orientation", "bar_frequency", "offset"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Bars", "display_name": "\ud83d\udfeb CR Color Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Style Bars": {"input": {"required": {"mode": [["color bars", "sin wave", "gradient bars"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "bar_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "orientation": [["vertical", "horizontal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}]}}, "input_order": {"required": ["mode", "width", "height", "bar_style", "orientation", "bar_frequency"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Style Bars", "display_name": "\ud83d\udfea CR Style Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Checker Pattern": {"input": {"required": {"mode": [["regular", "stepped"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "grid_frequency": ["INT", {"default": 8, "min": 1, "max": 200, "step": 1}], "step": ["INT", {"default": 2, "min": 2, "max": 200, "step": 1}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "grid_frequency", "step"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Checker Pattern", "display_name": "\ud83d\udfe6 CR Checker Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Polygons": {"input": {"required": {"mode": [["hexagons", "triangles"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "rows": ["INT", {"default": 5, "min": 1, "max": 512}], "columns": ["INT", {"default": 5, "min": 1, "max": 512}], "face_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_width": ["INT", {"default": 2, "min": 0, "max": 512}]}, "optional": {"face_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "rows", "columns", "face_color", "background_color", "line_color", "line_width"], "optional": ["face_color_hex", "bg_color_hex", "line_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Polygons", "display_name": "\ud83d\udfe9 CR Polygons", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "linear_transition": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "orientation": [["vertical", "horizontal"]]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "linear_transition", "orientation"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Gradient", "display_name": "\ud83d\udfe8 CR Color Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Radial Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "radial_center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "radial_center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "radial_center_x", "radial_center_y"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_Help"], "name": "CR Radial Gradient", "display_name": "\ud83d\udfe8 CR Radial Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Lines": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_lines": ["INT", {"default": 6, "min": 1, "max": 500}], "line_length": ["FLOAT", {"default": 5, "min": 0, "max": 100, "step": 0.1}], "line_width": ["INT", {"default": 5, "min": 1, "max": 512}], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 1024}], "center_y": ["INT", {"default": 0, "min": 0, "max": 1024}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}]}, "optional": {"line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_lines", "line_length", "line_width", "line_color", "background_color", "center_x", "center_y", "rotation"], "optional": ["line_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Lines", "display_name": "\ud83d\udfe7 CR Starburst Lines", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Colors": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_triangles": ["INT", {"default": 6, "min": 1, "max": 512}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 512}], "center_y": ["INT", {"default": 0, "min": 0, "max": 512}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}], "bbox_factor": ["FLOAT", {"default": 2, "min": 0, "max": 2, "step": 0.01}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_triangles", "color_1", "color_2", "center_x", "center_y", "rotation", "bbox_factor"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Colors", "display_name": "\ud83d\udfe7 CR Starburst Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Simple Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}]}}, "input_order": {"required": ["binary_pattern", "width", "height"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Binary Pattern", "display_name": "\ud83d\udfe5 CR Simple Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_0": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "jitter_distance": ["INT", {"default": 0, "min": 0, "max": 1024}], "bias": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color0_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["binary_pattern", "width", "height", "background_color", "color_0", "color_1", "outline_thickness", "outline_color", "jitter_distance", "bias"], "optional": ["bg_color_hex", "color0_hex", "color1_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Binary Pattern", "display_name": "\ud83d\udfe5 CR Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Draw Shape": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "shape": [["circle", "oval", "square", "diamond", "triangle", "hexagon", "octagon", "quarter circle", "half circle", "quarter circle", "starburst", "star", "cross", "diagonal regions"]], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "shape", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Shape", "display_name": "\ud83d\udfe1 CR Draw Shape", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Draw Pie": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "pie_start": ["FLOAT", {"default": 30.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "pie_stop": ["FLOAT", {"default": 330.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "pie_start", "pie_stop", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Pie", "display_name": "\ud83d\udfe2 CR Draw Pie", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Random Shape Pattern": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_rows": ["INT", {"default": 5, "min": 1, "max": 128}], "num_cols": ["INT", {"default": 5, "min": 1, "max": 128}], "color1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_rows", "num_cols", "color1", "color2"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Random Shape Pattern", "display_name": "\ud83d\udd35 CR Random Shape Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Overlay Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "font_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Overlay Text", "display_name": "\ud83d\udd24 CR Overlay Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Draw Text": {"input": {"required": {"image_width": ["INT", {"default": 512, "min": 64, "max": 2048}], "image_height": ["INT", {"default": 512, "min": 64, "max": 2048}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_width", "image_height", "text", "font_name", "font_size", "font_color", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Text", "display_name": "\ud83d\udd24\ufe0f CR Draw Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Mask Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Mask Text", "display_name": "\ud83d\udd24\ufe0f CR Mask Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Composite Text": {"input": {"required": {"image_text": ["IMAGE"], "image_background": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}}, "input_order": {"required": ["image_text", "image_background", "text", "font_name", "font_size", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Composite Text", "display_name": "\ud83d\udd24\ufe0f CR Composite Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Simple Text Watermark": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": false, "default": "@ your name"}], "align": [["center", "top left", "top center", "top right", "bottom left", "bottom center", "bottom right"]], "opacity": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}], "y_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "align", "opacity", "font_name", "font_size", "font_color", "x_margin", "y_margin"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Text Watermark", "display_name": "\ud83d\udd24\ufe0f CR Simple Text Watermark", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Select Font": {"input": {"required": {"font_name": [[]]}}, "input_order": {"required": ["font_name"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["font_name", "show_help"], "name": "CR Select Font", "display_name": "\ud83d\udd24\ufe0f CR Select Font", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Halftone Filter": {"input": {"required": {"image": ["IMAGE"], "dot_size": ["INT", {"default": 5, "min": 1, "max": 30, "step": 1}], "dot_shape": [["ellipse", "rectangle"], {"default": "ellipse"}], "resolution": [["normal", "hi-res (2x output size)"], {"default": "normal"}], "angle_c": ["INT", {"default": 75, "min": 0, "max": 360, "step": 1}], "angle_m": ["INT", {"default": 45, "min": 0, "max": 360, "step": 1}], "angle_y": ["INT", {"default": 15, "min": 0, "max": 360, "step": 1}], "angle_k": ["INT", {"default": 0, "min": 0, "max": 360, "step": 1}], "greyscale": ["BOOLEAN", {"default": true}], "antialias": ["BOOLEAN", {"default": true}], "antialias_scale": ["INT", {"default": 2, "min": 1, "max": 4, "step": 1}], "border_blending": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "dot_size", "dot_shape", "resolution", "angle_c", "angle_m", "angle_y", "angle_k", "greyscale", "antialias", "antialias_scale", "border_blending"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Filter", "display_name": "\ud83c\udfa8 Halftone Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Color Tint": {"input": {"required": {"image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1}], "mode": [["custom", "white", "black", "sepia", "red", "green", "blue", "cyan", "magenta", "yellow", "purple", "orange", "warm", "cool", "lime", "navy", "vintage", "rose", "teal", "maroon", "peach", "lavender", "olive"]]}, "optional": {"tint_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "strength", "mode"], "optional": ["tint_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Tint", "display_name": "\ud83c\udfa8 CR Color Tint", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Vignette Filter": {"input": {"required": {"image": ["IMAGE"], "vignette_shape": [["circle", "oval", "square", "diamond"]], "feather_amount": ["INT", {"default": 100, "min": 0, "max": 1024}], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "reverse": [["no", "yes"]]}}, "input_order": {"required": ["image", "vignette_shape", "feather_amount", "x_offset", "y_offset", "zoom", "reverse"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Vignette Filter", "display_name": "\ud83c\udfa8 CR Vignette Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Page Layout": {"input": {"required": {"layout_options": [["header", "footer", "header and footer", "no header or footer"]], "image_panel": ["IMAGE"], "header_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "header_text": ["STRING", {"multiline": true, "default": "text"}], "header_align": [["left", "center", "right"]], "footer_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "footer_text": ["STRING", {"multiline": true, "default": "text"}], "footer_align": [["left", "center", "right"]], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "header_font_size": ["INT", {"default": 150, "min": 0, "max": 1024}], "footer_font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["layout_options", "image_panel", "header_height", "header_text", "header_align", "footer_height", "footer_text", "footer_align", "font_name", "font_color", "header_font_size", "footer_font_size", "border_thickness", "border_color", "background_color"], "optional": ["font_color_hex", "border_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Page Layout", "display_name": "\ud83c\udf01 CR Page Layout", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Panel": {"input": {"required": {"image_1": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "layout_direction": [["horizontal", "vertical"]]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_1", "border_thickness", "border_color", "outline_thickness", "outline_color", "layout_direction"], "optional": ["image_2", "image_3", "image_4", "border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Panel", "display_name": "\ud83c\udf01 CR Image Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Grid Panel": {"input": {"required": {"images": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["images", "border_thickness", "border_color", "outline_thickness", "outline_color", "max_columns"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Grid Panel", "display_name": "\ud83c\udf01 CR Image Grid Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "outline_thickness", "outline_color"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Border", "display_name": "\ud83c\udf01 CR Image Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Feathered Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "feather_amount": ["INT", {"default": 0, "min": 0, "max": 1024}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "feather_amount"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Feathered Border", "display_name": "\ud83c\udf01 CR Feathered Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Text Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_size": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_outline_thickness": ["INT", {"default": 0, "min": 0, "max": 50}], "font_outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["top", "center", "bottom"]], "justify": [["left", "center", "right"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "text", "font_name", "font_color", "font_size", "font_outline_thickness", "font_outline_color", "background_color", "align", "justify"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Text Panel", "display_name": "\ud83c\udf01 CR Simple Text Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Color Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "fill_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"fill_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "fill_color"], "optional": ["fill_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Color Panel", "display_name": "\ud83c\udf01 CR Color Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Overlay Transparent Image": {"input": {"required": {"back_image": ["IMAGE"], "overlay_image": ["IMAGE"], "transparency": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}], "offset_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "offset_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "overlay_scale_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["back_image", "overlay_image", "transparency", "offset_x", "offset_y", "rotation_angle", "overlay_scale_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CR Overlay Transparent Image", "display_name": "\ud83c\udf01 CR Overlay Transparent Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Half Drop Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "half drop", "quarter drop", "custom drop %"]]}, "optional": {"drop_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "pattern"], "optional": ["drop_percentage"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Half Drop Panel", "display_name": "\ud83c\udf01 CR Half Drop Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Diamond Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "diamond"]]}}, "input_order": {"required": ["image", "pattern"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Diamond Panel", "display_name": "\ud83c\udf01 CR Diamond Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Meme Template": {"input": {"required": {"image": ["IMAGE"], "preset": [["custom", "One Does Not Simply ... MEME IN COMFY", "This is fine.", "Good Morning ... No Such Thing!"]], "text_top": ["STRING", {"multiline": true, "default": "text_top"}], "text_bottom": ["STRING", {"multiline": true, "default": "text_bottom"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_outline": [["none", "thin", "thick", "extra thick"]], "bar_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "bar_options": [["no bars", "top", "bottom", "top and bottom"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bar_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "preset", "text_top", "text_bottom", "font_name", "max_font_size", "font_color", "font_outline", "bar_color", "bar_options"], "optional": ["font_color_hex", "bar_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Meme Template", "display_name": "\ud83d\udcf1 CR Simple Meme Template", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Banner": {"input": {"required": {"image": ["IMAGE"], "banner_text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 500}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "margin_size": ["INT", {"default": 0, "min": 0, "max": 500}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "banner_text", "font_name", "max_font_size", "font_color", "outline_thickness", "outline_color", "margin_size"], "optional": ["font_color_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Banner", "display_name": "\ud83d\udcf1 CR Simple Banner", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Comic Panel Templates": {"input": {"required": {"page_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "page_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "template": [["custom", "G22", "G33", "H2", "H3", "H12", "H13", "H21", "H23", "H31", "H32", "V2", "V3", "V12", "V13", "V21", "V23", "V31", "V32"]], "reading_direction": [["left to right", "right to left"]], "border_thickness": ["INT", {"default": 5, "min": 0, "max": 1024}], "outline_thickness": ["INT", {"default": 2, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "panel_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"images": ["IMAGE"], "custom_panel_layout": ["STRING", {"multiline": false, "default": "H123"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "panel_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["page_width", "page_height", "template", "reading_direction", "border_thickness", "outline_thickness", "outline_color", "panel_color", "background_color"], "optional": ["images", "custom_panel_layout", "outline_color_hex", "panel_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Comic Panel Templates", "display_name": "\ud83d\udcf1 CR Comic Panel Templates", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Image Compare": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "text"}], "text2": ["STRING", {"multiline": true, "default": "text"}], "footer_height": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_name": [["impact.ttf", "comic.ttf", "YoungSerif-Regular.ttf", "Roboto-Regular.ttf", "Quicksand-Bold.ttf", "PixelifySans-Bold.ttf", "Oswald-Bold.ttf", "NotoSansArabic-Regular.ttf", "Caveat-VariableFont_wght.ttf", "AlumniSansCollegiateOne-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "mode": [["normal", "dark"]], "border_thickness": ["INT", {"default": 20, "min": 0, "max": 1024}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["text1", "text2", "footer_height", "font_name", "font_size", "mode", "border_thickness"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Image Compare", "display_name": "\ud83d\udcf1 CR Simple Image Compare", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Thumbnail Preview": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}}, "input_order": {"required": ["image", "rescale_factor", "max_columns"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Thumbnail Preview", "display_name": "\ud83d\udcf1 CR Thumbnail Preview", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Seamless Checker": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "grid_options": [["2x2", "3x3", "4x4", "5x5", "6x6"]]}}, "input_order": {"required": ["image", "rescale_factor", "grid_options"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Seamless Checker", "display_name": "\ud83d\udcf1 CR Seamless Checker", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Image Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch", "display_name": "\ud83d\udd00 CR Image Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Image Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Image Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Latent Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"latent1": ["LATENT"], "latent2": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent1", "latent2"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Latent Input Switch", "display_name": "\ud83d\udd00 CR Latent Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Conditioning Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"conditioning1": ["CONDITIONING"], "conditioning2": ["CONDITIONING"]}}, "input_order": {"required": ["Input"], "optional": ["conditioning1", "conditioning2"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Input Switch", "display_name": "\ud83d\udd00 CR Conditioning Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Clip Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input"], "optional": ["clip1", "clip2"]}, "output": ["CLIP", "STRING"], "output_is_list": [false, false], "output_name": ["CLIP", "show_help"], "name": "CR Clip Input Switch", "display_name": "\ud83d\udd00 CR Clip Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Model Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["Input"], "optional": ["model1", "model2"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL", "show_help"], "name": "CR Model Input Switch", "display_name": "\ud83d\udd00 CR Model Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR ControlNet Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}, "optional": {"control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}}, "input_order": {"required": ["Input", "control_net1", "control_net2"], "optional": ["control_net1", "control_net2"]}, "output": ["CONTROL_NET", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROL_NET", "show_help"], "name": "CR ControlNet Input Switch", "display_name": "\ud83d\udd00 CR ControlNet Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR VAE Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"VAE1": ["VAE", {"forceInput": true}], "VAE2": ["VAE", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["VAE1", "VAE2"]}, "output": ["VAE", "STRING"], "output_is_list": [false, false], "output_name": ["VAE", "show_help"], "name": "CR VAE Input Switch", "display_name": "\ud83d\udd00 CR VAE Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch", "display_name": "\ud83d\udd00 CR Text Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}], "text3": ["STRING", {"forceInput": true}], "text4": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2", "text3", "text4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Text Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Switch Model and CLIP": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "model1": ["MODEL"], "clip1": ["CLIP"], "model2": ["MODEL"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input", "model1", "clip1", "model2", "clip2"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Switch Model and CLIP", "display_name": "\ud83d\udd00 CR Switch Model and CLIP", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Batch Process Switch": {"input": {"required": {"Input": [["image", "image batch"]]}, "optional": {"image": ["IMAGE"], "image_batch": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image", "image_batch"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Batch Process Switch", "display_name": "\ud83d\udd02 CR Batch Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Img2Img Process Switch": {"input": {"required": {"Input": [["txt2img", "img2img"]]}, "optional": {"txt2img": ["LATENT"], "img2img": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["txt2img", "img2img"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Img2Img Process Switch", "display_name": "\ud83d\udd02 CR Img2Img Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Hires Fix Process Switch": {"input": {"required": {"Input": [["latent_upscale", "image_upscale"]]}, "optional": {"latent_upscale": ["LATENT"], "image_upscale": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent_upscale", "image_upscale"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "STRING"], "name": "CR Hires Fix Process Switch", "display_name": "\ud83d\udd02 CR Hires Fix Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Index": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Index", "display_name": "\ud83d\udd22 CR Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Increment": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000, "forceInput": true}], "interval": ["INT", {"default": 1, "min": -10000, "max": 10000}]}}, "input_order": {"required": ["index", "interval"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "interval", "show_help"], "name": "CR Index Increment", "display_name": "\ud83d\udd22 CR Index Increment", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Multiply": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "factor": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "factor"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "factor", "show_help"], "name": "CR Index Multiply", "display_name": "\ud83d\udd22 CR Index Multiply", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Reset": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "reset_to": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "reset_to"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "reset_to", "show_help"], "name": "CR Index Reset", "display_name": "\ud83d\udd22 CR Index Reset", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Trigger": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "trigger_value": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "trigger_value"]}, "output": ["INT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "trigger", "show_help"], "name": "CR Trigger", "display_name": "\ud83d\udd22 CR Trigger", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR String To Number": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text", "forceInput": true}], "round_integer": [["round", "round down", "round up"]]}}, "input_order": {"required": ["text", "round_integer"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR String To Number", "display_name": "\ud83d\udd27 CR String To Number", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Combo": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["any", "show_help"], "name": "CR String To Combo", "display_name": "\ud83d\udd27 CR String To Combo", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To String": {"input": {"required": {"float_": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000000.0, "forceInput": true}]}}, "input_order": {"required": ["float_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Float To String", "display_name": "\ud83d\udd27 CR Float To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To Integer": {"input": {"required": {"_float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["_float"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Float To Integer", "display_name": "\ud83d\udd27 CR Float To Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Integer To String": {"input": {"required": {"int_": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}]}}, "input_order": {"required": ["int_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Integer To String", "display_name": "\ud83d\udd27 CR Integer To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Boolean": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["BOOLEAN", "show_help"], "name": "CR String To Boolean", "display_name": "\ud83d\udd27 CR String To Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Random Hex Color": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hex_color1", "hex_color2", "hex_color3", "hex_color4", "show_help"], "name": "CR Random Hex Color", "display_name": "\ud83c\udfb2 CR Random Hex Color", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["rgb_1", "rgb_2", "rgb_3", "rgb_4", "show_help"], "name": "CR Random RGB", "display_name": "\ud83c\udfb2 CR Random RGB", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Values": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["binary", "decimal", "natural", "hexadecimal", "alphabetic", "alphanumeric", "custom"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "custom_values": ["STRING", {"multiline": false, "default": "123ABC"}], "prepend_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["seed", "value_type", "rows", "string_length", "custom_values", "prepend_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Values", "display_name": "\ud83c\udfb2 CR Random Multiline Values", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Colors": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["rgb", "hex color", "matplotlib xkcd"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "value_type", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Colors", "display_name": "\ud83c\udfb2 CR Random Multiline Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB Gradient": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random RGB Gradient", "display_name": "\ud83c\udfb2 CR Random RGB Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Panel Codes": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "values": ["STRING", {"multiline": false, "default": "123"}]}}, "input_order": {"required": ["seed", "rows", "string_length", "values"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Panel Codes", "display_name": "\ud83c\udfb2 CR Random Panel Codes", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["text", "show_help"], "name": "CR Text", "display_name": "\ud83d\udd24 CR Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Multiline Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}], "convert_from_csv": ["BOOLEAN", {"default": false}], "csv_quote_char": ["STRING", {"default": "'", "choices": ["'", "\""]}], "remove_chars": ["BOOLEAN", {"default": false}], "chars_to_remove": ["STRING", {"multiline": false, "default": ""}], "split_string": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "convert_from_csv", "csv_quote_char", "remove_chars", "chars_to_remove", "split_string"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Multiline Text", "display_name": "\ud83d\udd24 CR Multiline Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Split String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text"}]}, "optional": {"delimiter": ["STRING", {"multiline": false, "default": ","}]}}, "input_order": {"required": ["text"], "optional": ["delimiter"]}, "output": ["*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["string_1", "string_2", "string_3", "string_4", "show_help"], "name": "CR Split String", "display_name": "\ud83d\udd24 CR Split String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Concatenate": {"input": {"required": {}, "optional": {"text1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "text2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["text1", "text2", "separator"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Concatenate", "display_name": "\ud83d\udd24 CR Text Concatenate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Replace": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}, "optional": {"find1": ["STRING", {"multiline": false, "default": ""}], "replace1": ["STRING", {"multiline": false, "default": ""}], "find2": ["STRING", {"multiline": false, "default": ""}], "replace2": ["STRING", {"multiline": false, "default": ""}], "find3": ["STRING", {"multiline": false, "default": ""}], "replace3": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["find1", "replace1", "find2", "replace2", "find3", "replace3"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Replace", "display_name": "\ud83d\udd24 CR Text Replace", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Length": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Text Length", "display_name": "\ud83d\udd24 CR Text Length", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Operation": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "operation": [["uppercase", "lowercase", "capitalize", "invert_case", "reverse", "trim", "remove_spaces"]]}}, "input_order": {"required": ["text", "operation"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Operation", "display_name": "\ud83d\udd24 CR Text Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Blacklist": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "blacklist_words": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"replacement_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text", "blacklist_words"], "optional": ["replacement_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Blacklist", "display_name": "\ud83d\udd24 Text Blacklist", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Save Text To File": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": ""}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["multiline_text", "output_file_path", "file_name", "file_extension"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Save Text To File", "display_name": "\ud83d\udd24 CR Save Text To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": true}, "CR Set Value On Boolean": {"input": {"required": {"boolean": ["BOOLEAN", {"default": true, "forceInput": true}], "value_if_true": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_false": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["boolean", "value_if_true", "value_if_false"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Boolean", "display_name": "\u2699\ufe0f CR Set Value On Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value On Binary": {"input": {"required": {"binary": ["INT", {"default": 1, "min": 0, "max": 1, "forceInput": true}], "value_if_1": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_0": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["binary", "value_if_1", "value_if_0"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Binary", "display_name": "\u2699\ufe0f CR Set Value On Binary", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value on String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"test_string": ["STRING", {"multiline": false, "default": ""}], "value_if_true": ["STRING", {"multiline": false, "default": ""}], "value_if_false": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["test_string", "value_if_true", "value_if_false"]}, "output": ["*", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["STRING", "BOOLEAN", "show_help"], "name": "CR Set Value on String", "display_name": "\u2699\ufe0f CR Set Value on String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Switch From String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"switch_1": ["STRING", {"multiline": false, "default": ""}], "switch_2": ["STRING", {"multiline": false, "default": ""}], "switch_3": ["STRING", {"multiline": false, "default": ""}], "switch_4": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["switch_1", "switch_2", "switch_3", "switch_4"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["switch", "show_help"], "name": "CR Set Switch From String", "display_name": "\u2699\ufe0f CR Set Switch From String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Value": {"input": {"required": {"value": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "INT", "show_help"], "name": "CR Value", "display_name": "\u2699\ufe0f CR Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Integer Multiple": {"input": {"required": {"integer": ["INT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "multiple": ["FLOAT", {"default": 8, "min": 1, "max": 18446744073709551615}]}}, "input_order": {"required": ["integer", "multiple"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Integer Multiple", "display_name": "\u2699\ufe0f CR Integer Multiple", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Clamp Value": {"input": {"required": {"a": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_min": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_max": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "range_min", "range_max"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Clamp Value", "display_name": "\u2699\ufe0f CR Clamp Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Math Operation": {"input": {"required": {"a": ["FLOAT", {"default": 1.0}], "operation": [["sin", "cos", "tan", "sqrt", "exp", "log", "neg", "abs"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}]}}, "input_order": {"required": ["a", "operation", "decimal_places"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Math Operation", "display_name": "\u2699\ufe0f CR Math Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Get Parameter From Prompt": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "prompt", "forceInput": true}], "search_string": ["STRING", {"multiline": false, "default": "!findme"}]}}, "input_order": {"required": ["prompt", "search_string"]}, "output": ["STRING", "*", "FLOAT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["prompt", "text", "float", "boolean", "show_help"], "name": "CR Get Parameter From Prompt", "display_name": "\u2699\ufe0f CR Get Parameter From Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select Resize Method": {"input": {"required": {"method": [["Fit", "Crop"]]}}, "input_order": {"required": ["method"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["method", "show_help"], "name": "CR Select Resize Method", "display_name": "\u2699\ufe0f CR Select Resize Method", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select ISO Size": {"input": {"required": {"iso_size": [["A0 - 9933x14043", "A1 - 7016x9933", "A2 - 4960x7016", "A3 - 3508x4960", "A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "A11 - 213x307", "A12 - 154x213", "A13 - 106x154", "B0 - 11811x16701", "B1 - 8350x11811", "B2 - 5906x8350", "B3 - 4169x5906", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C0 - 10831x15319", "C1 - 7654x10831", "C2 - 5409x7654", "C3 - 3827x5409", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472"]]}}, "input_order": {"required": ["iso_size"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["width", "height", "show_help"], "name": "CR Select ISO Size", "display_name": "\u2699\ufe0f CR Select ISO Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Simple Schedule": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, item_alias, [attr_value1, attr_value2]"}], "schedule_type": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "schedule_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["schedule", "schedule_type", "schedule_alias", "schedule_format"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Simple Schedule", "display_name": "\ud83d\udccb CR Simple Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Central Schedule": {"input": {"required": {"schedule_1": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type1": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias1": ["STRING", {"multiline": false, "default": ""}], "schedule_2": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type2": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias2": ["STRING", {"multiline": false, "default": ""}], "schedule_3": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type3": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias3": ["STRING", {"multiline": false, "default": ""}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["schedule_1", "schedule_type1", "schedule_alias1", "schedule_2", "schedule_type2", "schedule_alias2", "schedule_3", "schedule_type3", "schedule_alias3", "schedule_format"], "optional": ["schedule"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Central Schedule", "display_name": "\ud83d\udccb CR Central Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Combine Schedules": {"input": {"required": {}, "optional": {"schedule_1": ["SCHEDULE"], "schedule_2": ["SCHEDULE"], "schedule_3": ["SCHEDULE"], "schedule_4": ["SCHEDULE"]}}, "input_order": {"required": [], "optional": ["schedule_1", "schedule_2", "schedule_3", "schedule_4"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Combine Schedules", "display_name": "\ud83d\udccb CR Combine Schedules", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Output Schedule To File": {"input": {"required": {"output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["output_file_path", "file_name", "file_extension", "schedule"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Schedule To File", "display_name": "\ud83d\udccb CR Output Schedule To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Load Schedule From File": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Load Schedule From File", "display_name": "\ud83d\udccb CR Load Schedule From File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Schedule Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "schedule1": ["SCHEDULE"], "schedule2": ["SCHEDULE"]}}, "input_order": {"required": ["Input", "schedule1", "schedule2"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Schedule Input Switch", "display_name": "\ud83d\udccb CR Schedule Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Bit Schedule": {"input": {"required": {"binary_string": ["STRING", {"multiline": true, "default": ""}], "interval": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["binary_string", "interval", "loops"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Bit Schedule", "display_name": "\ud83d\udccb CR Bit Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Simple Value Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, value"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Simple Value Scheduler", "display_name": "\ud83d\udcd1 CR Simple Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Text Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Simple Text Scheduler", "display_name": "\ud83d\udcd1 CR Simple Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Value Scheduler": {"input": {"required": {"mode": [["Default Value", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_value": ["FLOAT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_value", "schedule_format"], "optional": ["schedule"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Value Scheduler", "display_name": "\ud83d\udcd1 CR Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Text Scheduler": {"input": {"required": {"mode": [["Default Text", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_text": ["STRING", {"multiline": false, "default": "default text"}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_text", "schedule_format"], "optional": ["schedule"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Scheduler", "display_name": "\ud83d\udcd1 CR Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled Models": {"input": {"required": {"mode": [["Load default Model", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_model": [[]], "schedule_format": [["CR", "Deforum"]]}, "optional": {"model_list": ["MODEL_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_model", "schedule_format"], "optional": ["model_list", "schedule"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Load Scheduled Models", "display_name": "\ud83d\udcd1 CR Load Scheduled Models", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled LoRAs": {"input": {"required": {"mode": [["Off", "Load default LoRA", "Schedule"]], "model": ["MODEL"], "clip": ["CLIP"], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_lora": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"lora_list": ["LORA_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "model", "clip", "current_frame", "schedule_alias", "default_lora", "strength_model", "strength_clip", "schedule_format"], "optional": ["lora_list", "schedule"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load Scheduled LoRAs", "display_name": "\ud83d\udcd1 CR Load Scheduled LoRAs", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Prompt Scheduler": {"input": {"required": {"mode": [["Default Prompt", "Keyframe List", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "default_prompt": ["STRING", {"multiline": false, "default": "default prompt"}], "schedule_format": [["CR", "Deforum"]], "interpolate_prompt": [["Yes", "No"]]}, "optional": {"schedule": ["SCHEDULE"], "schedule_alias": ["STRING", {"default prompt": "", "multiline": false}], "keyframe_list": ["STRING", {"multiline": true, "default": "keyframe list"}], "prepend_text": ["STRING", {"multiline": true, "default": "prepend text"}], "append_text": ["STRING", {"multiline": true, "default": "append text"}]}}, "input_order": {"required": ["mode", "current_frame", "default_prompt", "schedule_format", "interpolate_prompt"], "optional": ["schedule", "schedule_alias", "keyframe_list", "prepend_text", "append_text"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Prompt Scheduler": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "keyframe_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["keyframe_list", "current_frame", "keyframe_format"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Simple Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Simple Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Keyframe List": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "keyframes"}], "keyframe_format": [["Deforum", "CR"]]}}, "input_order": {"required": ["keyframe_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Keyframe List", "display_name": "\ud83d\udcdd CR Keyframe List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Encode Scheduled Prompts": {"input": {"required": {"clip": ["CLIP"], "current_prompt": ["STRING", {"multiline": true}], "next_prompt": ["STRING", {"multiline": true}], "weight": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "current_prompt", "next_prompt", "weight"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Encode Scheduled Prompts", "display_name": "\ud83d\udcdd CR Encode Scheduled Prompts", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Gradient Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "end_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Gradient Float", "display_name": "\ud83d\udd22 CR Gradient Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Gradient Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "end_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Gradient Integer", "display_name": "\ud83d\udd22 CR Gradient Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Increment Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.001}], "step": ["FLOAT", {"default": 0.1, "min": -9999.0, "max": 9999.0, "step": 0.001}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Increment Float", "display_name": "\ud83d\udd22 CR Increment Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Increment Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "step": ["INT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Increment Integer", "display_name": "\ud83d\udd22 CR Increment Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Interpolate Latents": {"input": {"required": {"latent1": ["LATENT"], "latent2": ["LATENT"], "weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "method": [["lerp"]]}}, "input_order": {"required": ["latent1", "latent2", "weight", "method"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Interpolate Latents", "display_name": "\ud83d\udd22 CR Interpolate Latents", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Debatch Frames": {"input": {"required": {"frames": ["IMAGE"]}}, "input_order": {"required": ["frames"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["debatched_frames"], "name": "CR Debatch Frames", "display_name": "\ud83d\udee0\ufe0f CR Debatch Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Current Frame": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["index"], "name": "CR Current Frame", "display_name": "\ud83d\udee0\ufe0f CR Current Frame", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Load Animation Frames": {"input": {"required": {"image_sequence_folder": [["clipspace", "pasted"]], "start_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 10000}]}}, "input_order": {"required": ["image_sequence_folder", "start_index", "max_frames"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Animation Frames", "display_name": "\u2328\ufe0f CR Load Animation Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Load Flow Frames": {"input": {"required": {"input_folder": [["clipspace", "pasted"]], "sort_by": [["Index", "Alphabetic"]], "current_frame": ["INT", {"default": 0, "min": 0, "max": 10000, "forceInput": true}], "skip_start_frames": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}], "file_pattern": ["STRING", {"default": "*.png", "multiline": false}]}}, "input_order": {"required": ["input_folder", "sort_by", "current_frame", "skip_start_frames"], "optional": ["input_path", "file_pattern"]}, "output": ["IMAGE", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_image", "previous_image", "current_frame", "show_help"], "name": "CR Load Flow Frames", "display_name": "\u2328\ufe0f CR Load Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Output Flow Frames": {"input": {"required": {"output_folder": [[".ipynb_checkpoints", "Danrisi", "Danrisi2", "compressed"]], "current_image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999, "forceInput": true}]}, "optional": {"interpolated_img": ["IMAGE"], "output_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["output_folder", "current_image", "filename_prefix", "current_frame"], "optional": ["interpolated_img", "output_path"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Flow Frames", "display_name": "\u2328\ufe0f CR Output Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": true}, "CR Prompt List Keyframes": {"input": {"required": {"prompt_list": ["PROMPT_LIST"], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["prompt_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Prompt List Keyframes", "display_name": "CR Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List": {"input": {"required": {"prompt_1": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_2": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_3": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_4": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_5": ["STRING", {"multiline": true, "default": "prompt"}]}, "optional": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"]}}, "input_order": {"required": ["prompt_1", "prompt_2", "prompt_3", "prompt_4", "prompt_5"], "optional": ["simple_prompt_list"]}, "output": ["SIMPLE_PROMPT_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["SIMPLE_PROMPT_LIST", "show_help"], "name": "CR Simple Prompt List", "display_name": "CR Simple Prompt List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List Keyframes": {"input": {"required": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"], "keyframe_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "transition_type": [["Default"]], "transition_speed": [["Default"]], "transition_profile": [["Default"]], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["simple_prompt_list", "keyframe_interval", "loops", "transition_type", "transition_speed", "transition_profile", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Simple Prompt List Keyframes", "display_name": "CR Simple Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Models": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "model_list": ["MODEL_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "model_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Cycle Models", "display_name": "CR Cycle Models (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle LoRAs": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "lora_list": ["LORA_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "lora_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Cycle LoRAs", "display_name": "CR Cycle LoRAs (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text": {"input": {"required": {"mode": [["Sequential"]], "text_list": ["TEXT_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "text_list", "frame_interval", "loops", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text", "display_name": "CR Cycle Text (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text Simple", "display_name": "CR Cycle Text Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images": {"input": {"required": {"mode": [["Sequential"]], "image_list": ["IMAGE_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "image_list", "frame_interval", "loops", "current_frame"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images", "display_name": "CR Cycle Images (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images Simple", "display_name": "CR Cycle Images Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Model List": {"input": {"required": {"ckpt_name1": [["None"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "ckpt_name2": [["None"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "ckpt_name3": [["None"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "ckpt_name4": [["None"]], "alias4": ["STRING", {"multiline": false, "default": ""}], "ckpt_name5": [["None"]], "alias5": ["STRING", {"multiline": false, "default": ""}]}, "optional": {"model_list": ["MODEL_LIST"]}}, "input_order": {"required": ["ckpt_name1", "alias1", "ckpt_name2", "alias2", "ckpt_name3", "alias3", "ckpt_name4", "alias4", "ckpt_name5", "alias5"], "optional": ["model_list"]}, "output": ["MODEL_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_LIST", "show_text"], "name": "CR Model List", "display_name": "CR Model List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR LoRA List": {"input": {"required": {"lora_name1": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "model_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name2": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "model_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name3": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "model_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_list": ["lora_LIST"]}}, "input_order": {"required": ["lora_name1", "alias1", "model_strength_1", "clip_strength_1", "lora_name2", "alias2", "model_strength_2", "clip_strength_2", "lora_name3", "alias3", "model_strength_3", "clip_strength_3"], "optional": ["lora_list"]}, "output": ["LORA_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_LIST", "show_text"], "name": "CR LoRA List", "display_name": "CR LoRA List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Text List Simple": {"input": {"required": {}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["TEXT_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["TEXT_LIST_SIMPLE", "show_help"], "name": "CR Text List Simple", "display_name": "CR Text List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "alias1": ["STRING", {"multiline": false, "default": ""}], "image_2": ["IMAGE"], "alias2": ["STRING", {"multiline": false, "default": ""}], "image_3": ["IMAGE"], "alias3": ["STRING", {"multiline": false, "default": ""}], "image_4": ["IMAGE"], "alias4": ["STRING", {"multiline": false, "default": ""}], "image_5": ["IMAGE"], "alias5": ["STRING", {"multiline": false, "default": ""}], "image_list": ["image_LIST"]}}, "input_order": {"required": [], "optional": ["image_1", "alias1", "image_2", "alias2", "image_3", "alias3", "image_4", "alias4", "image_5", "alias5", "image_list"]}, "output": ["IMAGE_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST", "show_help"], "name": "CR Image List", "display_name": "CR Image List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List Simple": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST_SIMPLE", "show_help"], "name": "CR Image List Simple", "display_name": "CR Image List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "UltralyticsDetectorProvider": {"input": {"required": {"model_name": [["bbox/face_yolov8m.pt", "bbox/hand_yolov8s.pt", "segm/person_yolov8m-seg.pt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "output_is_list": [false, false], "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"], "name": "UltralyticsDetectorProvider", "display_name": "UltralyticsDetectorProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-subpack", "category": "ImpactPack", "output_node": false}, "LayerUtility: ZhipuGLM4V": {"input": {"required": {"image": ["IMAGE"], "model": [["glm-4v-flash", "glm-4v", "glm-4v-plus"]], "user_prompt": ["STRING", {"default": "describe this image", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["image", "model", "user_prompt"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: ZhipuGLM4V", "display_name": "LayerUtility: ZhipuGLM4V(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: ZhipuGLM4": {"input": {"required": {"model": [["GLM-4-Flash", "GLM-4-FlashX", "GLM-4-Plus", "GLM-4-Long", "GLM-4-Air", "GLM-4-AirX"]], "user_prompt": ["STRING", {"default": "where is the capital of France?", "multiline": true}], "history_length": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}]}, "optional": {"history": ["GLM4_HISTORY"]}}, "input_order": {"required": ["model", "user_prompt", "history_length"], "optional": ["history"]}, "output": ["STRING", "GLM4_HISTORY"], "output_is_list": [false, false], "output_name": ["text", "history"], "name": "LayerUtility: ZhipuGLM4", "display_name": "LayerUtility: ZhipuGLM4(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadSmolLM2Model": {"input": {"required": {"model": [["SmolLM2-135M-Instruct", "SmolLM2-360M-Instruct", "SmolLM2-1.7B-Instruct"]], "dtype": [["bf16", "fp32"]], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["model", "dtype", "device"]}, "output": ["SmolLM2_MODEL"], "output_is_list": [false], "output_name": ["smolLM2_model"], "name": "LayerUtility: LoadSmolLM2Model", "display_name": "LayerUtility: Load SmolLM2 Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadSmolVLMModel": {"input": {"required": {"model": [["SmolVLM-Instruct"]], "dtype": [["bf16", "fp32"]], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["model", "dtype", "device"]}, "output": ["SmolVLM_MODEL"], "output_is_list": [false], "output_name": ["smolVLM_model"], "name": "LayerUtility: LoadSmolVLMModel", "display_name": "LayerUtility: Load SmolVLM Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: SmolLM2": {"input": {"required": {"smolLM2_model": ["SmolLM2_MODEL"], "max_new_tokens": ["INT", {"default": 512, "min": 1, "max": 4096}], "do_sample": ["BOOLEAN", {"default": true}], "temperature": ["FLOAT", {"default": 0.5, "min": 0.0, "step": 0.1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.1}], "system_prompt": ["STRING", {"default": "You are a helpful AI assistant.", "multiline": false}], "user_prompt": ["STRING", {"default": "who are you?", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["smolLM2_model", "max_new_tokens", "do_sample", "temperature", "top_p", "system_prompt", "user_prompt"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "LayerUtility: SmolLM2", "display_name": "LayerUtility: SmolLM2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: SmolVLM": {"input": {"required": {"image": ["IMAGE"], "smolVLM_model": ["SmolVLM_MODEL"], "max_new_tokens": ["INT", {"default": 512, "min": 1, "max": 4096}], "user_prompt": ["STRING", {"default": "describe this image", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["image", "smolVLM_model", "max_new_tokens", "user_prompt"], "optional": []}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: SmolVLM", "display_name": "LayerUtility: SmolVLM(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: SegmentAnythingUltra V3": {"input": {"required": {"image": ["IMAGE"], "sam_models": ["LS_SAM_MODELS"], "threshold": ["FLOAT", {"default": 0.3, "min": 0, "max": 1.0, "step": 0.01}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "prompt": ["STRING", {"default": "subject"}], "device": [["cuda", "cpu"]], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["image", "sam_models", "threshold", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "prompt", "device", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SegmentAnythingUltra V3", "display_name": "LayerMask: SegmentAnythingUltra V3(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadSegmentAnythingModels": {"input": {"required": {"sam_model": [["sam_vit_h (2.56GB)", "sam_vit_l (1.25GB)", "sam_vit_b (375MB)", "sam_hq_vit_h (2.57GB)", "sam_hq_vit_l (1.25GB)", "sam_hq_vit_b (379MB)", "mobile_sam(39MB)"]], "grounding_dino_model": [["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"]]}, "optional": {}}, "input_order": {"required": ["sam_model", "grounding_dino_model"], "optional": []}, "output": ["LS_SAM_MODELS"], "output_is_list": [false], "output_name": ["sam_models"], "name": "LayerMask: LoadSegmentAnythingModels", "display_name": "LayerMask: Load SegmentAnything Models(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: SaveImagePlusV2": {"input": {"required": {"images": ["IMAGE"], "custom_path": ["STRING", {"default": ""}], "custom_filename": ["STRING", {"default": ""}], "filename_prefix": ["STRING", {"default": "comfyui"}], "timestamp": [["None", "second", "millisecond"]], "dpi": ["INT", {"default": 96, "min": 1, "max": 10000, "step": 1}], "format": [["png", "jpg"]], "quality": ["INT", {"default": 80, "min": 10, "max": 100, "step": 1}], "meta_data": ["BOOLEAN", {"default": false}], "blind_watermark": ["STRING", {"default": ""}], "save_workflow_as_json": ["BOOLEAN", {"default": false}], "preview": ["BOOLEAN", {"default": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "custom_path", "custom_filename", "filename_prefix", "timestamp", "dpi", "format", "quality", "meta_data", "blind_watermark", "save_workflow_as_json", "preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LayerUtility: SaveImagePlusV2", "display_name": "LayerUtility: SaveImagePlus V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility/SystemIO", "output_node": true}, "LayerMask: SAM2UltraV2": {"input": {"required": {"sam2_model": ["LS_SAM2_MODEL"], "image": ["IMAGE"], "bboxes": ["BBOXES"], "bbox_select": [["all", "first", "by_index"]], "select_index": ["STRING", {"default": "0,"}], "detail_method": [["VITMatte", "VITMatte(local)", "PyMatting", "GuidedFilter"]], "detail_erode": ["INT", {"default": 6, "min": 1, "max": 255, "step": 1}], "detail_dilate": ["INT", {"default": 4, "min": 1, "max": 255, "step": 1}], "black_point": ["FLOAT", {"default": 0.15, "min": 0.01, "max": 0.98, "step": 0.01, "display": "slider"}], "white_point": ["FLOAT", {"default": 0.99, "min": 0.02, "max": 0.99, "step": 0.01, "display": "slider"}], "process_detail": ["BOOLEAN", {"default": true}], "max_megapixels": ["FLOAT", {"default": 2.0, "min": 1, "max": 999, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["sam2_model", "image", "bboxes", "bbox_select", "select_index", "detail_method", "detail_erode", "detail_dilate", "black_point", "white_point", "process_detail", "max_megapixels"], "optional": []}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerMask: SAM2UltraV2", "display_name": "LayerMask: SAM2 Ultra V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: LoadSAM2Model": {"input": {"required": {"sam2_model": [["sam2_hiera_base_plus.safetensors", "sam2_hiera_large.safetensors", "sam2_hiera_small.safetensors", "sam2_hiera_tiny.safetensors", "sam2.1_hiera_base_plus.safetensors", "sam2.1_hiera_large.safetensors", "sam2.1_hiera_small.safetensors", "sam2.1_hiera_tiny.safetensors"]], "precision": [["fp16", "bf16", "fp32"]], "device": [["cuda", "cpu"]]}, "optional": {}}, "input_order": {"required": ["sam2_model", "precision", "device"], "optional": []}, "output": ["LS_SAM2_MODEL"], "output_is_list": [false], "output_name": ["sam2_model"], "name": "LayerMask: LoadSAM2Model", "display_name": "LayerMask: Load SAM2 Model(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: DrawBBoxMaskV2": {"input": {"required": {"image": ["IMAGE"], "bboxes": ["BBOXES"], "grow_top": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_bottom": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_left": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "grow_right": ["FLOAT", {"default": 0, "min": -10, "max": 10, "step": 0.01}], "rounded_rect_radius": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "anti_aliasing": ["INT", {"default": 2, "min": 0, "max": 16, "step": 1}]}, "optional": {}}, "input_order": {"required": ["image", "bboxes", "grow_top", "grow_bottom", "grow_left", "grow_right", "rounded_rect_radius", "anti_aliasing"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "LayerMask: DrawBBoxMaskV2", "display_name": "LayerMask: Draw BBox Mask V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: JoyCaptionBeta1": {"input": {"required": {"image": ["IMAGE"], "joycaption_beta1_model": ["JOYCAPTIONBETA1_MODEL"], "caption_type": [["Descriptive", "Descriptive (Casual)", "Straightforward", "Stable Diffusion Prompt", "MidJourney", "Danbooru tag list", "e621 tag list", "Rule34 tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "max_new_tokens": ["INT", {"default": 512, "min": 4, "max": 2048, "step": 1}], "top_p": ["FLOAT", {"default": 0.9, "min": 0, "max": 1, "step": 0.01}], "top_k": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "temperature": ["FLOAT", {"default": 0.6, "min": 0, "max": 2, "step": 0.01}], "user_prompt": ["STRING", {"default": "", "multiline": true}]}, "optional": {"extra_options": ["JoyCaption2ExtraOption"]}}, "input_order": {"required": ["image", "joycaption_beta1_model", "caption_type", "caption_length", "max_new_tokens", "top_p", "top_k", "temperature", "user_prompt"], "optional": ["extra_options"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: JoyCaptionBeta1", "display_name": "LayerUtility: JoyCaption Beta One (Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: LoadJoyCaptionBeta1Model": {"input": {"required": {"model": [["fancyfeast/llama-joycaption-beta-one-hf-llava"]], "quantization_mode": [["nf4", "int8", "bf16"], {"default": "nf4"}], "device": [["cuda", "cpu"], {"default": "cuda"}]}, "optional": {}}, "input_order": {"required": ["model", "quantization_mode", "device"], "optional": []}, "output": ["JOYCAPTIONBETA1_MODEL"], "output_is_list": [false], "output_name": ["joycaption_beta1_model"], "name": "LayerUtility: LoadJoyCaptionBeta1Model", "display_name": "LayerUtility: Load JoyCaption Beta One Model (Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: JoyCaptionBeta1ExtraOptions": {"input": {"required": {"refer_character_name": ["BOOLEAN", {"default": false}], "exclude_people_info": ["BOOLEAN", {"default": false}], "include_lighting": ["BOOLEAN", {"default": false}], "include_camera_angle": ["BOOLEAN", {"default": false}], "include_watermark": ["BOOLEAN", {"default": false}], "include_JPEG_artifacts": ["BOOLEAN", {"default": false}], "include_exif": ["BOOLEAN", {"default": false}], "exclude_sexual": ["BOOLEAN", {"default": false}], "exclude_image_resolution": ["BOOLEAN", {"default": false}], "include_aesthetic_quality": ["BOOLEAN", {"default": false}], "include_composition_style": ["BOOLEAN", {"default": false}], "exclude_text": ["BOOLEAN", {"default": false}], "specify_depth_field": ["BOOLEAN", {"default": false}], "specify_lighting_sources": ["BOOLEAN", {"default": false}], "do_not_use_ambiguous_language": ["BOOLEAN", {"default": false}], "include_nsfw": ["BOOLEAN", {"default": false}], "only_describe_most_important_elements": ["BOOLEAN", {"default": false}], "do_not_include_artist_name_or_title": ["BOOLEAN", {"default": false}], "identify_image_orientation": ["BOOLEAN", {"default": false}], "use_vulgar_slang_and_profanity": ["BOOLEAN", {"default": false}], "do_not_use_polite_euphemisms": ["BOOLEAN", {"default": false}], "include_character_age": ["BOOLEAN", {"default": false}], "include_camera_shot_type": ["BOOLEAN", {"default": false}], "exclude_mood_feeling": ["BOOLEAN", {"default": false}], "include_camera_vantage_height": ["BOOLEAN", {"default": false}], "mention_watermark": ["BOOLEAN", {"default": false}], "avoid_meta_descriptive_phrases": ["BOOLEAN", {"default": false}], "character_name": ["STRING", {"default": "Huluwa", "multiline": false}]}, "optional": {}}, "input_order": {"required": ["refer_character_name", "exclude_people_info", "include_lighting", "include_camera_angle", "include_watermark", "include_JPEG_artifacts", "include_exif", "exclude_sexual", "exclude_image_resolution", "include_aesthetic_quality", "include_composition_style", "exclude_text", "specify_depth_field", "specify_lighting_sources", "do_not_use_ambiguous_language", "include_nsfw", "only_describe_most_important_elements", "do_not_include_artist_name_or_title", "identify_image_orientation", "use_vulgar_slang_and_profanity", "do_not_use_polite_euphemisms", "include_character_age", "include_camera_shot_type", "exclude_mood_feeling", "include_camera_vantage_height", "mention_watermark", "avoid_meta_descriptive_phrases", "character_name"], "optional": []}, "output": ["JoyCaption2ExtraOption"], "output_is_list": [false], "output_name": ["extra_option"], "name": "LayerUtility: JoyCaptionBeta1ExtraOptions", "display_name": "LayerUtility: JoyCaption Beta One Extra Options(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: Gemini": {"input": {"required": {"model": [["gemini-1.5-flash", "gemini-1.5-pro", "gemini-1.5-flash-8b", "gemini-2.0-flash-exp", "learnlm-1.5-pro-experimental"]], "max_output_tokens": ["INT", {"default": 4096, "min": 1, "max": 8192, "step": 1}], "temperature": ["FLOAT", {"default": 0.5, "min": 0, "max": 2, "step": 0.1}], "words_limit": ["INT", {"default": 200, "min": 8, "max": 2048, "step": 1}], "response_language": [["en", "zh-CN"]], "system_prompt": ["STRING", {"default": "You are creating a prompt for Stable Diffusion to generate an image.", "multiline": false}], "user_prompt": ["STRING", {"default": "Generate a prompt about a girl.", "multiline": true}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"]}}, "input_order": {"required": ["model", "max_output_tokens", "temperature", "words_limit", "response_language", "system_prompt", "user_prompt"], "optional": ["image_1", "image_2"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: Gemini", "display_name": "LayerUtility: Gemini(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: GeminiV2": {"input": {"required": {"model": [["gemini-2.0-flash-lite", "gemini-2.0-flash", "gemini-2.5-pro-exp-03-25"]], "max_output_tokens": ["INT", {"default": 4096, "min": 1, "max": 8192, "step": 1}], "temperature": ["FLOAT", {"default": 0.5, "min": 0, "max": 2, "step": 0.1}], "words_limit": ["INT", {"default": 200, "min": 8, "max": 2048, "step": 1}], "response_language": [["en", "zh-CN"]], "seed": ["INT", {"default": 0, "min": 0, "max": 2147483647}], "system_prompt": ["STRING", {"default": "You are creating a prompt for Stable Diffusion to generate an image.", "multiline": false}], "user_prompt": ["STRING", {"default": "Generate a prompt about a girl.", "multiline": true}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"]}}, "input_order": {"required": ["model", "max_output_tokens", "temperature", "words_limit", "response_language", "seed", "system_prompt", "user_prompt"], "optional": ["image_1", "image_2"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["text"], "name": "LayerUtility: GeminiV2", "display_name": "LayerUtility: Gemini V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerMask: ObjectDetectorGemini": {"input": {"required": {"image": ["IMAGE"], "model": [["gemini-1.5-flash", "gemini-1.5-pro", "gemini-1.5-flash-8b", "gemini-2.0-flash-exp"]], "prompt": ["STRING", {"default": "subject"}]}, "optional": {}}, "input_order": {"required": ["image", "model", "prompt"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorGemini", "display_name": "LayerMask: Object Detector Gemini(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerMask: ObjectDetectorGeminiV2": {"input": {"required": {"image": ["IMAGE"], "model": [["gemini-2.5-pro-exp-03-25", "gemini-1.5-pro"]], "prompt": ["STRING", {"default": "subject"}]}, "optional": {}}, "input_order": {"required": ["image", "model", "prompt"], "optional": []}, "output": ["BBOXES", "IMAGE"], "output_is_list": [false, false], "output_name": ["bboxes", "preview"], "name": "LayerMask: ObjectDetectorGeminiV2", "display_name": "LayerMask: Object Detector Gemini V2(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerMask", "output_node": false}, "LayerUtility: GeminiImageEdit": {"input": {"required": {"image": ["IMAGE"], "model": [["gemini-2.0-flash-exp-image-generation"]], "temperature": ["FLOAT", {"default": 0.5, "min": 0, "max": 2, "step": 0.1}], "seed": ["INT", {"default": 0, "min": 0, "max": 2147483647}], "user_prompt": ["STRING", {"default": "change the background to forest", "multiline": true}]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"]}}, "input_order": {"required": ["image", "model", "temperature", "seed", "user_prompt"], "optional": ["image_2", "image_3"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "LayerUtility: GeminiImageEdit", "display_name": "LayerUtility: Gemini Image Edit(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: DeepSeekAPI": {"input": {"required": {"model": [["deepseek-chat", "deepseek-r1(aliyun)", "deepseek-v3(aliyun)", "deepseek-r1(volcengine)", "deepseek-v3(volcengine)"]], "max_tokens": ["INT", {"default": 4096, "min": 1, "max": 8192, "step": 1}], "temperature": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.1}], "top_p": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.1}], "presence_penalty": ["FLOAT", {"default": 0, "min": -2, "max": 2, "step": 0.1}], "frequency_penalty": ["FLOAT", {"default": 0, "min": -2, "max": 2, "step": 0.1}], "history_length": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "system_prompt": ["STRING", {"default": "You are a helpful assistant.", "multiline": false}], "user_prompt": ["STRING", {"default": "", "multiline": true}]}, "optional": {"history": ["DEEPSEEK_HISTORY"]}}, "input_order": {"required": ["model", "max_tokens", "temperature", "top_p", "presence_penalty", "frequency_penalty", "history_length", "system_prompt", "user_prompt"], "optional": ["history"]}, "output": ["STRING", "DEEPSEEK_HISTORY"], "output_is_list": [false, false], "output_name": ["text", "history"], "name": "LayerUtility: DeepSeekAPI", "display_name": "LayerUtility: DeepSeek API", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: DeepSeekAPIV2": {"input": {"required": {"model": [["deepseek-chat", "deepseek-r1(aliyun)", "deepseek-v3(aliyun)", "deepseek-r1(volcengine)", "deepseek-v3(volcengine)"]], "time_out": ["INT", {"default": 300, "min": 1, "max": 3600, "step": 1}], "max_tokens": ["INT", {"default": 4096, "min": 1, "max": 8192, "step": 1}], "temperature": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.1}], "top_p": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.1}], "presence_penalty": ["FLOAT", {"default": 0, "min": -2, "max": 2, "step": 0.1}], "frequency_penalty": ["FLOAT", {"default": 0, "min": -2, "max": 2, "step": 0.1}], "history_length": ["INT", {"default": 8, "min": 1, "max": 64, "step": 1}], "system_prompt": ["STRING", {"default": "You are a helpful assistant.", "multiline": false}], "user_prompt": ["STRING", {"default": "", "multiline": true}]}, "optional": {"history": ["DEEPSEEK_HISTORY"]}}, "input_order": {"required": ["model", "time_out", "max_tokens", "temperature", "top_p", "presence_penalty", "frequency_penalty", "history_length", "system_prompt", "user_prompt"], "optional": ["history"]}, "output": ["STRING", "DEEPSEEK_HISTORY"], "output_is_list": [false, false], "output_name": ["text", "history"], "name": "LayerUtility: DeepSeekAPIV2", "display_name": "LayerUtility: DeepSeek API V2", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "LayerUtility: Collage": {"input": {"required": {"images": ["IMAGE"], "canvas_width": ["INT", {"default": 2048, "min": 512, "max": 8192, "step": 16}], "canvas_height": ["INT", {"default": 2048, "min": 512, "max": 8192, "step": 16}], "border_width": ["FLOAT", {"default": 2, "min": 0, "max": 20, "step": 0.1}], "rounded_rect_radius": ["INT", {"default": 8, "min": 0, "max": 100, "step": 1}], "uniformity": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.1}], "background_color": ["STRING", {"default": "#FFFFFF"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1e+18, "step": 1}]}, "optional": {"florence2_model": ["FLORENCE2"], "object_prompt": ["STRING", {"default": "face"}]}}, "input_order": {"required": ["images", "canvas_width", "canvas_height", "border_width", "rounded_rect_radius", "uniformity", "background_color", "seed"], "optional": ["florence2_model", "object_prompt"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "LayerUtility: Collage", "display_name": "LayerUtility: Collage(Advance)", "description": "", "python_module": "custom_nodes.ComfyUI_LayerStyle_Advance", "category": "\ud83d\ude3adzNodes/LayerUtility", "output_node": false}, "BOOLConstant": {"input": {"required": {"value": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["value"], "name": "BOOLConstant", "display_name": "BOOL Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "INTConstant": {"input": {"required": {"value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["value"], "name": "INTConstant", "display_name": "INT Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "FloatConstant": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1e-05}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["value"], "name": "FloatConstant", "display_name": "Float Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "StringConstant": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstant", "display_name": "String Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "StringConstantMultiline": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": true}], "strip_newlines": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["string", "strip_newlines"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstantMultiline", "display_name": "String Constant Multiline", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "ConditioningMultiCombine": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 20, "step": 1}], "operation": [["combine", "concat"], {"default": "combine"}], "conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["inputcount", "operation", "conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING", "INT"], "output_is_list": [false, false], "output_name": ["combined", "inputcount"], "name": "ConditioningMultiCombine", "display_name": "Conditioning Multi Combine", "description": "\nCombines multiple conditioning nodes into one\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "mask_1", "mask_2", "mask_1_strength", "mask_2_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine", "display_name": "ConditioningSetMaskAndCombine", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine3": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "mask_1", "mask_2", "mask_3", "mask_1_strength", "mask_2_strength", "mask_3_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine3", "display_name": "ConditioningSetMaskAndCombine3", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine4": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "mask_1", "mask_2", "mask_3", "mask_4", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine4", "display_name": "ConditioningSetMaskAndCombine4", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine5": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "positive_5": ["CONDITIONING"], "negative_5": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_5": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_5_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "positive_5", "negative_5", "mask_1", "mask_2", "mask_3", "mask_4", "mask_5", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "mask_5_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine5", "display_name": "ConditioningSetMaskAndCombine5", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "CondPassThrough": {"input": {"required": {}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["positive", "negative"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "CondPassThrough", "display_name": "CondPassThrough", "description": "\n    Simply passes through the positive and negative conditioning,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "DownloadAndLoadCLIPSeg": {"input": {"required": {"model": [["Kijai/clipseg-rd64-refined-fp16", "CIDAS/clipseg-rd64-refined"]]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEGMODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "DownloadAndLoadCLIPSeg", "display_name": "(Down)load CLIPSeg", "description": "\nDownloads and loads CLIPSeg model with huggingface_hub,  \nto ComfyUI/models/clip_seg\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchCLIPSeg": {"input": {"required": {"images": ["IMAGE"], "text": ["STRING", {"multiline": false}], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.001}], "binary_mask": ["BOOLEAN", {"default": true}], "combine_mask": ["BOOLEAN", {"default": false}], "use_cuda": ["BOOLEAN", {"default": true}]}, "optional": {"blur_sigma": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "opt_model": ["CLIPSEGMODEL"], "prev_mask": ["MASK", {"default": null}], "image_bg_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "text", "threshold", "binary_mask", "combine_mask", "use_cuda"], "optional": ["blur_sigma", "opt_model", "prev_mask", "image_bg_level", "invert"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["Mask", "Image"], "name": "BatchCLIPSeg", "display_name": "Batch CLIPSeg", "description": "\nSegments an image or batch of images using CLIPSeg.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "ColorToMask": {"input": {"required": {"images": ["IMAGE"], "invert": ["BOOLEAN", {"default": false}], "red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["images", "invert", "red", "green", "blue", "threshold", "per_batch"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorToMask", "display_name": "Color To Mask", "description": "\nConverts chosen RGB value to a mask.  \nWith batch inputs, the **per_batch**  \ncontrols the number of images processed at once.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "CreateGradientMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateGradientMask", "display_name": "Create Gradient Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateTextMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "text_x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 8, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "text": ["STRING", {"default": "HELLO!", "multiline": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_rotation": ["INT", {"default": 0, "min": 0, "max": 359, "step": 1}], "end_rotation": ["INT", {"default": 0, "min": -359, "max": 359, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "text_x", "text_y", "font_size", "font_color", "text", "font", "width", "height", "start_rotation", "end_rotation"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateTextMask", "display_name": "Create Text Mask", "description": "\nCreates a text image and mask.  \nLooks for fonts from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n  \nIf start_rotation and/or end_rotation are different values,  \ncreates animation between them.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "CreateAudioMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 1, "max": 255, "step": 1}], "scale": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 2.0, "step": 0.01}], "audio_path": ["STRING", {"default": "audio.wav"}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "scale", "audio_path", "width", "height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CreateAudioMask", "display_name": "Create Audio Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 2, "min": 2, "max": 10000, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "start_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_frame": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "interpolation", "start_level", "midpoint_level", "end_level", "midpoint_frame"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMask", "display_name": "Create Fade Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMaskAdvanced": {"input": {"required": {"points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 2, "max": 10000, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "none", "default_to_black"]]}}, "input_order": {"required": ["points_string", "invert", "frames", "width", "height", "interpolation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMaskAdvanced", "display_name": "Create Fade Mask Advanced", "description": "\nCreate a batch of masks interpolated between given frames and values. \nUses same syntax as Fizz' BatchValueSchedule.\nFirst value is the frame index (not that this starts from 0, not 1) \nand the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  \n\nFor example the default values:  \n0:(0.0)  \n7:(1.0)  \n15:(0.0)  \n  \nWould create a mask batch fo 16 frames, starting from black, \ninterpolating with the chosen curve to fully white at the 8th frame, \nand interpolating from that to fully black at the 16th frame.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateFluidMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "inflow_count": ["INT", {"default": 3, "min": 0, "max": 255, "step": 1}], "inflow_velocity": ["INT", {"default": 1, "min": 0, "max": 255, "step": 1}], "inflow_radius": ["INT", {"default": 8, "min": 0, "max": 255, "step": 1}], "inflow_padding": ["INT", {"default": 50, "min": 0, "max": 255, "step": 1}], "inflow_duration": ["INT", {"default": 60, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "inflow_count", "inflow_velocity", "inflow_radius", "inflow_padding", "inflow_duration"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateFluidMask", "display_name": "Create Fluid Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateShapeMask": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "grow": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["shape", "frames", "location_x", "location_y", "grow", "frame_width", "frame_height", "shape_width", "shape_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMask", "display_name": "Create Shape Mask", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateVoronoiMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "num_points": ["INT", {"default": 15, "min": 1, "max": 4096, "step": 1}], "line_width": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "speed": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "num_points", "line_width", "speed", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateVoronoiMask", "display_name": "Create Voronoi Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateMagicMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "depth": ["INT", {"default": 12, "min": 1, "max": 500, "step": 1}], "distortion": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 100.0, "step": 0.01}], "seed": ["INT", {"default": 123, "min": 0, "max": 99999999, "step": 1}], "transitions": ["INT", {"default": 1, "min": 1, "max": 20, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "depth", "distortion", "seed", "transitions", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateMagicMask", "display_name": "Create Magic Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "GetMaskSizeAndCount": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["mask", "width", "height", "count"], "name": "GetMaskSizeAndCount", "display_name": "Get Mask Size & Count", "description": "\nReturns the width, height and batch size of the mask,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "GrowMaskWithBlur": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "incremental_expandrate": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "tapered_corners": ["BOOLEAN", {"default": true}], "flip_input": ["BOOLEAN", {"default": false}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "lerp_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "decay_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "expand", "incremental_expandrate", "tapered_corners", "flip_input", "blur_radius", "lerp_alpha", "decay_factor"], "optional": ["fill_holes"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "GrowMaskWithBlur", "display_name": "Grow Mask With Blur", "description": "\n# GrowMaskWithBlur\n- mask: Input mask or mask batch\n- expand: Expand or contract mask or mask batch by a given amount\n- incremental_expandrate: increase expand rate by a given amount per frame\n- tapered_corners: use tapered corners\n- flip_input: flip input mask\n- blur_radius: value higher than 0 will blur the mask\n- lerp_alpha: alpha value for interpolation between frames\n- decay_factor: decay value for interpolation between frames\n- fill_holes: fill holes in the mask (slow)", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "MaskBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "mask_1": ["MASK"], "mask_2": ["MASK"]}}, "input_order": {"required": ["inputcount", "mask_1", "mask_2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "MaskBatchMulti", "display_name": "Mask Batch Multi", "description": "\nCreates an image batch from multiple masks.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "OffsetMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1, "display": "number"}], "duplication_factor": ["INT", {"default": 1, "min": 1, "max": 1000, "step": 1, "display": "number"}], "roll": ["BOOLEAN", {"default": false}], "incremental": ["BOOLEAN", {"default": false}], "padding_mode": [["empty", "border", "reflection"], {"default": "empty"}]}}, "input_order": {"required": ["mask", "x", "y", "angle", "duplication_factor", "roll", "incremental", "padding_mode"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMask", "display_name": "Offset Mask", "description": "\nOffsets the mask by the specified amount.  \n - mask: Input mask or mask batch\n - x: Horizontal offset\n - y: Vertical offset\n - angle: Angle in degrees\n - roll: roll edge wrapping\n - duplication_factor: Number of times to duplicate the mask to form a batch\n - border padding_mode: Padding mode for the mask\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "RemapMaskRange": {"input": {"required": {"mask": ["MASK"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "min", "max"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "RemapMaskRange", "display_name": "Remap Mask Range", "description": "\nSets new min and max values for the mask.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "ResizeMask": {"input": {"required": {"mask": ["MASK"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "display": "number"}], "keep_proportions": ["BOOLEAN", {"default": false}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["mask", "width", "height", "keep_proportions", "upscale_method", "crop"]}, "output": ["MASK", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["mask", "width", "height"], "name": "ResizeMask", "display_name": "Resize Mask", "description": "\nResizes the mask or batch of masks to the specified width and height.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "RoundMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "RoundMask", "display_name": "Round Mask", "description": "\nRounds the mask or batch of masks to a binary mask.  \n<img src=\"https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40\" width=\"300\" height=\"250\" alt=\"RoundMask example\">\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "SeparateMasks": {"input": {"required": {"mask": ["MASK"], "size_threshold_width": ["INT", {"default": 256, "min": 0.0, "max": 4096, "step": 1}], "size_threshold_height": ["INT", {"default": 256, "min": 0.0, "max": 4096, "step": 1}], "mode": [["convex_polygons", "area", "box"]], "max_poly_points": ["INT", {"default": 8, "min": 3, "max": 32, "step": 1}]}}, "input_order": {"required": ["mask", "size_threshold_width", "size_threshold_height", "mode", "max_poly_points"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "SeparateMasks", "display_name": "Separate Masks", "description": "Separates a mask into multiple masks based on the size of the connected components.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": true}, "AddLabel": {"input": {"required": {"image": ["IMAGE"], "text_x": ["INT", {"default": 10, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 2, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 48, "min": -1, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 0, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "label_color": ["STRING", {"default": "black"}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "text": ["STRING", {"default": "Text"}], "direction": [["up", "down", "left", "right", "overlay"], {"default": "up"}]}, "optional": {"caption": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["image", "text_x", "text_y", "height", "font_size", "font_color", "label_color", "font", "text", "direction"], "optional": ["caption"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AddLabel", "display_name": "Add Label", "description": "\nCreates a new with the given text, and concatenates it to  \neither above or below the input image.  \nNote that this changes the input image's height!  \nFonts are loaded from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "ColorMatch": {"input": {"required": {"image_ref": ["IMAGE"], "image_target": ["IMAGE"], "method": [["mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"default": "mkl"}]}, "optional": {"strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image_ref", "image_target", "method"], "optional": ["strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ColorMatch", "display_name": "Color Match", "description": "\ncolor-matcher enables color transfer across images which comes in handy for automatic  \ncolor-grading of photographs, paintings and film sequences as well as light-field  \nand stopmotion corrections.  \n\nThe methods behind the mappings are based on the approach from Reinhard et al.,  \nthe Monge-Kantorovich Linearization (MKL) as proposed by Pitie et al. and our analytical solution  \nto a Multi-Variate Gaussian Distribution (MVGD) transfer in conjunction with classical histogram   \nmatching. As shown below our HM-MVGD-HM compound outperforms existing methods.   \nhttps://github.com/hahnec/color-matcher/\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageTensorList": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTensorList", "display_name": "Image Tensor List", "description": "\nCreates an image list from the input images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CrossFadeImages": {"input": {"required": {"images_1": ["IMAGE"], "images_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "start_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images_1", "images_2", "interpolation", "transition_start_index", "transitioning_frames", "start_level", "end_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CrossFadeImages", "display_name": "Cross Fade Images", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CrossFadeImagesMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "interpolation", "transitioning_frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CrossFadeImagesMulti", "display_name": "Cross Fade Images Multi", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetImagesFromBatchIndexed": {"input": {"required": {"images": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["images", "indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GetImagesFromBatchIndexed", "display_name": "Get Images From Batch Indexed", "description": "\nSelects and returns the images at the specified indices as an image batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetImageRangeFromBatch": {"input": {"required": {"start_index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["start_index", "num_frames"], "optional": ["images", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "GetImageRangeFromBatch", "display_name": "Get Image or Mask Range From Batch", "description": "\nReturns a range of images from a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetLatentRangeFromBatch": {"input": {"required": {"latents": ["LATENT"], "start_index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": -1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["latents", "start_index", "num_frames"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GetLatentRangeFromBatch", "display_name": "Get Latent Range From Batch", "description": "\nReturns a range of latents from a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "GetImageSizeAndCount": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "width", "height", "count"], "name": "GetImageSizeAndCount", "display_name": "Get Image Size & Count", "description": "\nReturns width, height and batch size of the image,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "FastPreview": {"input": {"required": {"image": ["IMAGE"], "format": [["JPEG", "PNG", "WEBP"], {"default": "JPEG"}], "quality": ["INT", {"default": 75, "min": 1, "max": 100, "step": 1}]}}, "input_order": {"required": ["image", "format", "quality"]}, "output": [], "output_is_list": [], "output_name": [], "name": "FastPreview", "display_name": "Fast Preview", "description": "Experimental node for faster image previews by displaying through base64 it without saving to disk.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true}, "ImageBatchFilter": {"input": {"required": {"images": ["IMAGE"], "empty_color": ["STRING", {"default": "0, 0, 0"}], "empty_threshold": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"replacement_image": ["IMAGE"]}}, "input_order": {"required": ["images", "empty_color", "empty_threshold"], "optional": ["replacement_image"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["images", "removed_indices"], "name": "ImageBatchFilter", "display_name": "Image Batch Filter", "description": "Removes empty images from a batch", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageAndMaskPreview": {"input": {"required": {"mask_opacity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_color": ["STRING", {"default": "255, 255, 255"}], "pass_through": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask_opacity", "mask_color", "pass_through"], "optional": ["image", "mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["composite"], "name": "ImageAndMaskPreview", "display_name": "ImageAndMaskPreview", "description": "\nPreview an image or a mask, when both inputs are used  \ncomposites the mask on top of the image.\nwith pass_through on the preview is disabled and the  \ncomposite is returned from the composite slot instead,  \nthis allows for the preview to be passed for video combine  \nnodes for example.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": true}, "ImageAddMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "blending": [["add", "subtract", "multiply", "difference"], {"default": "add"}], "blend_amount": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "blending", "blend_amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageAddMulti", "display_name": "Image Add Multi", "description": "\nAdd blends multiple images together.    \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"]}}, "input_order": {"required": ["inputcount", "image_1", "image_2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageBatchMulti", "display_name": "Image Batch Multi", "description": "\nCreates an image batch from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchRepeatInterleaving": {"input": {"required": {"images": ["IMAGE"], "repeats": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["images", "repeats"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageBatchRepeatInterleaving", "display_name": "ImageBatchRepeatInterleaving", "description": "\nRepeats each image in a batch by the specified number of times.  \nExample batch of 5 images: 0, 1 ,2, 3, 4  \nwith repeats 2 becomes batch of 10 images: 0, 0, 1, 1, 2, 2, 3, 3, 4, 4  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchTestPattern": {"input": {"required": {"batch_size": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "start_from": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "text_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 255, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["batch_size", "start_from", "text_x", "text_y", "width", "height", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchTestPattern", "display_name": "Image Batch Test Pattern", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "ImageConcanate": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image1", "image2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcanate", "display_name": "Image Concatenate", "description": "\nConcatenates the image2 to image1 in the specified direction.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatFromBatch": {"input": {"required": {"images": ["IMAGE"], "num_columns": ["INT", {"default": 3, "min": 1, "max": 255, "step": 1}], "match_image_size": ["BOOLEAN", {"default": false}], "max_resolution": ["INT", {"default": 4096}]}}, "input_order": {"required": ["images", "num_columns", "match_image_size", "max_resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcatFromBatch", "display_name": "Image Concatenate From Batch", "description": "\n    Concatenates images from a batch into a grid with a specified number of columns.\n    ", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageConcatMulti", "display_name": "Image Concatenate Multi", "description": "\nCreates an image from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageCropByMask", "display_name": "Image Crop By Mask", "description": "Crops the input images based on the provided mask.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMaskAndResize": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "base_resolution": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "padding": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "min_crop_resolution": ["INT", {"default": 128, "min": 0, "max": 16384, "step": 8}], "max_crop_resolution": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "mask", "base_resolution", "padding", "min_crop_resolution", "max_crop_resolution"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["images", "masks", "bbox"], "name": "ImageCropByMaskAndResize", "display_name": "Image Crop By Mask And Resize", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMaskBatch": {"input": {"required": {"image": ["IMAGE"], "masks": ["MASK"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "preserve_size": ["BOOLEAN", {"default": false}], "bg_color": ["STRING", {"default": "0, 0, 0", "tooltip": "Color as RGB values in range 0-255, separated by commas."}]}}, "input_order": {"required": ["image", "masks", "width", "height", "padding", "preserve_size", "bg_color"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "ImageCropByMaskBatch", "display_name": "Image Crop By Mask Batch", "description": "Crops the input images based on the provided masks.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageUncropByMask": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "mask": ["MASK"], "bbox": ["BBOX"]}}, "input_order": {"required": ["destination", "source", "mask", "bbox"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageUncropByMask", "display_name": "Image Uncrop By Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGrabPIL": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageGrabPIL", "display_name": "Image Grab PIL", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridComposite2x2": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite2x2", "display_name": "Image Grid Composite 2x2", "description": "\nConcatenates the 4 input images into a 2x2 grid. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridComposite3x3": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "image5": ["IMAGE"], "image6": ["IMAGE"], "image7": ["IMAGE"], "image8": ["IMAGE"], "image9": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4", "image5", "image6", "image7", "image8", "image9"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite3x3", "display_name": "Image Grid Composite 3x3", "description": "\nConcatenates the 9 input images into a 3x3 grid. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridtoBatch": {"input": {"required": {"image": ["IMAGE"], "columns": ["INT", {"default": 3, "min": 1, "max": 8, "tooltip": "The number of columns in the grid."}], "rows": ["INT", {"default": 0, "min": 1, "max": 8, "tooltip": "The number of rows in the grid. Set to 0 for automatic calculation."}]}}, "input_order": {"required": ["image", "columns", "rows"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridtoBatch", "display_name": "Image Grid To Batch", "description": "Converts a grid of images to a batch of images.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageNoiseAugmentation": {"input": {"required": {"image": ["IMAGE"], "noise_aug_strength": ["FLOAT", {"default": null, "min": 0.0, "max": 100.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["image", "noise_aug_strength", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseAugmentation", "display_name": "Image Noise Augmentation", "description": "\n    Add noise to an image.  \n    ", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageNormalize_Neg1_To_1": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNormalize_Neg1_To_1", "display_name": "Image Normalize -1 to 1", "description": "\nNormalize the images to be in the range [-1, 1]  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePass": {"input": {"required": {}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePass", "display_name": "ImagePass", "description": "\nPasses the image through without modifying it.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePadKJ": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "extra_padding": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "pad_mode": [["edge", "color"]], "color": ["STRING", {"default": "0, 0, 0", "tooltip": "Color as RGB values in range 0-255, separated by commas."}]}, "optional": {"mask": ["MASK"], "target_width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "forceInput": true}], "target_height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["image", "left", "right", "top", "bottom", "extra_padding", "pad_mode", "color"], "optional": ["mask", "target_width", "target_height"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "ImagePadKJ", "display_name": "ImagePad KJ", "description": "Pad the input image and optionally mask with the specified padding.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePadForOutpaintMasked": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintMasked", "display_name": "Image Pad For Outpaint Masked", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImagePadForOutpaintTargetSize": {"input": {"required": {"image": ["IMAGE"], "target_width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "target_height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "target_width", "target_height", "feathering", "upscale_method"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintTargetSize", "display_name": "Image Pad For Outpaint Target Size", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImagePrepForICLora": {"input": {"required": {"reference_image": ["IMAGE"], "output_width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "output_height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "border_width": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}, "optional": {"latent_image": ["IMAGE"], "latent_mask": ["MASK"], "reference_mask": ["MASK"]}}, "input_order": {"required": ["reference_image", "output_width", "output_height", "border_width"], "optional": ["latent_image", "latent_mask", "reference_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePrepForICLora", "display_name": "Image Prep For ICLora", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImageResizeKJ": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}]}, "optional": {"get_image_size": ["IMAGE"], "crop": [["disabled", "center", 0], {"tooltip": "0 will do the default center crop, this is a workaround for the widget order changing with the new frontend, as in old workflows the value of this widget becomes 0 automatically"}]}}, "input_order": {"required": ["image", "width", "height", "upscale_method", "keep_proportion", "divisible_by"], "optional": ["get_image_size", "crop"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResizeKJ", "display_name": "Resize Image (deprecated)", "description": "\nDEPRECATED!\n\nDue to ComfyUI frontend changes, this node should no longer be used, please check the   \nv2 of the node. This node is only kept to not completely break older workflows.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false, "deprecated": true}, "ImageResizeKJv2": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "keep_proportion": [["stretch", "resize", "pad", "pad_edge", "crop"], {"default": false}], "pad_color": ["STRING", {"default": "0, 0, 0", "tooltip": "Color to use for padding."}], "crop_position": [["center", "top", "bottom", "left", "right"], {"default": "center"}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}]}, "optional": {"mask": ["MASK"], "device": [["cpu", "gpu"]]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "width", "height", "upscale_method", "keep_proportion", "pad_color", "crop_position", "divisible_by"], "optional": ["mask", "device"], "hidden": ["unique_id"]}, "output": ["IMAGE", "INT", "INT", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "width", "height", "mask"], "name": "ImageResizeKJv2", "display_name": "Resize Image v2", "description": "\nResizes the image to the specified width and height.  \nSize can be retrieved from the input.\n\nKeep proportions keeps the aspect ratio of the image, by  \nhighest dimension.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageUpscaleWithModelBatched": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "images": ["IMAGE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["upscale_model", "images", "per_batch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModelBatched", "display_name": "Image Upscale With Model Batched", "description": "\nSame as ComfyUI native model upscaling node,  \nbut allows setting sub-batches for reduced VRAM usage.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "InsertImagesToBatchIndexed": {"input": {"required": {"original_images": ["IMAGE"], "images_to_insert": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}, "optional": {"mode": [["replace", "insert"]]}}, "input_order": {"required": ["original_images", "images_to_insert", "indexes"], "optional": ["mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InsertImagesToBatchIndexed", "display_name": "Insert Images To Batch Indexed", "description": "\nInserts images at the specified indices into the original image batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "InsertLatentToIndexed": {"input": {"required": {"source": ["LATENT"], "destination": ["LATENT"], "index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["source", "destination", "index"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InsertLatentToIndexed", "display_name": "Insert Latent To Index", "description": "\nInserts a latent at the specified index into the original latent batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "LoadAndResizeImage": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png"], {"image_upload": true}], "resize": ["BOOLEAN", {"default": false}], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "repeat": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}], "mask_channel": [["alpha", "red", "green", "blue"], {"tooltip": "Channel to use for the mask output"}], "background_color": ["STRING", {"default": "", "tooltip": "Fills the alpha channel with the specified color."}]}}, "input_order": {"required": ["image", "resize", "width", "height", "repeat", "keep_proportion", "divisible_by", "mask_channel", "background_color"]}, "output": ["IMAGE", "MASK", "INT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "width", "height", "image_path"], "name": "LoadAndResizeImage", "display_name": "Load & Resize Image", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "LoadImagesFromFolderKJ": {"input": {"required": {"folder": ["STRING", {"default": ""}], "width": ["INT", {"default": 1024, "min": -1, "step": 1}], "height": ["INT", {"default": 1024, "min": -1, "step": 1}], "keep_aspect_ratio": [["crop", "pad", "stretch"]]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "include_subfolders": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["folder", "width", "height", "keep_aspect_ratio"], "optional": ["image_load_cap", "start_index", "include_subfolders"]}, "output": ["IMAGE", "MASK", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "count", "image_path"], "name": "LoadImagesFromFolderKJ", "display_name": "Load Images From Folder (KJ)", "description": "Loads images from a folder into a batch, images are resized and loaded into a batch.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "MergeImageChannels": {"input": {"required": {"red": ["IMAGE"], "green": ["IMAGE"], "blue": ["IMAGE"]}, "optional": {"alpha": ["MASK", {"default": null}]}}, "input_order": {"required": ["red", "green", "blue"], "optional": ["alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MergeImageChannels", "display_name": "Merge Image Channels", "description": "\nMerges channel data into an image.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "PadImageBatchInterleaved": {"input": {"required": {"images": ["IMAGE"], "empty_frames_per_image": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "pad_frame_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "add_after_last": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "empty_frames_per_image", "pad_frame_value", "add_after_last"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "PadImageBatchInterleaved", "display_name": "Pad Image Batch Interleaved", "description": "\nInserts empty frames between the images in a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "PreviewAnimation": {"input": {"required": {"fps": ["FLOAT", {"default": 8.0, "min": 0.01, "max": 1000.0, "step": 0.01}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["fps"], "optional": ["images", "masks"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAnimation", "display_name": "Preview Animation", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "RemapImageRange": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "clamp": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "min", "max", "clamp"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapImageRange", "display_name": "Remap Image Range", "description": "\nRemaps the image values to the specified range. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ReverseImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReverseImageBatch", "display_name": "Reverse Image Batch", "description": "\nReverses the order of the images in a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ReplaceImagesInBatch": {"input": {"required": {"start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}]}, "optional": {"original_images": ["IMAGE"], "replacement_images": ["IMAGE"], "original_masks": ["MASK"], "replacement_masks": ["MASK"]}}, "input_order": {"required": ["start_index"], "optional": ["original_images", "replacement_images", "original_masks", "replacement_masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ReplaceImagesInBatch", "display_name": "Replace Images In Batch", "description": "\nReplaces the images in a batch, starting from the specified start index,  \nwith the replacement images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "SaveImageWithAlpha": {"input": {"required": {"images": ["IMAGE"], "mask": ["MASK"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "mask", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWithAlpha", "display_name": "Save Image With Alpha", "description": "\nSaves an image and mask as .PNG with the mask as the alpha channel. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "SaveImageKJ": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "output_folder": ["STRING", {"default": "output", "tooltip": "The folder to save the images to."}]}, "optional": {"caption_file_extension": ["STRING", {"default": ".txt", "tooltip": "The extension for the caption file."}], "caption": ["STRING", {"forceInput": true, "tooltip": "string to save as .txt file"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "output_folder"], "optional": ["caption_file_extension", "caption"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveImageKJ", "display_name": "Save Image KJ", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "ShuffleImageBatch": {"input": {"required": {"images": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["images", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShuffleImageBatch", "display_name": "Shuffle Image Batch", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "SplitImageChannels": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["red", "green", "blue", "mask"], "name": "SplitImageChannels", "display_name": "Split Image Channels", "description": "\nSplits image channels into images where the selected channel  \nis repeated for all channels, and the alpha as a mask. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "TransitionImagesMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_type": [["horizontal slide", "vertical slide", "box", "circle", "horizontal door", "vertical door", "fade"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "reverse": ["BOOLEAN", {"default": false}], "device": [["CPU", "GPU"], {"default": "CPU"}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "interpolation", "transition_type", "transitioning_frames", "blur_radius", "reverse", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TransitionImagesMulti", "display_name": "Transition Images Multi", "description": "\nCreates transitions between images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "TransitionImagesInBatch": {"input": {"required": {"images": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_type": [["horizontal slide", "vertical slide", "box", "circle", "horizontal door", "vertical door", "fade"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "reverse": ["BOOLEAN", {"default": false}], "device": [["CPU", "GPU"], {"default": "CPU"}]}}, "input_order": {"required": ["images", "interpolation", "transition_type", "transitioning_frames", "blur_radius", "reverse", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TransitionImagesInBatch", "display_name": "Transition Images In Batch", "description": "\nCreates transitions between images in a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "BatchCropFromMask": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["original_images", "cropped_images", "bboxes", "width", "height"], "name": "BatchCropFromMask", "display_name": "Batch Crop From Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchCropFromMaskAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "MASK", "IMAGE", "MASK", "BBOX", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["original_images", "cropped_images", "cropped_masks", "combined_crop_image", "combined_crop_masks", "bboxes", "combined_bounding_box", "bbox_width", "bbox_height"], "name": "BatchCropFromMaskAdvanced", "display_name": "Batch Crop From Mask Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "FilterZeroMasksAndCorrespondingImages": {"input": {"required": {"masks": ["MASK"]}, "optional": {"original_images": ["IMAGE"]}}, "input_order": {"required": ["masks"], "optional": ["original_images"]}, "output": ["MASK", "IMAGE", "IMAGE", "INDEXES"], "output_is_list": [false, false, false, false], "output_name": ["non_zero_masks_out", "non_zero_mask_images_out", "zero_mask_images_out", "zero_mask_images_out_indexes"], "name": "FilterZeroMasksAndCorrespondingImages", "display_name": "FilterZeroMasksAndCorrespondingImages", "description": "\nFilter out all the empty (i.e. all zero) mask in masks  \nAlso filter out all the corresponding images in original_images by indexes if provide  \n  \noriginal_images (optional): If provided, need have same length as masks.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "InsertImageBatchByIndexes": {"input": {"required": {"images": ["IMAGE"], "images_to_insert": ["IMAGE"], "insert_indexes": ["INDEXES"]}}, "input_order": {"required": ["images", "images_to_insert", "insert_indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images_after_insert"], "name": "InsertImageBatchByIndexes", "display_name": "Insert Image Batch By Indexes", "description": "\nThis node is designed to be use with node FilterZeroMasksAndCorrespondingImages\nIt inserts the images_to_insert into images according to insert_indexes\n\nReturns:\n    images_after_insert: updated original images with origonal sequence order\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "BatchUncrop": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "border_top": ["BOOLEAN", {"default": true}], "border_bottom": ["BOOLEAN", {"default": true}], "border_left": ["BOOLEAN", {"default": true}], "border_right": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["original_images", "cropped_images", "bboxes", "border_blending", "crop_rescale", "border_top", "border_bottom", "border_left", "border_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncrop", "display_name": "Batch Uncrop", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchUncropAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "cropped_masks": ["MASK"], "combined_crop_mask": ["MASK"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "use_combined_mask": ["BOOLEAN", {"default": false}], "use_square_mask": ["BOOLEAN", {"default": true}]}, "optional": {"combined_bounding_box": ["BBOX", {"default": null}]}}, "input_order": {"required": ["original_images", "cropped_images", "cropped_masks", "combined_crop_mask", "bboxes", "border_blending", "crop_rescale", "use_combined_mask", "use_square_mask"], "optional": ["combined_bounding_box"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncropAdvanced", "display_name": "Batch Uncrop Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "SplitBboxes": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["BBOX", "BBOX"], "output_is_list": [false, false], "output_name": ["bboxes_a", "bboxes_b"], "name": "SplitBboxes", "display_name": "Split Bboxes", "description": "\nSplits the specified bbox list at the given index into two lists.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BboxToInt": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["x_min", "y_min", "width", "height", "center_x", "center_y"], "name": "BboxToInt", "display_name": "Bbox To Int", "description": "\nReturns selected index from bounding box list as integers.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BboxVisualize": {"input": {"required": {"images": ["IMAGE"], "bboxes": ["BBOX"], "line_width": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["images", "bboxes", "line_width"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "BboxVisualize", "display_name": "Bbox Visualize", "description": "\nVisualizes the specified bbox on the image.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "GenerateNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 4096, "step": 0.01}], "constant_batch_noise": ["BOOLEAN", {"default": false}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"model": ["MODEL"], "sigmas": ["SIGMAS"], "latent_channels": [["4", "16"]], "shape": [["BCHW", "BCTHW", "BTCHW"]]}}, "input_order": {"required": ["width", "height", "batch_size", "seed", "multiplier", "constant_batch_noise", "normalize"], "optional": ["model", "sigmas", "latent_channels", "shape"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GenerateNoise", "display_name": "Generate Noise", "description": "\nGenerates noise for injection or to be used as empty latents on samplers with add_noise off.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "FlipSigmasAdjusted": {"input": {"required": {"sigmas": ["SIGMAS"], "divide_by_last_sigma": ["BOOLEAN", {"default": false}], "divide_by": ["FLOAT", {"default": 1, "min": 1, "max": 255, "step": 0.01}], "offset_by": ["INT", {"default": 1, "min": -100, "max": 100, "step": 1}]}}, "input_order": {"required": ["sigmas", "divide_by_last_sigma", "divide_by", "offset_by"]}, "output": ["SIGMAS", "STRING"], "output_is_list": [false, false], "output_name": ["SIGMAS", "sigmas_string"], "name": "FlipSigmasAdjusted", "display_name": "Flip Sigmas Adjusted", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "InjectNoiseToLatent": {"input": {"required": {"latents": ["LATENT"], "strength": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 200.0, "step": 0.0001}], "noise": ["LATENT"], "normalize": ["BOOLEAN", {"default": false}], "average": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"], "mix_randn_amount": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["latents", "strength", "noise", "normalize", "average"], "optional": ["mask", "mix_randn_amount", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectNoiseToLatent", "display_name": "Inject Noise To Latent", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "CustomSigmas": {"input": {"required": {"sigmas_string": ["STRING", {"default": "14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029", "multiline": true}], "interpolate_to_steps": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["sigmas_string", "interpolate_to_steps"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "CustomSigmas", "display_name": "Custom Sigmas", "description": "\nCreates a sigmas tensor from a string of comma separated values.  \nExamples: \n   \nNvidia's optimized AYS 10 step schedule for SD 1.5:  \n14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029  \nSDXL:   \n14.615, 6.315, 3.771, 2.181, 1.342, 0.862, 0.555, 0.380, 0.234, 0.113, 0.029  \nSVD:  \n700.00, 54.5, 15.886, 7.977, 4.248, 1.789, 0.981, 0.403, 0.173, 0.034, 0.002  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "StringToFloatList": {"input": {"required": {"string": ["STRING", {"default": "1, 2, 3", "multiline": true}]}}, "input_order": {"required": ["string"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "StringToFloatList", "display_name": "String to Float List", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "WidgetToString": {"input": {"required": {"id": ["INT", {"default": 0, "min": 0, "max": 100000, "step": 1}], "widget_name": ["STRING", {"multiline": false}], "return_all": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*"], "node_title": ["STRING", {"multiline": false}], "allowed_float_decimals": ["INT", {"default": 2, "min": 0, "max": 10, "tooltip": "Number of decimal places to display for float values"}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["id", "widget_name", "return_all"], "optional": ["any_input", "node_title", "allowed_float_decimals"], "hidden": ["extra_pnginfo", "prompt", "unique_id"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "WidgetToString", "display_name": "Widget To String", "description": "\nSelects a node and it's specified widget and outputs the value as a string.  \nIf no node id or title is provided it will use the 'any_input' link and use that node.  \nTo see node id's, enable node id display from Manager badge menu.  \nAlternatively you can search with the node title. Node titles ONLY exist if they  \nare manually edited!  \nThe 'any_input' is required for making sure the node you want the value from exists in the workflow.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "SaveStringKJ": {"input": {"required": {"string": ["STRING", {"forceInput": true, "tooltip": "string to save as .txt file"}], "filename_prefix": ["STRING", {"default": "text", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "output_folder": ["STRING", {"default": "output", "tooltip": "The folder to save the images to."}]}, "optional": {"file_extension": ["STRING", {"default": ".txt", "tooltip": "The extension for the caption file."}]}}, "input_order": {"required": ["string", "filename_prefix", "output_folder"], "optional": ["file_extension"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveStringKJ", "display_name": "Save String KJ", "description": "Saves the input string to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": true}, "DummyOut": {"input": {"required": {"any_input": ["*"]}}, "input_order": {"required": ["any_input"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "DummyOut", "display_name": "Dummy Out", "description": "\nDoes nothing, used to trigger generic workflow output.    \nA way to get previews in the UI without saving anything to disk.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": true}, "GetLatentsFromBatchIndexed": {"input": {"required": {"latents": ["LATENT"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}], "latent_format": [["BCHW", "BTCHW", "BCTHW"], {"default": "BCHW"}]}}, "input_order": {"required": ["latents", "indexes", "latent_format"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GetLatentsFromBatchIndexed", "display_name": "Get Latents From Batch Indexed", "description": "\nSelects and returns the latents at the specified indices as an latent batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "ScaleBatchPromptSchedule": {"input": {"required": {"input_str": ["STRING", {"forceInput": true, "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"}], "old_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}], "new_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["input_str", "old_frame_count", "new_frame_count"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ScaleBatchPromptSchedule", "display_name": "Scale Batch Prompt Schedule", "description": "\nScales a batch schedule from Fizz' nodes BatchPromptSchedule\nto a different frame count.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "CameraPoseVisualizer": {"input": {"required": {"pose_file_path": ["STRING", {"default": "", "multiline": false}], "base_xval": ["FLOAT", {"default": 0.2, "min": 0, "max": 100, "step": 0.01}], "zval": ["FLOAT", {"default": 0.3, "min": 0, "max": 100, "step": 0.01}], "scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 10.0, "step": 0.01}], "use_exact_fx": ["BOOLEAN", {"default": false}], "relative_c2w": ["BOOLEAN", {"default": true}], "use_viewer": ["BOOLEAN", {"default": false}]}, "optional": {"cameractrl_poses": ["CAMERACTRL_POSES", {"default": null}]}}, "input_order": {"required": ["pose_file_path", "base_xval", "zval", "scale", "use_exact_fx", "relative_c2w", "use_viewer"], "optional": ["cameractrl_poses"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CameraPoseVisualizer", "display_name": "Camera Pose Visualizer", "description": "\nVisualizes the camera poses, from Animatediff-Evolved CameraCtrl Pose  \nor a .txt file with RealEstate camera intrinsics and coordinates, in a 3D plot. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "AppendStringsToList": {"input": {"required": {"string1": ["STRING", {"default": "", "forceInput": true}], "string2": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["string1", "string2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "AppendStringsToList", "display_name": "Append Strings To List", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "JoinStrings": {"input": {"required": {"string1": ["STRING", {"default": "", "forceInput": true}], "string2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}]}}, "input_order": {"required": ["string1", "string2", "delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JoinStrings", "display_name": "Join Strings", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "JoinStringMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "string_1": ["STRING", {"default": "", "forceInput": true}], "string_2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}], "return_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "string_1", "string_2", "delimiter", "return_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "JoinStringMulti", "display_name": "Join String Multi", "description": "\nCreates single string, or a list of strings, from  \nmultiple input strings.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "SomethingToString": {"input": {"required": {"input": ["*"]}, "optional": {"prefix": ["STRING", {"default": ""}], "suffix": ["STRING", {"default": ""}]}}, "input_order": {"required": ["input"], "optional": ["prefix", "suffix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SomethingToString", "display_name": "Something To String", "description": "\nConverts any type to a string.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "Sleep": {"input": {"required": {"input": ["*"], "minutes": ["INT", {"default": 0, "min": 0, "max": 1439}], "seconds": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 59.99, "step": 0.01}]}}, "input_order": {"required": ["input", "minutes", "seconds"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Sleep", "display_name": "Sleep", "description": "\nDelays the execution for the input amount of time.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "VRAM_Debug": {"input": {"required": {"empty_cache": ["BOOLEAN", {"default": true}], "gc_collect": ["BOOLEAN", {"default": true}], "unload_all_models": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*"], "image_pass": ["IMAGE"], "model_pass": ["MODEL"]}}, "input_order": {"required": ["empty_cache", "gc_collect", "unload_all_models"], "optional": ["any_input", "image_pass", "model_pass"]}, "output": ["*", "IMAGE", "MODEL", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["any_output", "image_pass", "model_pass", "freemem_before", "freemem_after"], "name": "VRAM_Debug", "display_name": "VRAM Debug", "description": "\nReturns the inputs unchanged, they are only used as triggers,  \nand performs comfy model management functions and garbage collection,  \nreports free VRAM before and after the operations.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "EmptyLatentImagePresets": {"input": {"required": {"dimensions": [["512 x 512 (1:1)", "768 x 512 (1.5:1)", "960 x 512 (1.875:1)", "1024 x 512 (2:1)", "1024 x 576 (1.778:1)", "1536 x 640 (2.4:1)", "1344 x 768 (1.75:1)", "1216 x 832 (1.46:1)", "1152 x 896 (1.286:1)", "1024 x 1024 (1:1)"], {"default": "512 x 512 (1:1)"}], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImagePresets", "display_name": "Empty Latent Image Presets", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "EmptyLatentImageCustomPresets": {"input": {"required": {"dimensions": [[]], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImageCustomPresets", "display_name": "Empty Latent Image Custom Presets", "description": "\nGenerates an empty latent image with the specified dimensions.  \nThe choices are loaded from 'custom_dimensions.json' in the nodes folder.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "ModelPassThrough": {"input": {"required": {}, "optional": {"model": ["MODEL"]}}, "input_order": {"required": [], "optional": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelPassThrough", "display_name": "ModelPass", "description": "\n    Simply passes through the model,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "ModelSaveKJ": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}], "model_key_prefix": ["STRING", {"default": "model.diffusion_model."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix", "model_key_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSaveKJ", "display_name": "Model Save KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "advanced/model_merging", "output_node": true}, "SetShakkerLabsUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "canny", "tile", "depth", "blur", "pose", "gray", "low quality"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetShakkerLabsUnionControlNetType", "display_name": "Set Shakker Labs Union ControlNet Type", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "conditioning/controlnet", "output_node": false}, "StyleModelApplyAdvanced": {"input": {"required": {"conditioning": ["CONDITIONING"], "style_model": ["STYLE_MODEL"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "style_model", "clip_vision_output", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StyleModelApplyAdvanced", "display_name": "Style Model Apply Advanced", "description": "StyleModelApply but with strength parameter", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "NormalizedAmplitudeToMask": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_offset": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "size": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape": [["none", "circle", "square", "triangle"], {"default": "none"}], "color": [["white", "amplitude"], {"default": "amplitude"}]}}, "input_order": {"required": ["normalized_amp", "width", "height", "frame_offset", "location_x", "location_y", "size", "shape", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "NormalizedAmplitudeToMask", "display_name": "NormalizedAmplitudeToMask", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates masks based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "NormalizedAmplitudeToFloatList": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"]}}, "input_order": {"required": ["normalized_amp"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "NormalizedAmplitudeToFloatList", "display_name": "NormalizedAmplitudeToFloatList", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates a list of floats from the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "OffsetMaskByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "rotate": ["BOOLEAN", {"default": false}], "angle_multiplier": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}]}}, "input_order": {"required": ["normalized_amp", "mask", "x", "y", "rotate", "angle_multiplier"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMaskByNormalizedAmplitude", "display_name": "OffsetMaskByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nOffsets masks based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "ImageTransformByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "zoom_scale": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}], "x_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "y_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "cumulative": ["BOOLEAN", {"default": false}], "image": ["IMAGE"]}}, "input_order": {"required": ["normalized_amp", "zoom_scale", "x_offset", "y_offset", "cumulative", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformByNormalizedAmplitude", "display_name": "ImageTransformByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nTransforms image based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "AudioConcatenate": {"input": {"required": {"audio1": ["AUDIO"], "audio2": ["AUDIO"], "direction": [["right", "left"], {"default": "right"}]}}, "input_order": {"required": ["audio1", "audio2", "direction"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "AudioConcatenate", "display_name": "AudioConcatenate", "description": "\nConcatenates the audio1 to audio2 in the specified direction.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "SplineEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "mask_width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "mask_height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "points_to_sample": ["INT", {"default": 16, "min": 2, "max": 1000, "step": 1}], "sampling_method": [["path", "time", "controlpoints", "speed"], {"default": "time"}], "interpolation": [["cardinal", "monotone", "basis", "linear", "step-before", "step-after", "polar", "polar-reverse"], {"default": "cardinal"}], "tension": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "repeat_output": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "float_output_type": [["list", "pandas series", "tensor"], {"default": "list"}]}, "optional": {"min_value": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "bg_image": ["IMAGE"]}}, "input_order": {"required": ["points_store", "coordinates", "mask_width", "mask_height", "points_to_sample", "sampling_method", "interpolation", "tension", "repeat_output", "float_output_type"], "optional": ["min_value", "max_value", "bg_image"]}, "output": ["MASK", "STRING", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["mask", "coord_str", "float", "count", "normalized_str"], "name": "SplineEditor", "display_name": "Spline Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create values for various   \n## schedules and/or mask batches.  \n\n**Shift + click** to add control point at end.\n**Ctrl + click** to add control point (subdivide) between two points.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end.  \n  \nRight click on canvas for context menu:  \nNEW!:\n- Add new spline\n    - Creates a new spline on same canvas, currently these paths are only outputed  \n      as coordinates.\n- Add single point\n    - Creates a single point that only returns it's current position coords  \n- Delete spline\n    - Deletes the currently selected spline, you can select a spline by clicking on   \n    it's path, or cycle through them with the 'Next spline' -option.  \n\nThese are purely visual options, doesn't affect the output:  \n - Toggle handles visibility\n - Display sample points: display the points to be returned.  \n\n**points_to_sample** value sets the number of samples  \nreturned from the **drawn spline itself**, this is independent from the  \nactual control points, so the interpolation type matters.  \nsampling_method: \n - time: samples along the time axis, used for schedules  \n - path: samples along the path itself, useful for coordinates  \n - controlpoints: samples only the control points themselves  \n\noutput types:\n - mask batch  \n        example compatible nodes: anything that takes masks  \n - list of floats\n        example compatible nodes: IPAdapter weights  \n - pandas series\n        example compatible nodes: anything that takes Fizz'  \n        nodes Batch Value Schedule  \n - torch tensor  \n        example compatible nodes: unknown\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "CreateShapeImageOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 2, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 2, "max": 4096, "step": 1}], "shape_color": ["STRING", {"default": "white"}], "bg_color": ["STRING", {"default": "black"}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}], "trailing": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "border_width": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "border_color": ["STRING", {"default": "black"}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height", "shape_color", "bg_color", "blur_radius", "intensity"], "optional": ["size_multiplier", "trailing", "border_width", "border_color"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "CreateShapeImageOnPath", "display_name": "Create Shape Image On Path", "description": "\nCreates an image or batch of images with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CreateShapeMaskOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height"], "optional": ["size_multiplier"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMaskOnPath", "display_name": "Create Shape Mask On Path", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false, "deprecated": true}, "CreateTextOnPath": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "text", "multiline": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 42}], "alignment": [["left", "center", "right"], {"default": "center"}], "text_color": ["STRING", {"default": "white"}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "frame_width", "frame_height", "font", "font_size", "alignment", "text_color"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "mask_inverted"], "name": "CreateTextOnPath", "display_name": "Create Text On Path", "description": "\nCreates a mask or batch of masks with the specified text.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateGradientFromCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_color": ["STRING", {"default": "white"}], "end_color": ["STRING", {"default": "black"}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["coordinates", "frame_width", "frame_height", "start_color", "end_color", "multiplier"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "CreateGradientFromCoords", "display_name": "Create Gradient From Coords", "description": "\nCreates a gradient image from coordinates.    \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CutAndDragOnPath": {"input": {"required": {"image": ["IMAGE"], "coordinates": ["STRING", {"forceInput": true}], "mask": ["MASK"], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "inpaint": ["BOOLEAN", {"default": true}]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["image", "coordinates", "mask", "frame_width", "frame_height", "inpaint"], "optional": ["bg_image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "CutAndDragOnPath", "display_name": "Cut And Drag On Path", "description": "\nCuts the masked area from the image, and drags it along the path. If inpaint is enabled, and no bg_image is provided, the cut area is filled using cv2 TELEA algorithm.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GradientToFloat": {"input": {"required": {"image": ["IMAGE"], "steps": ["INT", {"default": 10, "min": 2, "max": 10000, "step": 1}]}}, "input_order": {"required": ["image", "steps"]}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["float_x", "float_y"], "name": "GradientToFloat", "display_name": "Gradient To Float", "description": "\nCalculates list of floats from image.    \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "WeightScheduleExtend": {"input": {"required": {"input_values_1": ["FLOAT", {"default": 0.0, "forceInput": true}], "input_values_2": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "match_input"}]}}, "input_order": {"required": ["input_values_1", "input_values_2", "output_type"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "WeightScheduleExtend", "display_name": "Weight Schedule Extend", "description": "\nExtends, and converts if needed, different value lists/series  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "MaskOrImageToWeight": {"input": {"required": {"output_type": [["list", "pandas series", "tensor", "string"], {"default": "list"}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["output_type"], "optional": ["images", "masks"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "STRING"], "name": "MaskOrImageToWeight", "display_name": "Mask Or Image To Weight", "description": "\nGets the mean values from mask or image batch  \nand returns that as the selected output type.   \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "WeightScheduleConvert": {"input": {"required": {"input_values": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "list"}], "invert": ["BOOLEAN", {"default": false}], "repeat": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}]}, "optional": {"remap_to_frames": ["INT", {"default": 0}], "interpolation_curve": ["FLOAT", {"forceInput": true}], "remap_values": ["BOOLEAN", {"default": false}], "remap_min": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000.0, "step": 0.01}], "remap_max": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000.0, "step": 0.01}]}}, "input_order": {"required": ["input_values", "output_type", "invert", "repeat"], "optional": ["remap_to_frames", "interpolation_curve", "remap_values", "remap_min", "remap_max"]}, "output": ["FLOAT", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "STRING", "INT"], "name": "WeightScheduleConvert", "display_name": "Weight Schedule Convert", "description": "\nConverts different value lists/series to another type.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "FloatToMask": {"input": {"required": {"input_values": ["FLOAT", {"forceInput": true, "default": 0}], "width": ["INT", {"default": 100, "min": 1}], "height": ["INT", {"default": 100, "min": 1}]}}, "input_order": {"required": ["input_values", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FloatToMask", "display_name": "Float To Mask", "description": "\nGenerates a batch of masks based on the input float values.\nThe batch size is determined by the length of the input float values.\nEach mask is generated with the specified width and height.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "FloatToSigmas": {"input": {"required": {"float_list": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float_list"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FloatToSigmas", "display_name": "Float To Sigmas", "description": "\nCreates a sigmas tensor from list of float values.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "SigmasToFloat": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "SigmasToFloat", "display_name": "Sigmas To Float", "description": "\nCreates a float list from sigmas tensors.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "PlotCoordinates": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "title", "multiline": false}], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "bbox_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "bbox_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "width", "height", "bbox_width", "bbox_height"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["images", "width", "height", "bbox_width", "bbox_height"], "name": "PlotCoordinates", "display_name": "Plot Coordinates", "description": "\nPlots coordinates to sequence of images using Matplotlib.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "InterpolateCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "interpolation_curve": ["FLOAT", {"forceInput": true}]}}, "input_order": {"required": ["coordinates", "interpolation_curve"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["coordinates"], "name": "InterpolateCoords", "display_name": "Interpolate Coords", "description": "\nInterpolates coordinates based on a curve.   \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "PointsEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "neg_coordinates": ["STRING", {"multiline": false}], "bbox_store": ["STRING", {"multiline": false}], "bboxes": ["STRING", {"multiline": false}], "bbox_format": [["xyxy", "xywh"]], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["points_store", "coordinates", "neg_coordinates", "bbox_store", "bboxes", "bbox_format", "width", "height", "normalize"], "optional": ["bg_image"]}, "output": ["STRING", "STRING", "BBOX", "MASK", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["positive_coords", "negative_coords", "bbox", "bbox_mask", "cropped_image"], "name": "PointsEditor", "display_name": "Points Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create coordinates\n\n**Shift + click** to add a positive (green) point.\n**Shift + right click** to add a negative (red) point.\n**Ctrl + click** to draw a box.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end of the points array.  \n  \nTo add an image select the node and copy/paste or drag in the image.  \nOr from the bg_image input on queue (first frame of the batch).  \n\n**THE IMAGE IS SAVED TO THE NODE AND WORKFLOW METADATA**  \nyou can clear the image from the context menu by right clicking on the canvas  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "SoundReactive": {"input": {"required": {"sound_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 99999, "step": 0.01}], "start_range_hz": ["INT", {"default": 150, "min": 0, "max": 9999, "step": 1}], "end_range_hz": ["INT", {"default": 2000, "min": 0, "max": 9999, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 99999, "step": 0.01}], "smoothing_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "normalize": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["sound_level", "start_range_hz", "end_range_hz", "multiplier", "smoothing_factor", "normalize"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["sound_level", "sound_level_int"], "name": "SoundReactive", "display_name": "Sound Reactive", "description": "\nReacts to the sound level of the input.  \nUses your browsers sound input options and requires.  \nMeant to be used with realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "StableZero123_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_BatchSchedule", "display_name": "Stable Zero123 Batch Schedule", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "SV3D_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 21, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_BatchSchedule", "display_name": "SV3D Batch Schedule", "description": "\nAllow scheduling of the azimuth and elevation conditions for SV3D.  \nNote that SV3D is still a video model and the schedule needs to always go forward  \nhttps://huggingface.co/stabilityai/sv3d\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "LoadResAdapterNormalization": {"input": {"required": {"model": ["MODEL"], "resadapter_path": [[]]}}, "input_order": {"required": ["model", "resadapter_path"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoadResAdapterNormalization", "display_name": "LoadResAdapterNormalization", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "Superprompt": {"input": {"required": {"instruction_prompt": ["STRING", {"default": "Expand the following prompt to add more detail", "multiline": true}], "prompt": ["STRING", {"default": "", "multiline": true, "forceInput": true}], "max_new_tokens": ["INT", {"default": 128, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["instruction_prompt", "prompt", "max_new_tokens"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Superprompt", "display_name": "Superprompt", "description": "\n# SuperPrompt\nA T5 model fine-tuned on the SuperPrompt dataset for  \nupsampling text prompts to more detailed descriptions.  \nMeant to be used as a pre-generation step for text-to-image  \nmodels that benefit from more detailed prompts.  \nhttps://huggingface.co/roborovski/superprompt-v1\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "GLIGENTextBoxApplyBatchCoords": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "latents": ["LATENT"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"multiline": true}], "width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["conditioning_to", "latents", "clip", "gligen_textbox_model", "coordinates", "text", "width", "height"], "optional": ["size_multiplier"]}, "output": ["CONDITIONING", "IMAGE"], "output_is_list": [false, false], "output_name": ["conditioning", "coord_preview"], "name": "GLIGENTextBoxApplyBatchCoords", "display_name": "GLIGENTextBoxApplyBatchCoords", "description": "\nThis node allows scheduling GLIGEN text box positions in a batch,  \nto be used with AnimateDiff-Evolved. Intended to pair with the  \nSpline Editor -node.  \n\nGLIGEN model can be downloaded through the Manage's \"Install Models\" menu.  \nOr directly from here:  \nhttps://huggingface.co/comfyanonymous/GLIGEN_pruned_safetensors/tree/main  \n  \nInputs:  \n- **latents** input is used to calculate batch size  \n- **clip** is your standard text encoder, use same as for the main prompt  \n- **gligen_textbox_model** connects to GLIGEN Loader  \n- **coordinates** takes a json string of points, directly compatible  \nwith the spline editor node.\n- **text** is the part of the prompt to set position for  \n- **width** and **height** are the size of the GLIGEN bounding box  \n  \nOutputs:\n- **conditioning** goes between to clip text encode and the sampler  \n- **coord_preview** is an optional preview of the coordinates and  \nbounding boxes.\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "Intrinsic_lora_sampling": {"input": {"required": {"model": ["MODEL"], "lora_name": [["intrinsic_lora_sd15_albedo.safetensors", "intrinsic_lora_sd15_depth.safetensors", "intrinsic_lora_sd15_normal.safetensors", "intrinsic_lora_sd15_shading.safetensors", "intrinsic_loras.txt"]], "task": [["depth map", "surface normals", "albedo", "shading"], {"default": "depth map"}], "text": ["STRING", {"multiline": true, "default": ""}], "clip": ["CLIP"], "vae": ["VAE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}, "optional": {"image": ["IMAGE"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["model", "lora_name", "task", "text", "clip", "vae", "per_batch"], "optional": ["image", "optional_latent"]}, "output": ["IMAGE", "LATENT"], "output_is_list": [false, false], "output_name": ["IMAGE", "LATENT"], "name": "Intrinsic_lora_sampling", "display_name": "Intrinsic Lora Sampling", "description": "\nSampler to use the intrinsic loras:  \nhttps://github.com/duxiaodan/intrinsic-lora  \nThese LoRAs are tiny and thus included  \nwith this node pack.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes", "output_node": false}, "CheckpointPerturbWeights": {"input": {"required": {"model": ["MODEL"], "joint_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "final_layer": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "rest_of_the_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["model", "joint_blocks", "final_layer", "rest_of_the_blocks", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "CheckpointPerturbWeights", "display_name": "CheckpointPerturbWeights", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true}, "Screencap_mss": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 10000, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 10000, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Screencap_mss", "display_name": "Screencap mss", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "WebcamCaptureCV2": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "cam_index": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "release": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["x", "y", "width", "height", "cam_index", "release"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "WebcamCaptureCV2", "display_name": "Webcam Capture CV2", "description": "\nCaptures a frame from a webcam using CV2.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "DifferentialDiffusionAdvanced": {"input": {"required": {"model": ["MODEL"], "samples": ["LATENT"], "mask": ["MASK"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["model", "samples", "mask", "multiplier"]}, "output": ["MODEL", "LATENT"], "output_is_list": [false, false], "output_name": ["MODEL", "LATENT"], "name": "DifferentialDiffusionAdvanced", "display_name": "Differential Diffusion Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "_for_testing", "output_node": false}, "DiTBlockLoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}]}, "optional": {"lora_name": [["AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"], {"tooltip": "The name of the LoRA."}], "opt_lora_path": ["STRING", {"forceInput": true, "tooltip": "Absolute path of the LoRA."}], "blocks": ["SELECTEDDITBLOCKS"]}}, "input_order": {"required": ["model", "strength_model"], "optional": ["lora_name", "opt_lora_path", "blocks"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["model", "rank"], "name": "DiTBlockLoraLoader", "display_name": "DiT Block Lora Loader", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model.", "possible rank of the LoRA."]}, "FluxBlockLoraSelect": {"input": {"required": {"double_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37."]}, "output": ["SELECTEDDITBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "FluxBlockLoraSelect", "display_name": "Flux Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "HunyuanVideoBlockLoraSelect": {"input": {"required": {"double_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.38.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.39.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "double_blocks.19.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37.", "single_blocks.38.", "single_blocks.39."]}, "output": ["SELECTEDDITBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "HunyuanVideoBlockLoraSelect", "display_name": "Hunyuan Video Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "Wan21BlockLoraSelect": {"input": {"required": {"blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.38.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "blocks.39.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "blocks.36.", "blocks.37.", "blocks.38.", "blocks.39."]}, "output": ["SELECTEDDITBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "Wan21BlockLoraSelect", "display_name": "Wan21 Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "CustomControlNetWeightsFluxFromList": {"input": {"required": {"list_of_floats": ["FLOAT", {"forceInput": true}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["list_of_floats"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "CustomControlNetWeightsFluxFromList", "display_name": "Custom ControlNet Weights Flux From List", "description": "Creates controlnet weights from a list of floats for Advanced-ControlNet", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/controlnet", "output_node": false}, "CheckpointLoaderKJ": {"input": {"required": {"ckpt_name": [[], {"tooltip": "The name of the checkpoint (model) to load."}], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2", "fp16", "bf16", "fp32"]], "compute_dtype": [["default", "fp16", "bf16", "fp32"], {"default": "default", "tooltip": "The compute dtype to use for the model."}], "patch_cublaslinear": ["BOOLEAN", {"default": false, "tooltip": "Enable or disable the patching, won't take effect on already loaded models!"}], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda", "sageattn_qk_int8_pv_fp8_cuda++"], {"default": false, "tooltip": "Patch comfy attention to use sageattn."}], "enable_fp16_accumulation": ["BOOLEAN", {"default": false, "tooltip": "Enable torch.backends.cuda.matmul.allow_fp16_accumulation, requires pytorch 2.7.0 nightly."}]}}, "input_order": {"required": ["ckpt_name", "weight_dtype", "compute_dtype", "patch_cublaslinear", "sage_attention", "enable_fp16_accumulation"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderKJ", "display_name": "CheckpointLoaderKJ", "description": "Experimental node for patching torch.nn.Linear with CublasLinear.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "DiffusionModelLoaderKJ": {"input": {"required": {"model_name": [[], {"tooltip": "The name of the checkpoint (model) to load."}], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2", "fp16", "bf16", "fp32"]], "compute_dtype": [["default", "fp16", "bf16", "fp32"], {"default": "default", "tooltip": "The compute dtype to use for the model."}], "patch_cublaslinear": ["BOOLEAN", {"default": false, "tooltip": "Enable or disable the patching, won't take effect on already loaded models!"}], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda", "sageattn_qk_int8_pv_fp8_cuda++"], {"default": false, "tooltip": "Patch comfy attention to use sageattn."}], "enable_fp16_accumulation": ["BOOLEAN", {"default": false, "tooltip": "Enable torch.backends.cuda.matmul.allow_fp16_accumulation, requires pytorch 2.7.0 nightly."}]}}, "input_order": {"required": ["model_name", "weight_dtype", "compute_dtype", "patch_cublaslinear", "sage_attention", "enable_fp16_accumulation"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DiffusionModelLoaderKJ", "display_name": "Diffusion Model Loader KJ", "description": "Node for patching torch.nn.Linear with CublasLinear.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "TorchCompileModelFluxAdvanced": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "double_blocks": ["STRING", {"default": "0-18", "multiline": true}], "single_blocks": ["STRING", {"default": "0-37", "multiline": true}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}, "optional": {"dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "double_blocks", "single_blocks", "dynamic"], "optional": ["dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelFluxAdvanced", "display_name": "TorchCompileModelFluxAdvanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "deprecated": true, "experimental": true}, "TorchCompileModelFluxAdvancedV2": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "double_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile double blocks"}], "single_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile single blocks"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}, "optional": {"dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "double_blocks", "single_blocks", "dynamic"], "optional": ["dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelFluxAdvancedV2", "display_name": "TorchCompileModelFluxAdvancedV2", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileModelHyVideo": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}], "compile_single_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile single blocks"}], "compile_double_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile double blocks"}], "compile_txt_in": ["BOOLEAN", {"default": false, "tooltip": "Compile txt_in layers"}], "compile_vector_in": ["BOOLEAN", {"default": false, "tooltip": "Compile vector_in layers"}], "compile_final_layer": ["BOOLEAN", {"default": false, "tooltip": "Compile final layer"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit", "compile_single_blocks", "compile_double_blocks", "compile_txt_in", "compile_vector_in", "compile_final_layer"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelHyVideo", "display_name": "TorchCompileModelHyVideo", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileVAE": {"input": {"required": {"vae": ["VAE"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "compile_encoder": ["BOOLEAN", {"default": true, "tooltip": "Compile encoder"}], "compile_decoder": ["BOOLEAN", {"default": true, "tooltip": "Compile decoder"}]}}, "input_order": {"required": ["vae", "backend", "fullgraph", "mode", "compile_encoder", "compile_decoder"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "TorchCompileVAE", "display_name": "TorchCompileVAE", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileControlNet": {"input": {"required": {"controlnet": ["CONTROL_NET"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}]}}, "input_order": {"required": ["controlnet", "backend", "fullgraph", "mode"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "TorchCompileControlNet", "display_name": "TorchCompileControlNet", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "PatchModelPatcherOrder": {"input": {"required": {"model": ["MODEL"], "patch_order": [["object_patch_first", "weight_patch_first"], {"default": "weight_patch_first", "tooltip": "Patch the comfy patch_model function to load weight patches (LoRAs) before compiling the model"}], "full_load": [["enabled", "disabled", "auto"], {"default": "auto", "tooltip": "Disabling may help with memory issues when loading large models, when changing this you should probably force model reload to avoid issues!"}]}}, "input_order": {"required": ["model", "patch_order", "full_load"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PatchModelPatcherOrder", "display_name": "Patch Model Patcher Order", "description": "Patch the comfy patch_model function patching order, useful for torch.compile (used as object_patch) as it should come last if you want to use LoRAs with compile", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "TorchCompileLTXModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileLTXModel", "display_name": "TorchCompileLTXModel", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileCosmosModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "tooltip": "Set the dynamo cache size limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileCosmosModel", "display_name": "TorchCompileCosmosModel", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileModelWanVideo": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}], "compile_transformer_blocks_only": ["BOOLEAN", {"default": false, "tooltip": "Compile only transformer blocks"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit", "compile_transformer_blocks_only"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelWanVideo", "display_name": "TorchCompileModelWanVideo", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "deprecated": true, "experimental": true}, "TorchCompileModelWanVideoV2": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "compile_transformer_blocks_only": ["BOOLEAN", {"default": true, "tooltip": "Compile only transformer blocks, faster compile and less error prone"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "compile_transformer_blocks_only", "dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelWanVideoV2", "display_name": "TorchCompileModelWanVideoV2", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "PathchSageAttentionKJ": {"input": {"required": {"model": ["MODEL"], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda", "sageattn_qk_int8_pv_fp8_cuda++"], {"default": false, "tooltip": "Global patch comfy attention to use sageattn, once patched to revert back to normal you would need to run this node again with disabled option."}]}}, "input_order": {"required": ["model", "sage_attention"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PathchSageAttentionKJ", "display_name": "Patch Sage Attention KJ", "description": "Experimental node for patching attention mode. This doesn't use the model patching system and thus can't be disabled without running the node again with 'disabled' option.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "LeapfusionHunyuanI2VPatcher": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT"], "index": ["INT", {"default": 0, "min": -1, "max": 1000, "step": 1, "tooltip": "The index of the latent to be replaced. 0 for first frame and -1 for last"}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The start percentage of steps to apply"}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The end percentage of steps to apply"}], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["model", "latent", "index", "start_percent", "end_percent", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LeapfusionHunyuanI2VPatcher", "display_name": "Leapfusion Hunyuan I2V Patcher", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "VAELoaderKJ": {"input": {"required": {"vae_name": [["FLUX1/ae.safetensors", "ae.safetensors"]], "device": [["main_device", "cpu"]], "weight_dtype": [["bf16", "fp16", "fp32"]]}}, "input_order": {"required": ["vae_name", "device", "weight_dtype"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAELoaderKJ", "display_name": "VAELoader KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/vae", "output_node": false}, "ScheduledCFGGuidance": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 100.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "cfg", "start_percent", "end_percent"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "ScheduledCFGGuidance", "display_name": "Scheduled CFG Guidance", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "ApplyRifleXRoPE_HunuyanVideo": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "k": ["INT", {"default": 4, "min": 1, "max": 100, "step": 1, "tooltip": "Index of intrinsic frequency"}]}}, "input_order": {"required": ["model", "latent", "k"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRifleXRoPE_HunuyanVideo", "display_name": "Apply RifleXRoPE HunuyanVideo", "description": "Extends the potential frame count of HunyuanVideo using this method: https://github.com/thu-ml/RIFLEx", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "ApplyRifleXRoPE_WanVideo": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "k": ["INT", {"default": 6, "min": 1, "max": 100, "step": 1, "tooltip": "Index of intrinsic frequency"}]}}, "input_order": {"required": ["model", "latent", "k"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRifleXRoPE_WanVideo", "display_name": "Apply RifleXRoPE WanVideo", "description": "Extends the potential frame count of HunyuanVideo using this method: https://github.com/thu-ml/RIFLEx", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "WanVideoTeaCacheKJ": {"input": {"required": {"model": ["MODEL"], "rel_l1_thresh": ["FLOAT", {"default": 0.275, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "Threshold for to determine when to apply the cache, compromise between speed and accuracy. When using coefficients a good value range is something between 0.2-0.4 for all but 1.3B model, which should be about 10 times smaller, same as when not using coefficients."}], "start_percent": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The start percentage of the steps to use with TeaCache."}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The end percentage of the steps to use with TeaCache."}], "cache_device": [["main_device", "offload_device"], {"default": "offload_device", "tooltip": "Device to cache to"}], "coefficients": [["disabled", "1.3B", "14B", "i2v_480", "i2v_720"], {"default": "i2v_480", "tooltip": "Coefficients for rescaling the relative l1 distance, if disabled the threshold value should be about 10 times smaller than the value used with coefficients."}]}}, "input_order": {"required": ["model", "rel_l1_thresh", "start_percent", "end_percent", "cache_device", "coefficients"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "WanVideoTeaCacheKJ", "display_name": "WanVideo Tea Cache (native)", "description": "\nPatch WanVideo model to use TeaCache. Speeds up inference by caching the output and  \napplying it instead of doing the step.  Best results are achieved by choosing the  \nappropriate coefficients for the model. Early steps should never be skipped, with too  \naggressive values this can happen and the motion suffers. Starting later can help with that too.   \nWhen NOT using coefficients, the threshold value should be  \nabout 10 times smaller than the value used with coefficients.  \n\nOfficial recommended values https://github.com/ali-vilab/TeaCache/tree/main/TeaCache4Wan2.1:\n\n\n<pre style='font-family:monospace'>\n+-------------------+--------+---------+--------+\n|       Model       |  Low   | Medium  |  High  |\n+-------------------+--------+---------+--------+\n| Wan2.1 t2v 1.3B  |  0.05  |  0.07   |  0.08  |\n| Wan2.1 t2v 14B   |  0.14  |  0.15   |  0.20  |\n| Wan2.1 i2v 480P  |  0.13  |  0.19   |  0.26  |\n| Wan2.1 i2v 720P  |  0.18  |  0.20   |  0.30  |\n+-------------------+--------+---------+--------+\n</pre> \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/teacache", "output_node": false, "experimental": true}, "WanVideoEnhanceAVideoKJ": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "weight": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "Strength of the enhance effect"}]}}, "input_order": {"required": ["model", "latent", "weight"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "WanVideoEnhanceAVideoKJ", "display_name": "WanVideo Enhance A Video (native)", "description": "https://github.com/NUS-HPC-AI-Lab/Enhance-A-Video", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "SkipLayerGuidanceWanVideo": {"input": {"required": {"model": ["MODEL"], "blocks": ["STRING", {"default": "10", "multiline": false}], "start_percent": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "blocks", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceWanVideo", "display_name": "Skip Layer Guidance WanVideo", "description": "Simplified skip layer guidance that only skips the uncond on selected blocks", "python_module": "custom_nodes.comfyui-kjnodes", "category": "advanced/guidance", "output_node": false, "experimental": true}, "TimerNodeKJ": {"input": {"required": {"any_input": ["*"], "mode": [["start", "stop"]], "name": ["STRING", {"default": "Timer"}]}, "optional": {"timer": ["TIMER"]}}, "input_order": {"required": ["any_input", "mode", "name"], "optional": ["timer"]}, "output": ["*", "TIMER", "INT"], "output_is_list": [false, false, false], "output_name": ["any_output", "timer", "time"], "name": "TimerNodeKJ", "display_name": "Timer Node KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "HunyuanVideoEncodeKeyframesToCond": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "vae": ["VAE"], "start_frame": ["IMAGE"], "end_frame": ["IMAGE"], "num_frames": ["INT", {"default": 33, "min": 2, "max": 4096, "step": 1}], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to encode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}, "optional": {"negative": ["CONDITIONING"]}}, "input_order": {"required": ["model", "positive", "vae", "start_frame", "end_frame", "num_frames", "tile_size", "overlap", "temporal_size", "temporal_overlap"], "optional": ["negative"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["model", "positive", "negative", "latent"], "name": "HunyuanVideoEncodeKeyframesToCond", "display_name": "HunyuanVideo Encode Keyframes To Cond", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/videomodels", "output_node": false}, "CFGZeroStarAndInit": {"input": {"required": {"model": ["MODEL"], "use_zero_init": ["BOOLEAN", {"default": true}], "zero_init_steps": ["INT", {"default": 0, "min": 0, "tooltip": "for zero init, starts from 0 so first step is always zeroed out if use_zero_init enabled"}]}}, "input_order": {"required": ["model", "use_zero_init", "zero_init_steps"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "CFGZeroStarAndInit", "display_name": "CFG Zero Star/Init", "description": "https://github.com/WeichenFan/CFG-Zero-star", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "ModelPatchTorchSettings": {"input": {"required": {"model": ["MODEL"], "enable_fp16_accumulation": ["BOOLEAN", {"default": false, "tooltip": "Enable torch.backends.cuda.matmul.allow_fp16_accumulation, requires pytorch 2.7.0 nightly."}]}}, "input_order": {"required": ["model", "enable_fp16_accumulation"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelPatchTorchSettings", "display_name": "Model Patch Torch Settings", "description": "Adds callbacks to model to set torch settings before and after running the model.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "WanVideoNAG": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "nag_scale": ["FLOAT", {"default": 11.0, "min": 0.0, "max": 100.0, "step": 0.001, "tooltip": "Strength of negative guidance effect"}], "nag_alpha": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Mixing coefficient in that controls the balance between the normalized guided representation and the original positive representation."}], "nag_tau": ["FLOAT", {"default": 2.5, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "Clipping threshold that controls how much the guided attention can deviate from the positive attention."}]}}, "input_order": {"required": ["model", "conditioning", "nag_scale", "nag_alpha", "nag_tau"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "WanVideoNAG", "display_name": "WanVideoNAG", "description": "https://github.com/ChenDarYen/Normalized-Attention-Guidance", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "CreateInstanceDiffusionTracking": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "class_name": ["STRING", {"default": "class_name"}], "class_id": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "prompt": ["STRING", {"default": "prompt", "multiline": true}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}], "fit_in_frame": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["coordinates", "width", "height", "bbox_width", "bbox_height", "class_name", "class_id", "prompt"], "optional": ["size_multiplier", "fit_in_frame"]}, "output": ["TRACKING", "STRING", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tracking", "prompt", "width", "height", "bbox_width", "bbox_height"], "name": "CreateInstanceDiffusionTracking", "display_name": "CreateInstanceDiffusionTracking", "description": "\nCreates tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n  \nInstanceDiffusion prompt format:  \n\"class_id.class_name\": \"prompt\",  \nfor example:  \n\"1.head\": \"((head))\",  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "AppendInstanceDiffusionTracking": {"input": {"required": {"tracking_1": ["TRACKING", {"forceInput": true}], "tracking_2": ["TRACKING", {"forceInput": true}]}, "optional": {"prompt_1": ["STRING", {"default": "", "forceInput": true}], "prompt_2": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["tracking_1", "tracking_2"], "optional": ["prompt_1", "prompt_2"]}, "output": ["TRACKING", "STRING"], "output_is_list": [false, false], "output_name": ["tracking", "prompt"], "name": "AppendInstanceDiffusionTracking", "display_name": "AppendInstanceDiffusionTracking", "description": "\nAppends tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "DrawInstanceDiffusionTracking": {"input": {"required": {"image": ["IMAGE"], "tracking": ["TRACKING", {"forceInput": true}], "box_line_width": ["INT", {"default": 2, "min": 1, "max": 10, "step": 1}], "draw_text": ["BOOLEAN", {"default": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 20}]}}, "input_order": {"required": ["image", "tracking", "box_line_width", "draw_text", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "DrawInstanceDiffusionTracking", "display_name": "DrawInstanceDiffusionTracking", "description": "\nDraws the tracking data from  \nCreateInstanceDiffusionTracking -node.\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "SAMLoader": {"input": {"required": {"model_name": [["sam_vit_b_01ec64.pth", "sam_vit_h_4b8939.pth"], {"tooltip": "The detection accuracy varies depending on the SAM model. ESAM can only be used if ComfyUI-YoloWorld-EfficientSAM is installed."}], "device_mode": [["AUTO", "Prefer GPU", "CPU"], {"tooltip": "AUTO: Only applicable when a GPU is available. It temporarily loads the SAM_MODEL into VRAM only when the detection function is used.\nPrefer GPU: Tries to keep the SAM_MODEL on the GPU whenever possible. This can be used when there is sufficient VRAM available.\nCPU: Always loads only on the CPU."}]}}, "input_order": {"required": ["model_name", "device_mode"]}, "output": ["SAM_MODEL"], "output_is_list": [false], "output_name": ["SAM_MODEL"], "name": "SAMLoader", "display_name": "SAMLoader (Impact)", "description": "Load the SAM (Segment Anything) model. This can be used in places that utilize SAM detection functionality, such as SAMDetector or SimpleDetector.\nThe SAM detection functionality in Impact Pack must use the SAM_MODEL loaded through this node.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack", "output_node": false}, "CLIPSegDetectorProvider": {"input": {"required": {"text": ["STRING", {"multiline": false, "tooltip": "Enter the targets to be detected, separated by commas"}], "blur": ["FLOAT", {"min": 0, "max": 15, "step": 0.1, "default": 7, "tooltip": "Blurs the detected mask"}], "threshold": ["FLOAT", {"min": 0, "max": 1, "step": 0.05, "default": 0.4, "tooltip": "Detects only areas that are certain above the threshold."}], "dilation_factor": ["INT", {"min": 0, "max": 10, "step": 1, "default": 4, "tooltip": "Dilates the detected mask."}]}}, "input_order": {"required": ["text", "blur", "threshold", "dilation_factor"]}, "output": ["BBOX_DETECTOR"], "output_is_list": [false], "output_name": ["BBOX_DETECTOR"], "name": "CLIPSegDetectorProvider", "display_name": "CLIPSegDetectorProvider", "description": "Provides a detection function using CLIPSeg, which generates masks based on text prompts.\nTo use this node, the CLIPSeg custom node must be installed.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ONNXDetectorProvider": {"input": {"required": {"model_name": [[]]}}, "input_order": {"required": ["model_name"]}, "output": ["BBOX_DETECTOR"], "output_is_list": [false], "output_name": ["BBOX_DETECTOR"], "name": "ONNXDetectorProvider", "display_name": "ONNXDetectorProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack", "output_node": false}, "BitwiseAndMaskForEach": {"input": {"required": {"base_segs": ["SEGS"], "mask_segs": ["SEGS"]}}, "input_order": {"required": ["base_segs", "mask_segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "BitwiseAndMaskForEach", "display_name": "Pixelwise(SEGS & SEGS)", "description": "Retains only the overlapping areas between the masks included in base_segs and the mask regions of mask_segs. SEGS with no overlapping mask areas are filtered out.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "SubtractMaskForEach": {"input": {"required": {"base_segs": ["SEGS"], "mask_segs": ["SEGS"]}}, "input_order": {"required": ["base_segs", "mask_segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SubtractMaskForEach", "display_name": "Pixelwise(SEGS - SEGS)", "description": "Removes only the overlapping areas between the masks included in base_segs and the mask regions of mask_segs. SEGS with no overlapping mask areas are filtered out.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "DetailerForEach": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL", {"tooltip": "If the `ImpactDummyInput` is connected to the model, the inference stage is skipped."}], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "wildcard", "cycle"], "optional": ["detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DetailerForEach", "display_name": "Detailer (SEGS)", "description": "It enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachDebug": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL", {"tooltip": "If the `ImpactDummyInput` is connected to the model, the inference stage is skipped."}], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "wildcard", "cycle"], "optional": ["detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, true, true, true, true], "output_name": ["image", "cropped", "cropped_refined", "cropped_refined_alpha", "cnet_images"], "name": "DetailerForEachDebug", "display_name": "DetailerDebug (SEGS)", "description": "It enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the basic_pipe, the inference stage is skipped."}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "basic_pipe", "wildcard", "refiner_ratio", "cycle"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"], "output_is_list": [false, false, false, true], "output_name": ["image", "segs", "basic_pipe", "cnet_images"], "name": "DetailerForEachPipe", "display_name": "Detailer (SEGS/pipe)", "description": "It enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachDebugPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the basic_pipe, the inference stage is skipped."}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "basic_pipe", "wildcard", "refiner_ratio", "cycle"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, true, true, true, true], "output_name": ["image", "segs", "basic_pipe", "cropped", "cropped_refined", "cropped_refined_alpha", "cnet_images"], "name": "DetailerForEachDebugPipe", "display_name": "DetailerDebug (SEGS/pipe)", "description": "It enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "DetailerForEachPipeForAnimateDiff": {"input": {"required": {"image_frames": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the basic_pipe, the inference stage is skipped."}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"], "refiner_basic_pipe_opt": ["BASIC_PIPE"], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image_frames", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "basic_pipe", "refiner_ratio"], "optional": ["detailer_hook", "refiner_basic_pipe_opt", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"], "output_is_list": [false, false, false, true], "output_name": ["image", "segs", "basic_pipe", "cnet_images"], "name": "DetailerForEachPipeForAnimateDiff", "display_name": "Detailer For Video (SEGS/pipe)", "description": "This node enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.\nThis node is a specialized detailer node for enhancing video details, such as in AnimateDiff. It can handle cases where the masks contained in SEGS serve as batch masks spanning multiple frames.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "SAMDetectorCombined": {"input": {"required": {"sam_model": ["SAM_MODEL", {"tooltip": "Segment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input."}], "segs": ["SEGS", {"tooltip": "This is the segment information detected by the detector.\nIt refines the Mask through the SAM (Segment Anything) detector for all areas pointed to by SEGS, and combines all Masks to return as a single Mask."}], "image": ["IMAGE", {"tooltip": "It is assumed that segs contains only the information about the detected areas, and does not include the image. SAM (Segment Anything) operates by referencing this image."}], "detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"], {"tooltip": "It is recommended to use only center-1.\nWhen refining the mask of SEGS with the SAM (Segment Anything) model, center-1 uses only the rectangular area of SEGS and a single point at the exact center as hints.\nOther options were added during the experimental stage and do not work well."}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1, "tooltip": "Set the value to dilate the result mask. If the value is negative, it erodes the mask."}], "threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Set the sensitivity threshold for the mask detected by SAM (Segment Anything). A higher value generates a more specific mask with a narrower range. For example, when pointing to a person's area, it might detect clothes, which is a narrower range, instead of the entire person."}], "bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "tooltip": "When performing SAM (Segment Anything) detection within the SEGS area, the rectangular area of SEGS is expanded and used as a hint."}], "mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "When detection_hint is mask-area, the mask of SEGS is used as a point hint for SAM (Segment Anything).\nIn this case, only the areas of the mask with brightness values equal to or greater than mask_hint_threshold are used as hints."}], "mask_hint_use_negative": [["False", "Small", "Outter"], {"tooltip": "When detecting with SAM (Segment Anything), negative hints are applied as follows:\nSmall: When the SEGS is smaller than 10 pixels in size\nOuter: Sampling the image area outside the SEGS region at regular intervals"}]}}, "input_order": {"required": ["sam_model", "segs", "image", "detection_hint", "dilation", "threshold", "bbox_expansion", "mask_hint_threshold", "mask_hint_use_negative"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SAMDetectorCombined", "display_name": "SAMDetector (combined)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "SAMDetectorSegmented": {"input": {"required": {"sam_model": ["SAM_MODEL", {"tooltip": "Segment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input."}], "segs": ["SEGS", {"tooltip": "This is the segment information detected by the detector.\nFor the SEGS region, the masks detected by SAM (Segment Anything) are created as a unified mask and a batch of individual masks."}], "image": ["IMAGE", {"tooltip": "It is assumed that segs contains only the information about the detected areas, and does not include the image. SAM (Segment Anything) operates by referencing this image."}], "detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"], {"tooltip": "It is recommended to use only center-1.\nWhen refining the mask of SEGS with the SAM (Segment Anything) model, center-1 uses only the rectangular area of SEGS and a single point at the exact center as hints.\nOther options were added during the experimental stage and do not work well."}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1, "tooltip": "Set the value to dilate the result mask. If the value is negative, it erodes the mask."}], "threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "tooltip": "When performing SAM (Segment Anything) detection within the SEGS area, the rectangular area of SEGS is expanded and used as a hint."}], "mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "When detection_hint is mask-area, the mask of SEGS is used as a point hint for SAM (Segment Anything).\nIn this case, only the areas of the mask with brightness values equal to or greater than mask_hint_threshold are used as hints."}], "mask_hint_use_negative": [["False", "Small", "Outter"], {"tooltip": "When detecting with SAM (Segment Anything), negative hints are applied as follows:\nSmall: When the SEGS is smaller than 10 pixels in size\nOuter: Sampling the image area outside the SEGS region at regular intervals"}]}}, "input_order": {"required": ["sam_model", "segs", "image", "detection_hint", "dilation", "threshold", "bbox_expansion", "mask_hint_threshold", "mask_hint_use_negative"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["combined_mask", "batch_masks"], "name": "SAMDetectorSegmented", "display_name": "SAMDetector (segmented)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "FaceDetailer": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL", {"tooltip": "If the `ImpactDummyInput` is connected to the model, the inference stage is skipped."}], "clip": ["CLIP"], "vae": ["VAE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "model", "clip", "vae", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "noise_mask", "force_inpaint", "bbox_threshold", "bbox_dilation", "bbox_crop_factor", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative", "drop_size", "bbox_detector", "wildcard", "cycle"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook", "inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"], "output_is_list": [false, true, true, false, false, true], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "mask", "detailer_pipe", "cnet_images"], "name": "FaceDetailer", "display_name": "FaceDetailer", "description": "This node enhances details by automatically detecting specific objects in the input image using detection models (bbox, segm, sam) and regenerating the image by enlarging the detected area based on the guide size.\nAlthough this node is specialized to simplify the commonly used facial detail enhancement workflow, it can also be used for various automatic inpainting purposes depending on the detection model.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Simple", "output_node": false}, "FaceDetailerPipe": {"input": {"required": {"image": ["IMAGE"], "detailer_pipe": ["DETAILER_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the detailer_pipe, the inference stage is skipped."}], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tiled_encode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tiled_decode": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["image", "detailer_pipe", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "bbox_threshold", "bbox_dilation", "bbox_crop_factor", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative", "drop_size", "refiner_ratio", "cycle"], "optional": ["inpaint_model", "noise_mask_feather", "scheduler_func_opt", "tiled_encode", "tiled_decode"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"], "output_is_list": [false, true, true, false, false, true], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "mask", "detailer_pipe", "cnet_images"], "name": "FaceDetailerPipe", "display_name": "FaceDetailer (pipe)", "description": "This node enhances details by automatically detecting specific objects in the input image using detection models (bbox, segm, sam) and regenerating the image by enlarging the detected area based on the guide size.\nAlthough this node is specialized to simplify the commonly used facial detail enhancement workflow, it can also be used for various automatic inpainting purposes depending on the detection model.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Simple", "output_node": false}, "MaskDetailerPipe": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "basic_pipe": ["BASIC_PIPE"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "mask bbox", "label_off": "crop region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "mask_mode": ["BOOLEAN", {"default": true, "label_on": "masked only", "label_off": "whole"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "detailer_hook": ["DETAILER_HOOK"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "contour_fill": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "mask", "basic_pipe", "guide_size", "guide_size_for", "max_size", "mask_mode", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "crop_factor", "drop_size", "refiner_ratio", "batch_size", "cycle"], "optional": ["refiner_basic_pipe_opt", "detailer_hook", "inpaint_model", "noise_mask_feather", "bbox_fill", "contour_fill", "scheduler_func_opt"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "BASIC_PIPE", "BASIC_PIPE"], "output_is_list": [false, true, true, false, false], "output_name": ["image", "cropped_refined", "cropped_enhanced_alpha", "basic_pipe", "refiner_basic_pipe_opt"], "name": "MaskDetailerPipe", "display_name": "MaskDetailer (pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "ToDetailerPipe": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "ToDetailerPipe", "display_name": "ToDetailerPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "ToDetailerPipeSDXL": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "refiner_model": ["MODEL"], "refiner_clip": ["CLIP"], "refiner_positive": ["CONDITIONING"], "refiner_negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "ToDetailerPipeSDXL", "display_name": "ToDetailerPipeSDXL", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook"], "name": "FromDetailerPipe", "display_name": "FromDetailerPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipe_v2": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["DETAILER_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["detailer_pipe", "model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook"], "name": "FromDetailerPipe_v2", "display_name": "FromDetailerPipe_v2", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromDetailerPipeSDXL": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["DETAILER_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "BBOX_DETECTOR", "SAM_MODEL", "SEGM_DETECTOR", "DETAILER_HOOK", "MODEL", "CLIP", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["detailer_pipe", "model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model_opt", "segm_detector_opt", "detailer_hook", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative"], "name": "FromDetailerPipeSDXL", "display_name": "FromDetailer (SDXL/pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "AnyPipeToBasic": {"input": {"required": {"any_pipe": ["*"]}}, "input_order": {"required": ["any_pipe"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "AnyPipeToBasic", "display_name": "Any PIPE -> BasicPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "ToBasicPipe": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": ["model", "clip", "vae", "positive", "negative"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "ToBasicPipe", "display_name": "ToBasicPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["basic_pipe"]}, "output": ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "clip", "vae", "positive", "negative"], "name": "FromBasicPipe", "display_name": "FromBasicPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "FromBasicPipe_v2": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["basic_pipe"]}, "output": ["BASIC_PIPE", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["basic_pipe", "model", "clip", "vae", "positive", "negative"], "name": "FromBasicPipe_v2", "display_name": "FromBasicPipe_v2", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "BasicPipeToDetailerPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["basic_pipe", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "BasicPipeToDetailerPipe", "display_name": "BasicPipe -> DetailerPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "BasicPipeToDetailerPipeSDXL": {"input": {"required": {"base_basic_pipe": ["BASIC_PIPE"], "refiner_basic_pipe": ["BASIC_PIPE"], "bbox_detector": ["BBOX_DETECTOR"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"sam_model_opt": ["SAM_MODEL"], "segm_detector_opt": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["base_basic_pipe", "refiner_basic_pipe", "bbox_detector", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["sam_model_opt", "segm_detector_opt", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "BasicPipeToDetailerPipeSDXL", "display_name": "BasicPipe -> DetailerPipe (SDXL)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "DetailerPipeToBasicPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"]}}, "input_order": {"required": ["detailer_pipe"]}, "output": ["BASIC_PIPE", "BASIC_PIPE"], "output_is_list": [false, false], "output_name": ["base_basic_pipe", "refiner_basic_pipe"], "name": "DetailerPipeToBasicPipe", "display_name": "DetailerPipe -> BasicPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE"]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": ["basic_pipe"], "optional": ["model", "clip", "vae", "positive", "negative"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "EditBasicPipe", "display_name": "Edit BasicPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditDetailerPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "sam_model": ["SAM_MODEL"], "segm_detector": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["detailer_pipe", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["model", "clip", "vae", "positive", "negative", "bbox_detector", "sam_model", "segm_detector", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "EditDetailerPipe", "display_name": "Edit DetailerPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "EditDetailerPipeSDXL": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}, "optional": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "refiner_model": ["MODEL"], "refiner_clip": ["CLIP"], "refiner_positive": ["CONDITIONING"], "refiner_negative": ["CONDITIONING"], "bbox_detector": ["BBOX_DETECTOR"], "sam_model": ["SAM_MODEL"], "segm_detector": ["SEGM_DETECTOR"], "detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["detailer_pipe", "wildcard", "Select to add LoRA", "Select to add Wildcard"], "optional": ["model", "clip", "vae", "positive", "negative", "refiner_model", "refiner_clip", "refiner_positive", "refiner_negative", "bbox_detector", "sam_model", "segm_detector", "detailer_hook"]}, "output": ["DETAILER_PIPE"], "output_is_list": [false], "output_name": ["detailer_pipe"], "name": "EditDetailerPipeSDXL", "display_name": "Edit DetailerPipe (SDXL)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Pipe", "output_node": false}, "LatentPixelScale": {"input": {"required": {"samples": ["LATENT"], "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "scale_factor": ["FLOAT", {"default": 1.5, "min": 0.1, "max": 10000, "step": 0.05}], "vae": ["VAE"], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"]}}, "input_order": {"required": ["samples", "scale_method", "scale_factor", "vae", "use_tiled_vae"], "optional": ["upscale_model_opt"]}, "output": ["LATENT", "IMAGE"], "output_is_list": [false, false], "output_name": ["LATENT", "IMAGE"], "name": "LatentPixelScale", "display_name": "Latent Scale (on Pixel Space)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "model": ["MODEL"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["scale_method", "model", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "use_tiled_vae", "tile_size"], "optional": ["upscale_model_opt", "pk_hook_opt", "scheduler_func_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelKSampleUpscalerProvider", "display_name": "PixelKSampleUpscalerProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["scale_method", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "use_tiled_vae", "basic_pipe", "tile_size"], "optional": ["upscale_model_opt", "pk_hook_opt", "scheduler_func_opt", "tile_cnet_opt", "tile_cnet_strength"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelKSampleUpscalerProviderPipe", "display_name": "PixelKSampleUpscalerProviderPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "IterativeLatentUpscale": {"input": {"required": {"samples": ["LATENT"], "upscale_factor": ["FLOAT", {"default": 1.5, "min": 1, "max": 10000, "step": 0.1}], "steps": ["INT", {"default": 3, "min": 1, "max": 10000, "step": 1}], "temp_prefix": ["STRING", {"default": ""}], "upscaler": ["UPSCALER"], "step_mode": [["simple", "geometric"], {"default": "simple"}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["samples", "upscale_factor", "steps", "temp_prefix", "upscaler", "step_mode"], "hidden": ["unique_id"]}, "output": ["LATENT", "VAE"], "output_is_list": [false, false], "output_name": ["latent", "vae"], "name": "IterativeLatentUpscale", "display_name": "Iterative Upscale (Latent/on Pixel Space)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "IterativeImageUpscale": {"input": {"required": {"pixels": ["IMAGE"], "upscale_factor": ["FLOAT", {"default": 1.5, "min": 1, "max": 10000, "step": 0.1}], "steps": ["INT", {"default": 3, "min": 1, "max": 10000, "step": 1}], "temp_prefix": ["STRING", {"default": ""}], "upscaler": ["UPSCALER"], "vae": ["VAE"], "step_mode": [["simple", "geometric"], {"default": "simple"}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pixels", "upscale_factor", "steps", "temp_prefix", "upscaler", "vae", "step_mode"], "hidden": ["unique_id"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "IterativeImageUpscale", "display_name": "Iterative Upscale (Image)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelTiledKSampleUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "model": ["MODEL"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tiling_strategy": [["random", "padded", "simple"]]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}]}}, "input_order": {"required": ["scale_method", "model", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "tile_width", "tile_height", "tiling_strategy"], "optional": ["upscale_model_opt", "pk_hook_opt", "tile_cnet_opt", "tile_cnet_strength", "overlap"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelTiledKSampleUpscalerProvider", "display_name": "PixelTiledKSampleUpscalerProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelTiledKSampleUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64}], "tiling_strategy": [["random", "padded", "simple"]], "basic_pipe": ["BASIC_PIPE"]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_opt": ["PK_HOOK"], "tile_cnet_opt": ["CONTROL_NET"], "tile_cnet_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["scale_method", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "tile_width", "tile_height", "tiling_strategy", "basic_pipe"], "optional": ["upscale_model_opt", "pk_hook_opt", "tile_cnet_opt", "tile_cnet_strength"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "PixelTiledKSampleUpscalerProviderPipe", "display_name": "PixelTiledKSampleUpscalerProviderPipe", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "TwoSamplersForMaskUpscalerProvider": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "full_sample_schedule": [["none", "interleave1", "interleave2", "interleave3", "last1", "last2", "interleave1+last1", "interleave2+last1", "interleave3+last1"]], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "base_sampler": ["KSAMPLER"], "mask_sampler": ["KSAMPLER"], "mask": ["MASK"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"full_sampler_opt": ["KSAMPLER"], "upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_base_opt": ["PK_HOOK"], "pk_hook_mask_opt": ["PK_HOOK"], "pk_hook_full_opt": ["PK_HOOK"]}}, "input_order": {"required": ["scale_method", "full_sample_schedule", "use_tiled_vae", "base_sampler", "mask_sampler", "mask", "vae", "tile_size"], "optional": ["full_sampler_opt", "upscale_model_opt", "pk_hook_base_opt", "pk_hook_mask_opt", "pk_hook_full_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "TwoSamplersForMaskUpscalerProvider", "display_name": "TwoSamplersForMask Upscaler Provider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "TwoSamplersForMaskUpscalerProviderPipe": {"input": {"required": {"scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]], "full_sample_schedule": [["none", "interleave1", "interleave2", "interleave3", "last1", "last2", "interleave1+last1", "interleave2+last1", "interleave3+last1"]], "use_tiled_vae": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "base_sampler": ["KSAMPLER"], "mask_sampler": ["KSAMPLER"], "mask": ["MASK"], "basic_pipe": ["BASIC_PIPE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"full_sampler_opt": ["KSAMPLER"], "upscale_model_opt": ["UPSCALE_MODEL"], "pk_hook_base_opt": ["PK_HOOK"], "pk_hook_mask_opt": ["PK_HOOK"], "pk_hook_full_opt": ["PK_HOOK"]}}, "input_order": {"required": ["scale_method", "full_sample_schedule", "use_tiled_vae", "base_sampler", "mask_sampler", "mask", "basic_pipe", "tile_size"], "optional": ["full_sampler_opt", "upscale_model_opt", "pk_hook_base_opt", "pk_hook_mask_opt", "pk_hook_full_opt"]}, "output": ["UPSCALER"], "output_is_list": [false], "output_name": ["UPSCALER"], "name": "TwoSamplersForMaskUpscalerProviderPipe", "display_name": "TwoSamplersForMask Upscaler Provider (pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "PixelKSampleHookCombine": {"input": {"required": {"hook1": ["PK_HOOK"], "hook2": ["PK_HOOK"]}}, "input_order": {"required": ["hook1", "hook2"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "PixelKSampleHookCombine", "display_name": "PixelKSampleHookCombine", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "DenoiseScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_iteration", "target_denoise"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "DenoiseScheduleHookProvider", "display_name": "DenoiseScheduleHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "StepsScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_steps": ["INT", {"default": 20, "min": 1, "max": 10000}]}}, "input_order": {"required": ["schedule_for_iteration", "target_steps"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "StepsScheduleHookProvider", "display_name": "StepsScheduleHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "CfgScheduleHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "target_cfg": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["schedule_for_iteration", "target_cfg"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "CfgScheduleHookProvider", "display_name": "CfgScheduleHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "NoiseInjectionHookProvider": {"input": {"required": {"schedule_for_iteration": [["simple"]], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "start_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_iteration", "source", "seed", "start_strength", "end_strength"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "NoiseInjectionHookProvider", "display_name": "NoiseInjectionHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "UnsamplerHookProvider": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "start_end_at_step": ["INT", {"default": 21, "min": 0, "max": 10000}], "end_end_at_step": ["INT", {"default": 24, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "normalize": [["disable", "enable"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "schedule_for_iteration": [["simple"]]}}, "input_order": {"required": ["model", "steps", "start_end_at_step", "end_end_at_step", "cfg", "sampler_name", "scheduler", "normalize", "positive", "negative", "schedule_for_iteration"]}, "output": ["PK_HOOK"], "output_is_list": [false], "output_name": ["PK_HOOK"], "name": "UnsamplerHookProvider", "display_name": "UnsamplerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "CoreMLDetailerHookProvider": {"input": {"required": {"mode": [["512x512", "768x768", "512x768", "768x512"]]}}, "input_order": {"required": ["mode"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "CoreMLDetailerHookProvider", "display_name": "CoreMLDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "PreviewDetailerHookProvider": {"input": {"required": {"quality": ["INT", {"default": 95, "min": 20, "max": 100}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["quality"], "hidden": ["unique_id"]}, "output": ["DETAILER_HOOK", "UPSCALER_HOOK"], "output_is_list": [false, false], "output_name": ["DETAILER_HOOK", "UPSCALER_HOOK"], "name": "PreviewDetailerHookProvider", "display_name": "PreviewDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "CustomSamplerDetailerHookProvider": {"input": {"required": {"sampler": ["SAMPLER"]}}, "input_order": {"required": ["sampler"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "CustomSamplerDetailerHookProvider", "display_name": "CustomSamplerDetailerHookProvider", "description": "Apply a hook that allows you to use a custom sampler in the Detailer nodes. When using `DetailerHookCombine`, the sampler from the first hook is applied.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "LamaRemoverDetailerHookProvider": {"input": {"required": {"mask_threshold": ["INT", {"default": 250, "min": 0, "max": 255, "step": 1, "display": "slider"}], "gaussblur_radius": ["INT", {"default": 8, "min": 0, "max": 20, "step": 1, "display": "slider"}], "skip_sampling": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask_threshold", "gaussblur_radius", "skip_sampling"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "LamaRemoverDetailerHookProvider", "display_name": "LamaRemoverDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "DetailerHookCombine": {"input": {"required": {"hook1": ["DETAILER_HOOK"], "hook2": ["DETAILER_HOOK"]}}, "input_order": {"required": ["hook1", "hook2"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "DetailerHookCombine", "display_name": "DetailerHookCombine", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "NoiseInjectionDetailerHookProvider": {"input": {"required": {"schedule_for_cycle": [["skip_start", "from_start"]], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "start_strength": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 200.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 200.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_cycle", "source", "seed", "start_strength", "end_strength"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "NoiseInjectionDetailerHookProvider", "display_name": "NoiseInjectionDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "UnsamplerDetailerHookProvider": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "start_end_at_step": ["INT", {"default": 21, "min": 0, "max": 10000}], "end_end_at_step": ["INT", {"default": 24, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "normalize": [["disable", "enable"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "schedule_for_cycle": [["skip_start", "from_start"]]}}, "input_order": {"required": ["model", "steps", "start_end_at_step", "end_end_at_step", "cfg", "sampler_name", "scheduler", "normalize", "positive", "negative", "schedule_for_cycle"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "UnsamplerDetailerHookProvider", "display_name": "UnsamplerDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "DenoiseSchedulerDetailerHookProvider": {"input": {"required": {"schedule_for_cycle": [["simple"]], "target_denoise": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["schedule_for_cycle", "target_denoise"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "DenoiseSchedulerDetailerHookProvider", "display_name": "DenoiseSchedulerDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSOrderedFilterDetailerHookProvider": {"input": {"required": {"target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]], "order": ["BOOLEAN", {"default": true, "label_on": "descending", "label_off": "ascending"}], "take_start": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "take_count": ["INT", {"default": 1, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["target", "order", "take_start", "take_count"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSOrderedFilterDetailerHookProvider", "display_name": "SEGSOrderedFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSRangeFilterDetailerHookProvider": {"input": {"required": {"target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "length_percent"]], "mode": ["BOOLEAN", {"default": true, "label_on": "inside", "label_off": "outside"}], "min_value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "max_value": ["INT", {"default": 67108864, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["target", "mode", "min_value", "max_value"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSRangeFilterDetailerHookProvider", "display_name": "SEGSRangeFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSLabelFilterDetailerHookProvider": {"input": {"required": {"segs": ["SEGS"], "preset": [["all", "hand", "face", "mouth", "eyes", "eyebrows", "pupils", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil", "short_sleeved_shirt", "long_sleeved_shirt", "short_sleeved_outwear", "long_sleeved_outwear", "vest", "sling", "shorts", "trousers", "skirt", "short_sleeved_dress", "long_sleeved_dress", "vest_dress", "sling_dress", "person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]], "labels": ["STRING", {"multiline": true, "placeholder": "List the types of segments to be allowed, separated by commas"}]}}, "input_order": {"required": ["segs", "preset", "labels"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "SEGSLabelFilterDetailerHookProvider", "display_name": "SEGSLabelFilterDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "VariationNoiseDetailerHookProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["seed", "strength"]}, "output": ["DETAILER_HOOK"], "output_is_list": [false], "output_name": ["DETAILER_HOOK"], "name": "VariationNoiseDetailerHookProvider", "display_name": "VariationNoiseDetailerHookProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "BitwiseAndMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BitwiseAndMask", "display_name": "Pixelwise(MASK & MASK)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "SubtractMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SubtractMask", "display_name": "Pixelwise(MASK - MASK)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "AddMask": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "AddMask", "display_name": "Pixelwise(MASK + MASK)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskRectArea": {"input": {"required": {}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": [], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskRectArea", "display_name": "Mask Rect Area", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskRectAreaAdvanced": {"input": {"required": {}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": [], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskRectAreaAdvanced", "display_name": "Mask Rect Area (Advanced)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "ImpactSegsAndMask": {"input": {"required": {"segs": ["SEGS"], "mask": ["MASK"]}}, "input_order": {"required": ["segs", "mask"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSegsAndMask", "display_name": "Pixelwise(SEGS & MASK)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "ImpactSegsAndMaskForEach": {"input": {"required": {"segs": ["SEGS"], "masks": ["MASK"]}}, "input_order": {"required": ["segs", "masks"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSegsAndMaskForEach", "display_name": "Pixelwise(SEGS & MASKS ForEach)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "EmptySegs": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "EmptySegs", "display_name": "EmptySegs", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFlattenMask": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactFlattenMask", "display_name": "Flatten Mask Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MediaPipeFaceMeshToSEGS": {"input": {"required": {"image": ["IMAGE"], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "crop_min_size": ["INT", {"min": 10, "max": 16384, "step": 1, "default": 50}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 1}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "face": ["BOOLEAN", {"default": true, "label_on": "Enabled", "label_off": "Disabled"}], "mouth": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_eyebrow": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_eye": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "left_pupil": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_eyebrow": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_eye": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}], "right_pupil": ["BOOLEAN", {"default": false, "label_on": "Enabled", "label_off": "Disabled"}]}}, "input_order": {"required": ["image", "crop_factor", "bbox_fill", "crop_min_size", "drop_size", "dilation", "face", "mouth", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MediaPipeFaceMeshToSEGS", "display_name": "MediaPipe FaceMesh to SEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskToSEGS": {"input": {"required": {"mask": ["MASK"], "combined": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "contour_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["mask", "combined", "crop_factor", "bbox_fill", "drop_size", "contour_fill"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MaskToSEGS", "display_name": "MASK to SEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskToSEGS_for_AnimateDiff": {"input": {"required": {"mask": ["MASK"], "combined": ["BOOLEAN", {"default": false, "label_on": "True", "label_off": "False"}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "bbox_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "contour_fill": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["mask", "combined", "crop_factor", "bbox_fill", "drop_size", "contour_fill"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "MaskToSEGS_for_AnimateDiff", "display_name": "MASK to SEGS for Video", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "ToBinaryMask": {"input": {"required": {"mask": ["MASK"], "threshold": ["INT", {"default": 20, "min": 1, "max": 255}]}}, "input_order": {"required": ["mask", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ToBinaryMask", "display_name": "ToBinaryMask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MasksToMaskList": {"input": {"optional": {"masks": ["MASK"]}}, "input_order": {"optional": ["masks"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "MasksToMaskList", "display_name": "Mask Batch to Mask List", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "MaskListToMaskBatch": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskListToMaskBatch", "display_name": "Mask List to Mask Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "ImageListToImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToImageBatch", "display_name": "Image List to Image Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "SetDefaultImageForSEGS": {"input": {"required": {"segs": ["SEGS"], "image": ["IMAGE"], "override": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["segs", "image", "override"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SetDefaultImageForSEGS", "display_name": "Set Default Image for SEGS", "description": "If the SEGS have not passed through the detailer, they contain only detection area information without an image. This node sets a default image for the SEGS.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "RemoveImageFromSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "RemoveImageFromSEGS", "display_name": "Remove Image from SEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "BboxDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "BboxDetectorSEGS", "display_name": "BBOX Detector (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "SegmDetectorSEGS": {"input": {"required": {"segm_detector": ["SEGM_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["segm_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "SegmDetectorSEGS", "display_name": "SEGM Detector (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ONNXDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "labels": ["STRING", {"multiline": true, "default": "all", "placeholder": "List the types of segments to be allowed, separated by commas"}]}, "optional": {"detailer_hook": ["DETAILER_HOOK"]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation", "crop_factor", "drop_size", "labels"], "optional": ["detailer_hook"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ONNXDetectorSEGS", "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGS_for_AD": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image_frames": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"masking_mode": [["Pivot SEGS", "Combine neighboring frames", "Don't combine"]], "segs_pivot": [["Combined mask", "1st frame mask"]], "sam_model_opt": ["SAM_MODEL", {"tooltip": "[OPTIONAL]\nSegment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input.\nGiven this input, it refines the rectangular areas detected by BBOX_DETECTOR into silhouette shapes through SAM.\nsam_model_opt takes priority over segm_detector_opt."}], "segm_detector_opt": ["SEGM_DETECTOR"]}}, "input_order": {"required": ["bbox_detector", "image_frames", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["masking_mode", "segs_pivot", "sam_model_opt", "segm_detector_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGS_for_AD", "display_name": "Simple Detector for Video (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSAM2VideoDetectorSEGS": {"input": {"required": {"image_frames": ["IMAGE"], "bbox_detector": ["BBOX_DETECTOR"], "sam2_model": ["SAM_MODEL"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sam2_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}]}}, "input_order": {"required": ["image_frames", "bbox_detector", "sam2_model", "bbox_threshold", "sam2_threshold", "crop_factor", "drop_size"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSAM2VideoDetectorSEGS", "display_name": "SAM2 Video Detector (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGS": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"post_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_model_opt": ["SAM_MODEL", {"tooltip": "[OPTIONAL]\nSegment Anything Model for Silhouette Detection.\nBe sure to use the SAM_MODEL loaded through the SAMLoader (Impact) node as input.\nGiven this input, it refines the rectangular areas detected by BBOX_DETECTOR into silhouette shapes through SAM.\nsam_model_opt takes priority over segm_detector_opt."}], "segm_detector_opt": ["SEGM_DETECTOR"]}}, "input_order": {"required": ["bbox_detector", "image", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["post_dilation", "sam_model_opt", "segm_detector_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGS", "display_name": "Simple Detector (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactSimpleDetectorSEGSPipe": {"input": {"required": {"detailer_pipe": ["DETAILER_PIPE"], "image": ["IMAGE"], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 100, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "sub_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "sub_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sub_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"post_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["detailer_pipe", "image", "bbox_threshold", "bbox_dilation", "crop_factor", "drop_size", "sub_threshold", "sub_dilation", "sub_bbox_expansion", "sam_mask_hint_threshold"], "optional": ["post_dilation"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSimpleDetectorSEGSPipe", "display_name": "Simple Detector (SEGS/pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "ImpactControlNetApplySEGS": {"input": {"required": {"segs": ["SEGS"], "control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"segs_preprocessor": ["SEGS_PREPROCESSOR"], "control_image": ["IMAGE"]}}, "input_order": {"required": ["segs", "control_net", "strength"], "optional": ["segs_preprocessor", "control_image"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetApplySEGS", "display_name": "ControlNetApply (SEGS) - DEPRECATED", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "deprecated": true}, "ImpactControlNetApplyAdvancedSEGS": {"input": {"required": {"segs": ["SEGS"], "control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"segs_preprocessor": ["SEGS_PREPROCESSOR"], "control_image": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["segs", "control_net", "strength", "start_percent", "end_percent"], "optional": ["segs_preprocessor", "control_image", "vae"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetApplyAdvancedSEGS", "display_name": "ControlNetApply (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactControlNetClearSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactControlNetClearSEGS", "display_name": "ImpactControlNetClearSEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactIPAdapterApplySEGS": {"input": {"required": {"segs": ["SEGS"], "ipadapter_pipe": ["IPADAPTER_PIPE"], "weight": ["FLOAT", {"default": 0.7, "min": -1, "max": 3, "step": 0.05}], "noise": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.01}], "weight_type": [["original", "linear", "channel penalty"], {"default": "channel penalty"}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.001}], "unfold_batch": ["BOOLEAN", {"default": false}], "faceid_v2": ["BOOLEAN", {"default": false}], "weight_v2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "context_crop_factor": ["FLOAT", {"default": 1.2, "min": 1.0, "max": 100, "step": 0.1}], "reference_image": ["IMAGE"]}, "optional": {"combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "neg_image": ["IMAGE"]}}, "input_order": {"required": ["segs", "ipadapter_pipe", "weight", "noise", "weight_type", "start_at", "end_at", "unfold_batch", "faceid_v2", "weight_v2", "context_crop_factor", "reference_image"], "optional": ["combine_embeds", "neg_image"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactIPAdapterApplySEGS", "display_name": "IPAdapterApply (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDecomposeSEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS_HEADER", "SEG_ELT"], "output_is_list": [false, true], "output_name": ["SEGS_HEADER", "SEG_ELT"], "name": "ImpactDecomposeSEGS", "display_name": "Decompose (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactAssembleSEGS": {"input": {"required": {"seg_header": ["SEGS_HEADER"], "seg_elt": ["SEG_ELT"]}}, "input_order": {"required": ["seg_header", "seg_elt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactAssembleSEGS", "display_name": "Assemble (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"]}}, "input_order": {"required": ["seg_elt"]}, "output": ["SEG_ELT", "IMAGE", "MASK", "SEG_ELT_crop_region", "SEG_ELT_bbox", "SEG_ELT_control_net_wrapper", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["seg_elt", "cropped_image", "cropped_mask", "crop_region", "bbox", "control_net_wrapper", "confidence", "label"], "name": "ImpactFrom_SEG_ELT", "display_name": "From SEG_ELT", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactEdit_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"]}, "optional": {"cropped_image_opt": ["IMAGE"], "cropped_mask_opt": ["MASK"], "crop_region_opt": ["SEG_ELT_crop_region"], "bbox_opt": ["SEG_ELT_bbox"], "control_net_wrapper_opt": ["SEG_ELT_control_net_wrapper"], "confidence_opt": ["FLOAT", {"min": 0, "max": 1.0, "step": 0.1, "forceInput": true}], "label_opt": ["STRING", {"multiline": false, "forceInput": true}]}}, "input_order": {"required": ["seg_elt"], "optional": ["cropped_image_opt", "cropped_mask_opt", "crop_region_opt", "bbox_opt", "control_net_wrapper_opt", "confidence_opt", "label_opt"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactEdit_SEG_ELT", "display_name": "Edit SEG_ELT", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilate_Mask_SEG_ELT": {"input": {"required": {"seg_elt": ["SEG_ELT"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["seg_elt", "dilation"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactDilate_Mask_SEG_ELT", "display_name": "Dilate Mask (SEG_ELT)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilateMask": {"input": {"required": {"mask": ["MASK"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["mask", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactDilateMask", "display_name": "Dilate Mask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactGaussianBlurMask": {"input": {"required": {"mask": ["MASK"], "kernel_size": ["INT", {"default": 10, "min": 0, "max": 100, "step": 1}], "sigma": ["FLOAT", {"default": 10.0, "min": 0.1, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["mask", "kernel_size", "sigma"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactGaussianBlurMask", "display_name": "Gaussian Blur Mask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactDilateMaskInSEGS": {"input": {"required": {"segs": ["SEGS"], "dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["segs", "dilation"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactDilateMaskInSEGS", "display_name": "Dilate Mask (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactGaussianBlurMaskInSEGS": {"input": {"required": {"segs": ["SEGS"], "kernel_size": ["INT", {"default": 10, "min": 0, "max": 100, "step": 1}], "sigma": ["FLOAT", {"default": 10.0, "min": 0.1, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["segs", "kernel_size", "sigma"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactGaussianBlurMaskInSEGS", "display_name": "Gaussian Blur Mask (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactScaleBy_BBOX_SEG_ELT": {"input": {"required": {"seg": ["SEG_ELT"], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["seg", "scale_by"]}, "output": ["SEG_ELT"], "output_is_list": [false], "output_name": ["SEG_ELT"], "name": "ImpactScaleBy_BBOX_SEG_ELT", "display_name": "ScaleBy BBOX (SEG_ELT)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT_bbox": {"input": {"required": {"bbox": ["SEG_ELT_bbox"]}}, "input_order": {"required": ["bbox"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["left", "top", "right", "bottom"], "name": "ImpactFrom_SEG_ELT_bbox", "display_name": "From SEG_ELT bbox", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactFrom_SEG_ELT_crop_region": {"input": {"required": {"crop_region": ["SEG_ELT_crop_region"]}}, "input_order": {"required": ["crop_region"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["left", "top", "right", "bottom"], "name": "ImpactFrom_SEG_ELT_crop_region", "display_name": "From SEG_ELT crop_region", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactCount_Elts_in_SEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactCount_Elts_in_SEGS", "display_name": "Count Elts in SEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "BboxDetectorCombined_v2": {"input": {"required": {"bbox_detector": ["BBOX_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 4, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["bbox_detector", "image", "threshold", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "BboxDetectorCombined_v2", "display_name": "BBOX Detector (combined)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "SegmDetectorCombined_v2": {"input": {"required": {"segm_detector": ["SEGM_DETECTOR"], "image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}]}}, "input_order": {"required": ["segm_detector", "image", "threshold", "dilation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SegmDetectorCombined_v2", "display_name": "SEGM Detector (combined)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detector", "output_node": false}, "SegsToCombinedMask": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SegsToCombinedMask", "display_name": "SEGS to MASK (combined)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Operation", "output_node": false}, "KSamplerProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"], {"tooltip": "noise schedule"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "basic_pipe"], "optional": ["scheduler_func_opt"]}, "output": ["KSAMPLER"], "output_is_list": [false], "output_name": ["KSAMPLER"], "name": "KSamplerProvider", "display_name": "KSamplerProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "TwoSamplersForMask": {"input": {"required": {"latent_image": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER", {"tooltip": "Sampler to apply to the region outside the mask."}], "mask_sampler": ["KSAMPLER", {"tooltip": "Sampler to apply to the masked region."}], "mask": ["MASK", {"tooltip": "region mask"}]}}, "input_order": {"required": ["latent_image", "base_sampler", "mask_sampler", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "TwoSamplersForMask", "display_name": "TwoSamplersForMask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["result latent"]}, "TiledKSamplerProvider": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"tooltip": "noise schedule"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "tile_width": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64, "tooltip": "Sets the width of the tile to be used in TiledKSampler."}], "tile_height": ["INT", {"default": 512, "min": 320, "max": 16384, "step": 64, "tooltip": "Sets the height of the tile to be used in TiledKSampler."}], "tiling_strategy": [["random", "padded", "simple"], {"tooltip": "Sets the tiling strategy for TiledKSampler."}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}]}}, "input_order": {"required": ["seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "tile_width", "tile_height", "tiling_strategy", "basic_pipe"]}, "output": ["KSAMPLER"], "output_is_list": [false], "output_name": ["KSAMPLER"], "name": "TiledKSamplerProvider", "display_name": "TiledKSamplerProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "KSamplerAdvancedProvider": {"input": {"required": {"cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "toolip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"toolip": "sampler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"], {"toolip": "noise schedule"}], "sigma_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "toolip": "Multiplier of noise schedule"}], "basic_pipe": ["BASIC_PIPE", {"toolip": "basic_pipe input for sampling"}]}, "optional": {"sampler_opt": ["SAMPLER", {"toolip": "[OPTIONAL] Uses the passed sampler instead of internal impact_sampler."}], "scheduler_func_opt": ["SCHEDULER_FUNC", {"toolip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["cfg", "sampler_name", "scheduler", "sigma_factor", "basic_pipe"], "optional": ["sampler_opt", "scheduler_func_opt"]}, "output": ["KSAMPLER_ADVANCED"], "output_is_list": [false], "output_name": ["KSAMPLER_ADVANCED"], "name": "KSamplerAdvancedProvider", "display_name": "KSamplerAdvancedProvider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["sampler wrapper. (Can be used when generating a regional_prompt.)"]}, "TwoAdvancedSamplersForMask": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "samples": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "Sampler to apply to the region outside the mask."}], "mask_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "Sampler to apply to the masked region."}], "mask": ["MASK", {"tooltip": "region mask"}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask by the overlap_factor amount to overlap with other regions."}]}}, "input_order": {"required": ["seed", "steps", "denoise", "samples", "base_sampler", "mask_sampler", "mask", "overlap_factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "TwoAdvancedSamplersForMask", "display_name": "TwoAdvancedSamplersForMask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Sampler", "output_node": false, "output_tooltips": ["result latent"]}, "ImpactNegativeConditioningPlaceholder": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactNegativeConditioningPlaceholder", "display_name": "Negative Cond Placeholder", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["This is a Placeholder for the FLUX model that does not use Negative Conditioning."]}, "PreviewBridge": {"input": {"required": {"images": ["IMAGE"], "image": ["STRING", {"default": ""}]}, "optional": {"block": ["BOOLEAN", {"default": false, "label_on": "if_empty_mask", "label_off": "never", "tooltip": "is_empty_mask: If the mask is empty, the execution is stopped.\nnever: The execution is never stopped."}], "restore_mask": [["never", "always", "if_same_size"], {"tooltip": "if_same_size: If the changed input image is the same size as the previous image, restore using the last saved mask\nalways: Whenever the input image changes, always restore using the last saved mask\nnever: Do not restore the mask.\n`restore_mask` has higher priority than `block`"}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "image"], "optional": ["block", "restore_mask"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "PreviewBridge", "display_name": "Preview Bridge (Image)", "description": "This is a feature that allows you to edit and send a Mask over a image.\nIf the block is set to 'is_empty_mask', the execution is stopped when the mask is empty.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "PreviewBridgeLatent": {"input": {"required": {"latent": ["LATENT"], "image": ["STRING", {"default": ""}], "preview_method": [["Latent2RGB-FLUX.1", "Latent2RGB-SDXL", "Latent2RGB-SD15", "Latent2RGB-SD3", "Latent2RGB-SD-X4", "Latent2RGB-Playground-2.5", "Latent2RGB-SC-Prior", "Latent2RGB-SC-B", "Latent2RGB-LTXV", "TAEF1", "TAESDXL", "TAESD15", "TAESD3"]]}, "optional": {"vae_opt": ["VAE"], "block": ["BOOLEAN", {"default": false, "label_on": "if_empty_mask", "label_off": "never", "tooltip": "is_empty_mask: If the mask is empty, the execution is stopped.\nnever: The execution is never stopped. Instead, it returns a white mask."}], "restore_mask": [["never", "always", "if_same_size"], {"tooltip": "if_same_size: If the changed input latent is the same size as the previous latent, restore using the last saved mask\nalways: Whenever the input latent changes, always restore using the last saved mask\nnever: Do not restore the mask.\n`restore_mask` has higher priority than `block`\nIf the input latent already has a mask, do not restore mask."}]}, "hidden": {"unique_id": "UNIQUE_ID", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["latent", "image", "preview_method"], "optional": ["vae_opt", "block", "restore_mask"], "hidden": ["unique_id", "prompt", "extra_pnginfo"]}, "output": ["LATENT", "MASK"], "output_is_list": [false, false], "output_name": ["LATENT", "MASK"], "name": "PreviewBridgeLatent", "display_name": "Preview Bridge (Latent)", "description": "This is a feature that allows you to edit and send a Mask over a latent image.\nIf the block is set to 'is_empty_mask', the execution is stopped when the mask is empty.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "ImageSender": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ImgSender"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "link_id"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImageSender", "display_name": "Image Sender", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "ImageReceiver": {"input": {"required": {"image": [["ChatGPT Image Jun 15, 2025, 11_20_25 PM.png", "ComfyUI_00049_.png", "ComfyUI_temp_ldplk_00001_.png", "ICFB1n6Qqx6SV5kTemxTzPXAt0.jpg", "anitadavis7275242246.jpg", "example.png", "ezgif-frame-001.jpg", "ezgif-frame-003.jpg", "ezgif-frame-005.jpg", "ezgif-frame-007.jpg", "ezgif-frame-009.jpg", "ezgif-frame-011.jpg", "ezgif-frame-012.jpg", "ezgif-frame-013.jpg", "ezgif-frame-014.jpg", "mia7676334372.jpg", "photo_2025-07-26 12.44.04.jpeg", "photo_2025-07-26 12.59.44.jpeg", "photo_2025-07-26 13.08.41.jpeg", "photo_2025-07-26 13.12.56.jpeg", "photo_2025-07-26 13.15.07.jpeg", "photo_2025-08-01_20-22-07.jpg", "photo_2025-08-02_02-01-30.jpg", "{0E2C9C1A-98F6-463C-9D82-EAF465802B27}.png", "{C31D2BF1-018E-4D7D-94F2-4AA3942F716F}.png"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_to_workflow": ["BOOLEAN", {"default": false}], "image_data": ["STRING", {"multiline": false}], "trigger_always": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["image", "link_id", "save_to_workflow", "image_data", "trigger_always"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageReceiver", "display_name": "Image Receiver", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "LatentSender": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/LatentSender"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "preview_method": [["Latent2RGB-FLUX.1", "Latent2RGB-SDXL", "Latent2RGB-SD15", "Latent2RGB-SD3", "Latent2RGB-SD-X4", "Latent2RGB-Playground-2.5", "Latent2RGB-SC-Prior", "Latent2RGB-SC-B", "Latent2RGB-LTXV", "TAEF1", "TAESDXL", "TAESD15", "TAESD3"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["samples", "filename_prefix", "link_id", "preview_method"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LatentSender", "display_name": "LatentSender", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "LatentReceiver": {"input": {"required": {"latent": [[]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "trigger_always": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable"}]}}, "input_order": {"required": ["latent", "link_id", "trigger_always"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentReceiver", "display_name": "LatentReceiver", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImageMaskSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 4, "step": 1}], "images1": ["IMAGE"]}, "optional": {"mask1_opt": ["MASK"], "images2_opt": ["IMAGE"], "mask2_opt": ["MASK"], "images3_opt": ["IMAGE"], "mask3_opt": ["MASK"], "images4_opt": ["IMAGE"], "mask4_opt": ["MASK"]}}, "input_order": {"required": ["select", "images1"], "optional": ["mask1_opt", "images2_opt", "mask2_opt", "images3_opt", "mask3_opt", "images4_opt", "mask4_opt"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageMaskSwitch", "display_name": "Switch (images, mask)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "LatentSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "LatentSwitch", "display_name": "Switch (latent/legacy)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "SEGSSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "SEGSSwitch", "display_name": "Switch (SEGS/legacy)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "ImpactSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The input number you want to output among the inputs"}], "sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "optional": {"input1": ["*", {"lazy": true, "tooltip": "Any input. When connected, one more input slot is added."}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["select", "sel_mode"], "optional": ["input1"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["selected_value", "selected_label", "selected_index"], "name": "ImpactSwitch", "display_name": "Switch (Any)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output is generated only from the input chosen by the 'select' value.", "Slot label of the selected input slot", "Outputs the select value as is"]}, "ImpactInversedSwitch": {"input": {"required": {"select": ["INT", {"default": 1, "min": 1, "max": 999999, "step": 1, "tooltip": "The output number you want to send from the input"}], "input": ["*", {"tooltip": "Any input. When connected, one more input slot is added."}]}, "optional": {"sel_mode": ["BOOLEAN", {"default": false, "label_on": "select_on_prompt", "label_off": "select_on_execution", "forceInput": false, "tooltip": "In the case of 'select_on_execution', the selection is dynamically determined at the time of workflow execution. 'select_on_prompt' is an option that exists for older versions of ComfyUI, and it makes the decision before the workflow execution."}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["select", "input"], "optional": ["sel_mode"], "hidden": ["prompt", "unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactInversedSwitch", "display_name": "Inversed Switch (Any)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Output occurs only from the output selected by the 'select' value.\nWhen slots are connected, additional slots are created."]}, "ImpactWildcardProcessor": {"input": {"required": {"wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "tooltip": "Enter a prompt using wildcard syntax."}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "tooltip": "The actual value passed during the execution of 'ImpactWildcardProcessor' is what is shown here. The behavior varies slightly depending on the mode. Wildcard syntax can also be used in 'populated_text'."}], "mode": [["populate", "fixed", "reproduce"], {"default": "populate", "tooltip": "populate: Before running the workflow, it overwrites the existing value of 'populated_text' with the prompt processed from 'wildcard_text'. In this mode, 'populated_text' cannot be edited.\nfixed: Ignores wildcard_text and keeps 'populated_text' as is. You can edit 'populated_text' in this mode.\nreproduce: This mode operates as 'fixed' mode only once for reproduction, and then it switches to 'populate' mode."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Determines the random seed to be used for wildcard processing."}], "Select to add Wildcard": [["Select the Wildcard to add to the text"]]}}, "input_order": {"required": ["wildcard_text", "populated_text", "mode", "seed", "Select to add Wildcard"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["processed text"], "name": "ImpactWildcardProcessor", "display_name": "ImpactWildcardProcessor", "description": "The 'ImpactWildcardProcessor' processes text prompts written in wildcard syntax and outputs the processed text prompt.\n\nTIP: Before the workflow is executed, the processing result of 'wildcard_text' is displayed in 'populated_text', and the populated text is saved along with the workflow. If you want to use a seed converted as input, write the prompt directly in 'populated_text' instead of 'wildcard_text', and set the mode to 'fixed'.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Prompt", "output_node": false}, "ImpactWildcardEncode": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "wildcard_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "tooltip": "Enter a prompt using wildcard syntax."}], "populated_text": ["STRING", {"multiline": true, "dynamicPrompts": false, "tooltip": "The actual value passed during the execution of 'ImpactWildcardEncode' is what is shown here. The behavior varies slightly depending on the mode. Wildcard syntax can also be used in 'populated_text'."}], "mode": [["populate", "fixed", "reproduce"], {"tooltip": "populate: Before running the workflow, it overwrites the existing value of 'populated_text' with the prompt processed from 'wildcard_text'. In this mode, 'populated_text' cannot be edited.\nfixed: Ignores wildcard_text and keeps 'populated_text' as is. You can edit 'populated_text' in this mode\n.reproduce: This mode operates as 'fixed' mode only once for reproduction, and then it switches to 'populate' mode."}], "Select to add LoRA": [["Select the LoRA to add to the text", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Determines the random seed to be used for wildcard processing."}]}}, "input_order": {"required": ["model", "clip", "wildcard_text", "populated_text", "mode", "Select to add LoRA", "Select to add Wildcard", "seed"]}, "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["model", "clip", "conditioning", "populated_text"], "name": "ImpactWildcardEncode", "display_name": "ImpactWildcardEncode", "description": "The 'ImpactWildcardEncode' node processes text prompts written in wildcard syntax and outputs them as conditioning. It also supports LoRA syntax, with the applied LoRA reflected in the model's output.\n\nTIP1: Before the workflow is executed, the processing result of 'wildcard_text' is displayed in 'populated_text', and the populated text is saved along with the workflow. If you want to use a seed converted as input, write the prompt directly in 'populated_text' instead of 'wildcard_text', and set the mode to 'fixed'.\nTIP2: If the 'Inspire Pack' is installed, LBW(LoRA Block Weight) syntax can also be applied.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Prompt", "output_node": false}, "SEGSUpscaler": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 100.0, "step": 0.01}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "upscaler_hook_opt": ["UPSCALER_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "model", "clip", "vae", "rescale_factor", "resampling_method", "supersample", "rounding_modulus", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "denoise", "feather", "inpaint_model", "noise_mask_feather"], "optional": ["upscale_model_opt", "upscaler_hook_opt", "scheduler_func_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSUpscaler", "display_name": "Upscaler (SEGS)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "SEGSUpscalerPipe": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "basic_pipe": ["BASIC_PIPE"], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 100.0, "step": 0.01}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}, "optional": {"upscale_model_opt": ["UPSCALE_MODEL"], "upscaler_hook_opt": ["UPSCALER_HOOK"], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "basic_pipe", "rescale_factor", "resampling_method", "supersample", "rounding_modulus", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "inpaint_model", "noise_mask_feather"], "optional": ["upscale_model_opt", "upscaler_hook_opt", "scheduler_func_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSUpscalerPipe", "display_name": "Upscaler (SEGS/pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Upscale", "output_node": false}, "SEGSDetailer": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the basic_pipe, the inference stage is skipped."}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "noise_mask", "force_inpaint", "basic_pipe", "refiner_ratio", "batch_size", "cycle"], "optional": ["refiner_basic_pipe_opt", "inpaint_model", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["SEGS", "IMAGE"], "output_is_list": [false, true], "output_name": ["segs", "cnet_images"], "name": "SEGSDetailer", "display_name": "SEGSDetailer", "description": "This node enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.\nThis node is applied specifically to SEGS rather than the entire image. To apply it to the entire image, use the 'SEGS Paste' node.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSPaste": {"input": {"required": {"image": ["IMAGE"], "segs": ["SEGS"], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "alpha": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}, "optional": {"ref_image_opt": ["IMAGE"]}}, "input_order": {"required": ["image", "segs", "feather", "alpha"], "optional": ["ref_image_opt"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SEGSPaste", "display_name": "SEGSPaste", "description": "This node provides a function to paste the enhanced SEGS, improved through the SEGS detailer, back onto the original image.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "SEGSPreview": {"input": {"required": {"segs": ["SEGS"], "alpha_mode": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable"}], "min_alpha": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"fallback_image_opt": ["IMAGE"]}}, "input_order": {"required": ["segs", "alpha_mode", "min_alpha"], "optional": ["fallback_image_opt"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSPreview", "display_name": "SEGSPreview", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "SEGSPreviewCNet": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSPreviewCNet", "display_name": "SEGSPreview (CNET Image)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": true}, "SEGSToImageList": {"input": {"required": {"segs": ["SEGS"]}, "optional": {"fallback_image_opt": ["IMAGE"]}}, "input_order": {"required": ["segs"], "optional": ["fallback_image_opt"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "SEGSToImageList", "display_name": "SEGSToImageList", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSToMaskList": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "ImpactSEGSToMaskList", "display_name": "SEGS to Mask List", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSToMaskBatch": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactSEGSToMaskBatch", "display_name": "SEGS to Mask Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSConcat": {"input": {"required": {"segs1": ["SEGS"]}}, "input_order": {"required": ["segs1"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSConcat", "display_name": "SEGS Concat", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSPicker": {"input": {"required": {"picks": ["STRING", {"multiline": true, "dynamicPrompts": false, "pysssss.autocomplete": false}], "segs": ["SEGS"]}, "optional": {"fallback_image_opt": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["picks", "segs"], "optional": ["fallback_image_opt"], "hidden": ["unique_id"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSPicker", "display_name": "Picker (SEGS)", "description": "This node provides a function to select only the chosen SEGS from the input SEGS.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeTileSEGS": {"input": {"required": {"images": ["IMAGE"], "bbox_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 8}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.01}], "min_overlap": ["INT", {"default": 5, "min": 0, "max": 512, "step": 1}], "filter_segs_dilation": ["INT", {"default": 20, "min": -255, "max": 255, "step": 1}], "mask_irregularity": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "irregular_mask_mode": [["Reuse fast", "Reuse quality", "All random fast", "All random quality"]]}, "optional": {"filter_in_segs_opt": ["SEGS"], "filter_out_segs_opt": ["SEGS"]}}, "input_order": {"required": ["images", "bbox_size", "crop_factor", "min_overlap", "filter_segs_dilation", "mask_irregularity", "irregular_mask_mode"], "optional": ["filter_in_segs_opt", "filter_out_segs_opt"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactMakeTileSEGS", "display_name": "Make Tile SEGS", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/__for_testing", "output_node": false}, "ImpactSEGSMerge": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSMerge", "display_name": "SEGS Merge", "description": "SEGS contains multiple SEGs. SEGS Merge integrates several SEGs into a single merged SEG. The label is changed to `merged` and the confidence becomes the minimum confidence. The applied controlnet and cropped_image are removed.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "SEGSDetailerForAnimateDiff": {"input": {"required": {"image_frames": ["IMAGE"], "segs": ["SEGS"], "guide_size": ["FLOAT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "basic_pipe": ["BASIC_PIPE", {"tooltip": "If the `ImpactDummyInput` is connected to the model in the basic_pipe, the inference stage is skipped."}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}]}, "optional": {"refiner_basic_pipe_opt": ["BASIC_PIPE"], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}], "scheduler_func_opt": ["SCHEDULER_FUNC"]}}, "input_order": {"required": ["image_frames", "segs", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "basic_pipe", "refiner_ratio"], "optional": ["refiner_basic_pipe_opt", "noise_mask_feather", "scheduler_func_opt"]}, "output": ["SEGS", "IMAGE"], "output_is_list": [false, true], "output_name": ["segs", "cnet_images"], "name": "SEGSDetailerForAnimateDiff", "display_name": "SEGSDetailer For Video (SEGS/pipe)", "description": "This node enhances details by inpainting each region within the detected area bundle (SEGS) after enlarging them based on the guide size.\nThis node is applied specifically to SEGS rather than the entire image. To apply it to the entire image, use the 'SEGS Paste' node.\nAs a specialized detailer node for improving video details, such as in AnimateDiff, this node can handle cases where the masks contained in SEGS serve as batch masks spanning multiple frames.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Detailer", "output_node": false}, "ImpactKSamplerBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"], {"tooltip": "noise schedule"}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["basic_pipe", "seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "denoise"], "optional": ["scheduler_func_opt"]}, "output": ["BASIC_PIPE", "LATENT", "VAE"], "output_is_list": [false, false, false], "output_name": ["BASIC_PIPE", "LATENT", "VAE"], "name": "ImpactKSamplerBasicPipe", "display_name": "KSampler (pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["passthrough input basic_pipe", "result latent", "VAE in basic_pipe"]}, "ImpactKSamplerAdvancedBasicPipe": {"input": {"required": {"basic_pipe": ["BASIC_PIPE", {"tooltip": "basic_pipe input for sampling"}], "add_noise": ["BOOLEAN", {"default": true, "label_on": "enable", "label_off": "disable", "tooltip": "Whether to add noise"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "tooltip": "classifier free guidance value"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"], {"tooltip": "sampler"}], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"], {"tooltip": "noise schedule"}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000, "tooltip": "The starting step of the sampling to be applied at this node within the range of 'steps'."}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000, "tooltip": "The step at which sampling applied at this node will stop within the range of steps (if greater than steps, sampling will continue only up to steps)."}], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enable", "label_off": "disable", "tooltip": "Whether to return the latent with noise remaining if the noise has not been completely removed according to the noise schedule, or to completely remove the noise before returning it."}]}, "optional": {"scheduler_func_opt": ["SCHEDULER_FUNC", {"tooltip": "[OPTIONAL] Noise schedule generation function. If this is set, the scheduler widget will be ignored."}]}}, "input_order": {"required": ["basic_pipe", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise"], "optional": ["scheduler_func_opt"]}, "output": ["BASIC_PIPE", "LATENT", "VAE"], "output_is_list": [false, false, false], "output_name": ["BASIC_PIPE", "LATENT", "VAE"], "name": "ImpactKSamplerAdvancedBasicPipe", "display_name": "KSampler (Advanced/pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["passthrough input basic_pipe", "result latent", "VAE in basic_pipe"]}, "ReencodeLatent": {"input": {"required": {"samples": ["LATENT"], "tile_mode": [["None", "Both", "Decode(input) only", "Encode(output) only"]], "input_vae": ["VAE"], "output_vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}, "optional": {"overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32, "tooltip": "This setting applies when 'tile_mode' is enabled."}]}}, "input_order": {"required": ["samples", "tile_mode", "input_vae", "output_vae", "tile_size"], "optional": ["overlap"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ReencodeLatent", "display_name": "Reencode Latent", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ReencodeLatentPipe": {"input": {"required": {"samples": ["LATENT"], "tile_mode": [["None", "Both", "Decode(input) only", "Encode(output) only"]], "input_basic_pipe": ["BASIC_PIPE"], "output_basic_pipe": ["BASIC_PIPE"]}}, "input_order": {"required": ["samples", "tile_mode", "input_basic_pipe", "output_basic_pipe"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "ReencodeLatentPipe", "display_name": "Reencode Latent (pipe)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactImageBatchToImageList": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ImpactImageBatchToImageList", "display_name": "Image Batch to Image List", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeImageList": {"input": {"optional": {"image1": ["IMAGE"]}}, "input_order": {"optional": ["image1"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "ImpactMakeImageList", "display_name": "Make Image List", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeImageBatch": {"input": {"optional": {"image1": ["IMAGE"]}}, "input_order": {"optional": ["image1"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImpactMakeImageBatch", "display_name": "Make Image Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeAnyList": {"input": {"required": {}, "optional": {"value1": ["*"]}}, "input_order": {"required": [], "optional": ["value1"]}, "output": ["*"], "output_is_list": [true], "output_name": ["*"], "name": "ImpactMakeAnyList", "display_name": "Make List (Any)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeMaskList": {"input": {"required": {"mask1": ["MASK"]}}, "input_order": {"required": ["mask1"]}, "output": ["MASK"], "output_is_list": [true], "output_name": ["MASK"], "name": "ImpactMakeMaskList", "display_name": "Make Mask List", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactMakeMaskBatch": {"input": {"optional": {"mask1": ["MASK"]}}, "input_order": {"optional": ["mask1"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImpactMakeMaskBatch", "display_name": "Make Mask Batch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSelectNthItemOfAnyList": {"input": {"required": {"any_list": ["*"], "index": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1, "tooltip": "The index of the item you want to select from the list."}]}}, "input_order": {"required": ["any_list", "index"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactSelectNthItemOfAnyList", "display_name": "Select Nth Item (Any list)", "description": "Selects the Nth item from a list. If the index is out of range, it returns the last item in the list.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "RegionalSampler": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "seed_2nd": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Additional noise seed. The behavior is determined by seed_2nd_mode."}], "seed_2nd_mode": [["ignore", "fixed", "seed+seed_2nd", "seed-seed_2nd", "increment", "decrement", "randomize"], {"tooltip": "application method of seed_2nd. 1) ignore: Do not use seed_2nd. In the base only sampling stage, the seed is applied as a noise seed, and in the regional sampling stage, denoising is performed as it is without additional noise. 2) Others: In the base only sampling stage, the seed is applied as a noise seed, and once it is closed so that there is no leftover noise, new noise is added with seed_2nd and the regional samping stage is performed. a) fixed: Use seed_2nd as it is as an additional noise seed. b) seed+seed_2nd: Apply the value of seed+seed_2nd as an additional noise seed. c) seed-seed_2nd: Apply the value of seed-seed_2nd as an additional noise seed. d) increment: Not implemented yet. Same with fixed. e) decrement: Not implemented yet. Same with fixed. f) randomize: Not implemented yet. Same with fixed."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "base_only_steps": ["INT", {"default": 2, "min": 0, "max": 10000, "tooltip": "total sampling steps"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of noise to remove. This amount is the noise added at the start, and the higher it is, the more the input latent will be modified before being returned."}], "samples": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "The sampler applied outside the area set by the regional_prompt."}], "regional_prompts": ["REGIONAL_PROMPTS", {"tooltip": "The prompt applied to each region"}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask set in regional_prompts by the overlap_factor amount to overlap with other regions."}], "restore_latent": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "At each step, restore the noise outside the mask area to its original state, as per the principle of inpainting. This option is provided for backward compatibility, and it is recommended to always set it to true."}], "additional_mode": [["DISABLE", "ratio additional", "ratio between"], {"default": "ratio between", "tooltip": "..._sde or uni_pc and other special samplers are used, the region is not properly denoised, and it causes a phenomenon that destroys the overall harmony. To compensate for this, a recovery operation is performed using another sampler. This requires a longer time for sampling because a second sampling is performed at each step in each region using a special sampler. 1) DISABLE: Disable this feature. 2) ratio additional: After performing the denoise amount to be performed in the step with the sampler set in the region, the recovery sampler is additionally applied by the additional_sigma_ratio. If you use this option, the total denoise amount increases by additional_sigma_ratio. 3) ratio between: The denoise amount to be performed in the step with the sampler set in the region and the denoise amount to be applied to the recovery sampler are divided by additional_sigma_ratio, and denoise is performed for each denoise amount. If you use this option, the total denoise amount does not change."}], "additional_sampler": [["AUTO", "euler", "heun", "heunpp2", "dpm_2", "dpm_fast", "dpmpp_2m", "ddpm"], {"tooltip": "1) AUTO: Automatically set the recovery sampler. If the sampler is uni_pc, uni_pc_bh2, dpmpp_sde, dpmpp_sde_gpu, the dpm_fast sampler is selected If the sampler is dpmpp_2m_sde, dpmpp_2m_sde_gpu, dpmpp_3m_sde, dpmpp_3m_sde_gpu, the dpmpp_2m sampler is selected. 2) Others: Manually set the recovery sampler."}], "additional_sigma_ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Multiplier of noise schedule to be applied according to additional_mode."}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed", "seed_2nd", "seed_2nd_mode", "steps", "base_only_steps", "denoise", "samples", "base_sampler", "regional_prompts", "overlap_factor", "restore_latent", "additional_mode", "additional_sampler", "additional_sigma_ratio"], "hidden": ["unique_id"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RegionalSampler", "display_name": "RegionalSampler", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["result latent"]}, "RegionalSamplerAdvanced": {"input": {"required": {"add_noise": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "Whether to add noise"}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Random seed to use for generating CPU noise for sampling."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "total sampling steps"}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000, "tooltip": "The starting step of the sampling to be applied at this node within the range of 'steps'."}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000, "tooltip": "The step at which sampling applied at this node will stop within the range of steps (if greater than steps, sampling will continue only up to steps)."}], "overlap_factor": ["INT", {"default": 10, "min": 0, "max": 10000, "tooltip": "To smooth the seams of the region boundaries, expand the mask set in regional_prompts by the overlap_factor amount to overlap with other regions."}], "restore_latent": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled", "tooltip": "At each step, restore the noise outside the mask area to its original state, as per the principle of inpainting. This option is provided for backward compatibility, and it is recommended to always set it to true."}], "return_with_leftover_noise": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled", "tooltip": "Whether to return the latent with noise remaining if the noise has not been completely removed according to the noise schedule, or to completely remove the noise before returning it."}], "latent_image": ["LATENT", {"tooltip": "input latent image"}], "base_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "The sampler applied outside the area set by the regional_prompt."}], "regional_prompts": ["REGIONAL_PROMPTS", {"tooltip": "The prompt applied to each region"}], "additional_mode": [["DISABLE", "ratio additional", "ratio between"], {"default": "ratio between", "tooltip": "..._sde or uni_pc and other special samplers are used, the region is not properly denoised, and it causes a phenomenon that destroys the overall harmony. To compensate for this, a recovery operation is performed using another sampler. This requires a longer time for sampling because a second sampling is performed at each step in each region using a special sampler. 1) DISABLE: Disable this feature. 2) ratio additional: After performing the denoise amount to be performed in the step with the sampler set in the region, the recovery sampler is additionally applied by the additional_sigma_ratio. If you use this option, the total denoise amount increases by additional_sigma_ratio. 3) ratio between: The denoise amount to be performed in the step with the sampler set in the region and the denoise amount to be applied to the recovery sampler are divided by additional_sigma_ratio, and denoise is performed for each denoise amount. If you use this option, the total denoise amount does not change."}], "additional_sampler": [["AUTO", "euler", "heun", "heunpp2", "dpm_2", "dpm_fast", "dpmpp_2m", "ddpm"], {"tooltip": "1) AUTO: Automatically set the recovery sampler. If the sampler is uni_pc, uni_pc_bh2, dpmpp_sde, dpmpp_sde_gpu, the dpm_fast sampler is selected If the sampler is dpmpp_2m_sde, dpmpp_2m_sde_gpu, dpmpp_3m_sde, dpmpp_3m_sde_gpu, the dpmpp_2m sampler is selected. 2) Others: Manually set the recovery sampler."}], "additional_sigma_ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Multiplier of noise schedule to be applied according to additional_mode."}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["add_noise", "noise_seed", "steps", "start_at_step", "end_at_step", "overlap_factor", "restore_latent", "return_with_leftover_noise", "latent_image", "base_sampler", "regional_prompts", "additional_mode", "additional_sampler", "additional_sigma_ratio"], "hidden": ["unique_id"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RegionalSamplerAdvanced", "display_name": "RegionalSamplerAdvanced", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["result latent"]}, "CombineRegionalPrompts": {"input": {"required": {"regional_prompts1": ["REGIONAL_PROMPTS", {"tooltip": "input regional_prompts. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["regional_prompts1"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "CombineRegionalPrompts", "display_name": "CombineRegionalPrompts", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["Combined REGIONAL_PROMPTS"]}, "RegionalPrompt": {"input": {"required": {"mask": ["MASK", {"tooltip": "region mask"}], "advanced_sampler": ["KSAMPLER_ADVANCED", {"tooltip": "sampler for specified region"}]}, "optional": {"variation_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "tooltip": "Sets the extra seed to be used for noise variation."}], "variation_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "Sets the strength of the noise variation."}], "variation_method": [["linear", "slerp"], {"tooltip": "Sets how the original noise and extra noise are blended together."}]}}, "input_order": {"required": ["mask", "advanced_sampler"], "optional": ["variation_seed", "variation_strength", "variation_method"]}, "output": ["REGIONAL_PROMPTS"], "output_is_list": [false], "output_name": ["REGIONAL_PROMPTS"], "name": "RegionalPrompt", "display_name": "RegionalPrompt", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Regional", "output_node": false, "output_tooltips": ["regional prompts. (Can be used in the RegionalSampler.)"]}, "ImpactCombineConditionings": {"input": {"required": {"conditioning1": ["CONDITIONING", {"tooltip": "input conditionings. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["conditioning1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactCombineConditionings", "display_name": "Combine Conditionings", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Combined conditioning"]}, "ImpactConcatConditionings": {"input": {"required": {"conditioning1": ["CONDITIONING", {"tooltip": "input conditionings. (Connecting to the input slot increases the number of additional slots.)"}]}}, "input_order": {"required": ["conditioning1"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ImpactConcatConditionings", "display_name": "Concat Conditionings", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false, "output_tooltips": ["Concatenated conditioning"]}, "ImpactSEGSLabelAssign": {"input": {"required": {"segs": ["SEGS"], "labels": ["STRING", {"multiline": true, "placeholder": "List the label to be assigned in order of segs, separated by commas"}]}}, "input_order": {"required": ["segs", "labels"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["SEGS"], "name": "ImpactSEGSLabelAssign", "display_name": "SEGS Assign (label)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSLabelFilter": {"input": {"required": {"segs": ["SEGS"], "preset": [["all", "hand", "face", "mouth", "eyes", "eyebrows", "pupils", "left_eyebrow", "left_eye", "left_pupil", "right_eyebrow", "right_eye", "right_pupil", "short_sleeved_shirt", "long_sleeved_shirt", "short_sleeved_outwear", "long_sleeved_outwear", "vest", "sling", "shorts", "trousers", "skirt", "short_sleeved_dress", "long_sleeved_dress", "vest_dress", "sling_dress", "person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]], "labels": ["STRING", {"multiline": true, "placeholder": "List the types of segments to be allowed, separated by commas"}]}}, "input_order": {"required": ["segs", "preset", "labels"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSLabelFilter", "display_name": "SEGS Filter (label)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSRangeFilter": {"input": {"required": {"segs": ["SEGS"], "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "length_percent", "confidence(0-100)"]], "mode": ["BOOLEAN", {"default": true, "label_on": "inside", "label_off": "outside"}], "min_value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "max_value": ["INT", {"default": 67108864, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["segs", "target", "mode", "min_value", "max_value"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSRangeFilter", "display_name": "SEGS Filter (range)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSOrderedFilter": {"input": {"required": {"segs": ["SEGS"], "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2", "confidence", "none"]], "order": ["BOOLEAN", {"default": true, "label_on": "descending", "label_off": "ascending"}], "take_start": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "take_count": ["INT", {"default": 1, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["segs", "target", "order", "take_start", "take_count"]}, "output": ["SEGS", "SEGS"], "output_is_list": [false, false], "output_name": ["filtered_SEGS", "remained_SEGS"], "name": "ImpactSEGSOrderedFilter", "display_name": "SEGS Filter (ordered)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSIntersectionFilter": {"input": {"required": {"segs1": ["SEGS"], "segs2": ["SEGS"], "ioa_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["segs1", "segs2", "ioa_threshold"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["filtered_SEGS"], "name": "ImpactSEGSIntersectionFilter", "display_name": "SEGS Filter (intersection)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactSEGSNMSFilter": {"input": {"required": {"segs": ["SEGS"], "iou_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["segs", "iou_threshold"]}, "output": ["SEGS"], "output_is_list": [false], "output_name": ["filtered_SEGS"], "name": "ImpactSEGSNMSFilter", "display_name": "SEGS Filter (non max suppression)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactCompare": {"input": {"required": {"cmp": [["a = b", "a <> b", "a > b", "a < b", "a >= b", "a <= b", "tt", "ff"]], "a": ["*"], "b": ["*"]}}, "input_order": {"required": ["cmp", "a", "b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactCompare", "display_name": "ImpactCompare", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalBranch": {"input": {"required": {"cond": ["BOOLEAN"], "tt_value": ["*", {"lazy": true}], "ff_value": ["*", {"lazy": true}]}}, "input_order": {"required": ["cond", "tt_value", "ff_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactConditionalBranch", "display_name": "ImpactConditionalBranch", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalBranchSelMode": {"input": {"required": {"cond": ["BOOLEAN"]}, "optional": {"tt_value": ["*"], "ff_value": ["*"]}}, "input_order": {"required": ["cond"], "optional": ["tt_value", "ff_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactConditionalBranchSelMode", "display_name": "ImpactConditionalBranchSelMode", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactIfNone": {"input": {"required": {}, "optional": {"signal": ["*"], "any_input": ["*"]}}, "input_order": {"required": [], "optional": ["signal", "any_input"]}, "output": ["*", "BOOLEAN"], "output_is_list": [false, false], "output_name": ["signal_opt", "bool"], "name": "ImpactIfNone", "display_name": "ImpactIfNone", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConvertDataType": {"input": {"required": {"value": ["*"]}}, "input_order": {"required": ["value"]}, "output": ["STRING", "FLOAT", "INT", "BOOLEAN"], "output_is_list": [false, false, false, false], "output_name": ["STRING", "FLOAT", "INT", "BOOLEAN"], "name": "ImpactConvertDataType", "display_name": "ImpactConvertDataType", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactLogicalOperators": {"input": {"required": {"operator": [["and", "or", "xor"]], "bool_a": ["BOOLEAN", {"forceInput": true}], "bool_b": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["operator", "bool_a", "bool_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactLogicalOperators", "display_name": "ImpactLogicalOperators", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactInt": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactInt", "display_name": "ImpactInt", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactFloat": {"input": {"required": {"value": ["FLOAT", {"default": 1.0, "min": -3.402823466e+38, "max": 3.402823466e+38}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "ImpactFloat", "display_name": "ImpactFloat", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactBoolean": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactBoolean", "display_name": "ImpactBoolean", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactValueSender": {"input": {"required": {"value": ["*"], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}, "optional": {"signal_opt": ["*"]}}, "input_order": {"required": ["value", "link_id"], "optional": ["signal_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal"], "name": "ImpactValueSender", "display_name": "ImpactValueSender", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactValueReceiver": {"input": {"required": {"typ": [["STRING", "INT", "FLOAT", "BOOLEAN"]], "value": ["STRING", {"default": ""}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}]}}, "input_order": {"required": ["typ", "value", "link_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactValueReceiver", "display_name": "ImpactValueReceiver", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactImageInfo": {"input": {"required": {"value": ["IMAGE"]}}, "input_order": {"required": ["value"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["batch", "height", "width", "channel"], "name": "ImpactImageInfo", "display_name": "ImpactImageInfo", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactLatentInfo": {"input": {"required": {"value": ["LATENT"]}}, "input_order": {"required": ["value"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["batch", "height", "width", "channel"], "name": "ImpactLatentInfo", "display_name": "ImpactLatentInfo", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactMinMax": {"input": {"required": {"mode": ["BOOLEAN", {"default": true, "label_on": "max", "label_off": "min"}], "a": ["*"], "b": ["*"]}}, "input_order": {"required": ["mode", "a", "b"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "ImpactMinMax", "display_name": "ImpactMinMax", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": false}, "ImpactNeg": {"input": {"required": {"value": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactNeg", "display_name": "ImpactNeg", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactConditionalStopIteration": {"input": {"required": {"cond": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["cond"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactConditionalStopIteration", "display_name": "ImpactConditionalStopIteration", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactStringSelector": {"input": {"required": {"strings": ["STRING", {"multiline": true}], "multiline": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "select": ["INT", {"min": 0, "max": 9223372036854775807, "step": 1, "default": 0}]}}, "input_order": {"required": ["strings", "multiline", "select"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ImpactStringSelector", "display_name": "String Selector", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "StringListToString": {"input": {"required": {"join_with": ["STRING", {"default": "\\n"}], "string_list": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["join_with", "string_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringListToString", "display_name": "String List to String", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "WildcardPromptFromString": {"input": {"required": {"string": ["STRING", {"forceInput": true}], "delimiter": ["STRING", {"multiline": false, "default": "\\n"}], "prefix_all": ["STRING", {"multiline": false}], "postfix_all": ["STRING", {"multiline": false}], "restrict_to_tags": ["STRING", {"multiline": false}], "exclude_tags": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["string", "delimiter", "prefix_all", "postfix_all", "restrict_to_tags", "exclude_tags"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["wildcard", "segs_labels"], "name": "WildcardPromptFromString", "display_name": "Wildcard Prompt from String", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactExecutionOrderController": {"input": {"required": {"signal": ["*"], "value": ["*"]}}, "input_order": {"required": ["signal", "value"]}, "output": ["*", "*"], "output_is_list": [false, false], "output_name": ["signal", "value"], "name": "ImpactExecutionOrderController", "display_name": "Execution Order Controller", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactListBridge": {"input": {"required": {"list_input": ["*"]}}, "input_order": {"required": ["list_input"]}, "output": ["*"], "output_is_list": [true], "output_name": ["list_output"], "name": "ImpactListBridge", "display_name": "List Bridge", "description": "When passing the list output through this node, it collects and organizes the data before forwarding it, which ensures that the previous stage's sub-workflow has been completed.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "RemoveNoiseMask": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RemoveNoiseMask", "display_name": "Remove Noise Mask", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "ImpactLogger": {"input": {"required": {"data": ["*"], "text": ["STRING", {"multiline": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["data", "text"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactLogger", "display_name": "ImpactLogger", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Debug", "output_node": true}, "ImpactDummyInput": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "ImpactDummyInput", "display_name": "ImpactDummyInput", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Debug", "output_node": false}, "ImpactQueueTrigger": {"input": {"required": {"signal": ["*"], "mode": ["BOOLEAN", {"default": true, "label_on": "Trigger", "label_off": "Don't trigger"}]}}, "input_order": {"required": ["signal", "mode"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactQueueTrigger", "display_name": "Queue Trigger", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactQueueTriggerCountdown": {"input": {"required": {"count": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "total": ["INT", {"default": 10, "min": 1, "max": 18446744073709551615}], "mode": ["BOOLEAN", {"default": true, "label_on": "Trigger", "label_off": "Don't trigger"}]}, "optional": {"signal": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["count", "total", "mode"], "optional": ["signal"], "hidden": ["unique_id"]}, "output": ["*", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["signal_opt", "count", "total"], "name": "ImpactQueueTriggerCountdown", "display_name": "Queue Trigger (Countdown)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactSetWidgetValue": {"input": {"required": {"signal": ["*"], "node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}]}, "optional": {"boolean_value": ["BOOLEAN", {"forceInput": true}], "int_value": ["INT", {"forceInput": true}], "float_value": ["FLOAT", {"forceInput": true}], "string_value": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["signal", "node_id", "widget_name"], "optional": ["boolean_value", "int_value", "float_value", "string_value"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactSetWidgetValue", "display_name": "Set Widget Value", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactNodeSetMuteState": {"input": {"required": {"signal": ["*"], "node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "set_state": ["BOOLEAN", {"default": true, "label_on": "active", "label_off": "mute"}]}}, "input_order": {"required": ["signal", "node_id", "set_state"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactNodeSetMuteState", "display_name": "Set Mute State", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactControlBridge": {"input": {"required": {"value": ["*"], "mode": ["BOOLEAN", {"default": true, "label_on": "Active", "label_off": "Stop/Mute/Bypass"}], "behavior": [["Stop", "Mute", "Bypass"]]}, "hidden": {"unique_id": "UNIQUE_ID", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["value", "mode", "behavior"], "hidden": ["unique_id", "prompt", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["value"], "name": "ImpactControlBridge", "display_name": "Control Bridge", "description": "When behavior is Stop and mode is active, the input value is passed directly to the output.\nWhen behavior is Mute/Bypass and mode is active, the node connected to the output is changed to active state.\nWhen behavior is Stop and mode is Stop/Mute/Bypass, the workflow execution of the current node is halted.\nWhen behavior is Mute/Bypass and mode is Stop/Mute/Bypass, the node connected to the output is changed to Mute/Bypass state.", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": true}, "ImpactIsNotEmptySEGS": {"input": {"required": {"segs": ["SEGS"]}}, "input_order": {"required": ["segs"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "ImpactIsNotEmptySEGS", "display_name": "SEGS isn't Empty", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic", "output_node": false}, "ImpactSleep": {"input": {"required": {"signal": ["*"], "seconds": ["FLOAT", {"default": 0.5, "min": 0, "max": 3600}]}}, "input_order": {"required": ["signal", "seconds"]}, "output": ["*"], "output_is_list": [false], "output_name": ["signal_opt"], "name": "ImpactSleep", "display_name": "Sleep", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactRemoteBoolean": {"input": {"required": {"node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}], "value": ["BOOLEAN", {"default": true, "label_on": "True", "label_off": "False"}]}}, "input_order": {"required": ["node_id", "widget_name", "value"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactRemoteBoolean", "display_name": "Remote Boolean (on prompt)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactRemoteInt": {"input": {"required": {"node_id": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "widget_name": ["STRING", {"multiline": false}], "value": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["node_id", "widget_name", "value"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImpactRemoteInt", "display_name": "Remote Int (on prompt)", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Logic/_for_test", "output_node": true}, "ImpactHFTransformersClassifierProvider": {"input": {"required": {"preset_repo_id": [["rizvandwiki/gender-classification-2", "NTQAI/pedestrian_gender_recognition", "Leilab/gender_class", "ProjectPersonal/GenderClassifier", "crangana/trained-gender", "cledoux42/GenderNew_v002", "ivensamdh/genderage2", "Manual repo id"]], "manual_repo_id": ["STRING", {"multiline": false}], "device_mode": [["AUTO", "Prefer GPU", "CPU"]]}}, "input_order": {"required": ["preset_repo_id", "manual_repo_id", "device_mode"]}, "output": ["TRANSFORMERS_CLASSIFIER"], "output_is_list": [false], "output_name": ["TRANSFORMERS_CLASSIFIER"], "name": "ImpactHFTransformersClassifierProvider", "display_name": "HF Transformers Classifier Provider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/HuggingFace", "output_node": false}, "ImpactSEGSClassify": {"input": {"required": {"classifier": ["TRANSFORMERS_CLASSIFIER"], "segs": ["SEGS"], "preset_expr": [["#Female > #Male", "#Female < #Male", "female > 0.5", "male > 0.5", "Age16to25 > 0.1", "Age50to69 > 0.1", "Manual expr"]], "manual_expr": ["STRING", {"multiline": false}]}, "optional": {"ref_image_opt": ["IMAGE"]}}, "input_order": {"required": ["classifier", "segs", "preset_expr", "manual_expr"], "optional": ["ref_image_opt"]}, "output": ["SEGS", "SEGS", "STRING"], "output_is_list": [false, false, true], "output_name": ["filtered_SEGS", "remained_SEGS", "detected_labels"], "name": "ImpactSEGSClassify", "display_name": "SEGS Classify", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/HuggingFace", "output_node": false}, "ImpactSchedulerAdapter": {"input": {"required": {"scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"], {"defaultInput": true}], "extra_scheduler": [["None", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]]}}, "input_order": {"required": ["scheduler", "extra_scheduler"]}, "output": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal", "AYS SDXL", "AYS SD1", "AYS SVD", "GITS[coeff=1.2]", "LTXV[default]", "OSS FLUX", "OSS Wan", "OSS Chroma"]], "output_is_list": [false], "output_name": ["scheduler"], "name": "ImpactSchedulerAdapter", "display_name": "Impact Scheduler Adapter", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/Util", "output_node": false}, "GITSSchedulerFuncProvider": {"input": {"required": {"coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05, "tooltip": "coeff factor of GITS Scheduler"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "denoise amount for noise schedule"}]}}, "input_order": {"required": ["coeff", "denoise"]}, "output": ["SCHEDULER_FUNC"], "output_is_list": [false], "output_name": ["SCHEDULER_FUNC"], "name": "GITSSchedulerFuncProvider", "display_name": "GITSScheduler Func Provider", "description": "", "python_module": "custom_nodes.comfyui-impact-pack", "category": "ImpactPack/sampling", "output_node": false, "output_tooltips": ["Returns a function that generates a noise schedule using GITSScheduler. This can be used in place of a predetermined noise schedule to dynamically generate a noise schedule based on the steps."]}, "InstantIDModelLoader": {"input": {"required": {"instantid_file": [["ip-adapter.bin"]]}}, "input_order": {"required": ["instantid_file"]}, "output": ["INSTANTID"], "output_is_list": [false], "output_name": ["INSTANTID"], "name": "InstantIDModelLoader", "display_name": "Load InstantID Model", "description": "", "python_module": "custom_nodes.ComfyUI_ZenID", "category": "ZenID", "output_node": false}, "InstantIDFaceAnalysis": {"input": {"required": {"provider": [["CPU", "CUDA", "ROCM", "CoreML"]]}}, "input_order": {"required": ["provider"]}, "output": ["FACEANALYSIS"], "output_is_list": [false], "output_name": ["FACEANALYSIS"], "name": "InstantIDFaceAnalysis", "display_name": "InstantID Face Analysis", "description": "", "python_module": "custom_nodes.ComfyUI_ZenID", "category": "ZenID", "output_node": false}, "ApplyZenID": {"input": {"required": {"control_net": ["CONTROL_NET"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "image_source": ["IMAGE"], "image_face": ["IMAGE"], "instantid_file": [["ip-adapter.bin"]], "insightface": [["CPU", "CUDA", "ROCM", "CoreML"]], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "blur_kernel": ["INT", {"default": 51, "min": 1, "max": 101, "step": 2}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["control_net", "model", "clip", "vae", "image_source", "image_face", "instantid_file", "insightface", "weight", "start_at", "end_at", "blur_kernel"], "optional": ["mask"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "positive", "negative", "latent"], "name": "ApplyZenID", "display_name": "ZenID FaceSwap", "description": "", "python_module": "custom_nodes.ComfyUI_ZenID", "category": "ZenID", "output_node": false}, "ZenIDCombineFace": {"input": {"required": {"control_net": ["CONTROL_NET"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "instantid_file": [["ip-adapter.bin"]], "insightface": [["CPU", "CUDA", "ROCM", "CoreML"]], "balance": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["control_net", "model", "positive", "negative", "image_1", "image_2", "instantid_file", "insightface", "balance", "weight", "start_at", "end_at"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "positive", "negative"], "name": "ZenIDCombineFace", "display_name": "ZenID Combine Face", "description": "", "python_module": "custom_nodes.ComfyUI_ZenID", "category": "ZenID", "output_node": false}, "ArithmeticBlend": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "blend_mode": [["add", "subtract", "difference", "divide"]]}}, "input_order": {"required": ["image1", "image2", "blend_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ArithmeticBlend", "display_name": "ArithmeticBlend", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Blends", "output_node": false}, "AsciiArt": {"input": {"required": {"image": ["IMAGE"], "char_size": ["INT", {"default": 12, "min": 0, "max": 64, "step": 2}], "font_size": ["INT", {"default": 12, "min": 0, "max": 64, "step": 2}]}}, "input_order": {"required": ["image", "char_size", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AsciiArt", "display_name": "AsciiArt", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "Blend": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "blend_mode": [["normal", "multiply", "screen", "overlay", "soft_light"]]}}, "input_order": {"required": ["image1", "image2", "blend_factor", "blend_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blend", "display_name": "Blend", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Blends", "output_node": false}, "Blur": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 1, "min": 1, "max": 15, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["image", "blur_radius", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blur", "display_name": "Blur", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Filters", "output_node": false}, "CannyEdgeMask": {"input": {"required": {"image": ["IMAGE"], "lower_threshold": ["INT", {"default": 100, "min": 0, "max": 500, "step": 10}], "upper_threshold": ["INT", {"default": 200, "min": 0, "max": 500, "step": 10}]}}, "input_order": {"required": ["image", "lower_threshold", "upper_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CannyEdgeMask", "display_name": "CannyEdgeMask", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Masks", "output_node": false}, "ChromaticAberration": {"input": {"required": {"image": ["IMAGE"], "red_shift": ["INT", {"default": 0, "min": -20, "max": 20, "step": 1}], "red_direction": [["horizontal", "vertical"]], "green_shift": ["INT", {"default": 0, "min": -20, "max": 20, "step": 1}], "green_direction": [["horizontal", "vertical"]], "blue_shift": ["INT", {"default": 0, "min": -20, "max": 20, "step": 1}], "blue_direction": [["horizontal", "vertical"]]}}, "input_order": {"required": ["image", "red_shift", "red_direction", "green_shift", "green_direction", "blue_shift", "blue_direction"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ChromaticAberration", "display_name": "ChromaticAberration", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "ColorCorrect": {"input": {"required": {"image": ["IMAGE"], "temperature": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 5}], "hue": ["FLOAT", {"default": 0, "min": -90, "max": 90, "step": 5}], "brightness": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 5}], "contrast": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 5}], "saturation": ["FLOAT", {"default": 0, "min": -100, "max": 100, "step": 5}], "gamma": ["FLOAT", {"default": 1, "min": 0.2, "max": 2.2, "step": 0.1}]}}, "input_order": {"required": ["image", "temperature", "hue", "brightness", "contrast", "saturation", "gamma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorCorrect", "display_name": "ColorCorrect", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Color Adjustments", "output_node": false}, "ColorTint": {"input": {"required": {"image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1}], "mode": [["sepia", "red", "green", "blue", "cyan", "magenta", "yellow", "purple", "orange", "warm", "cool", "lime", "navy", "vintage", "rose", "teal", "maroon", "peach", "lavender", "olive"]]}}, "input_order": {"required": ["image", "strength", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorTint", "display_name": "ColorTint", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Color Adjustments", "output_node": false}, "Dissolve": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "dissolve_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image1", "image2", "dissolve_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Dissolve", "display_name": "Dissolve", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Blends", "output_node": false}, "DodgeAndBurn": {"input": {"required": {"image": ["IMAGE"], "mask": ["IMAGE"], "intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "mode": [["dodge", "burn", "dodge_and_burn", "burn_and_dodge", "color_dodge", "color_burn", "linear_dodge", "linear_burn"]]}}, "input_order": {"required": ["image", "mask", "intensity", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DodgeAndBurn", "display_name": "DodgeAndBurn", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Blends", "output_node": false}, "FilmGrain": {"input": {"required": {"image": ["IMAGE"], "intensity": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "scale": ["FLOAT", {"default": 10, "min": 1, "max": 100, "step": 1}], "temperature": ["FLOAT", {"default": 0.0, "min": -100, "max": 100, "step": 1}], "vignette": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image", "intensity", "scale", "temperature", "vignette"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FilmGrain", "display_name": "FilmGrain", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "Glow": {"input": {"required": {"image": ["IMAGE"], "intensity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "blur_radius": ["INT", {"default": 5, "min": 1, "max": 50, "step": 1}]}}, "input_order": {"required": ["image", "intensity", "blur_radius"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Glow", "display_name": "Glow", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "HSVThresholdMask": {"input": {"required": {"image": ["IMAGE"], "low_threshold": ["FLOAT", {"default": 0.2, "min": 0, "max": 1, "step": 0.1}], "high_threshold": ["FLOAT", {"default": 0.7, "min": 0, "max": 1, "step": 0.1}], "hsv_channel": [["hue", "saturation", "value"]]}}, "input_order": {"required": ["image", "low_threshold", "high_threshold", "hsv_channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "HSVThresholdMask", "display_name": "HSVThresholdMask", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Masks", "output_node": false}, "KuwaharaBlur": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 3, "min": 0, "max": 31, "step": 1}], "method": [["mean", "gaussian"]]}}, "input_order": {"required": ["image", "blur_radius", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "KuwaharaBlur", "display_name": "KuwaharaBlur", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Filters", "output_node": false}, "Parabolize": {"input": {"required": {"image": ["IMAGE"], "coeff": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.1}], "vertex_x": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1}], "vertex_y": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "coeff", "vertex_x", "vertex_y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Parabolize", "display_name": "Parabolize", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Color Adjustments", "output_node": false}, "PencilSketch": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 5, "min": 1, "max": 31, "step": 1}], "sharpen_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["image", "blur_radius", "sharpen_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PencilSketch", "display_name": "PencilSketch", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "PixelSort": {"input": {"required": {"image": ["IMAGE"], "mask": ["IMAGE"], "direction": [["horizontal", "vertical"]], "span_limit": ["INT", {"default": 50, "min": 0, "max": 100, "step": 5}], "sort_by": [["hue", "saturation", "value"]], "order": [["forward", "backward"]]}}, "input_order": {"required": ["image", "mask", "direction", "span_limit", "sort_by", "order"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PixelSort", "display_name": "PixelSort", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "Pixelize": {"input": {"required": {"image": ["IMAGE"], "pixel_size": ["INT", {"default": 8, "min": 2, "max": 128, "step": 1}]}}, "input_order": {"required": ["image", "pixel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Pixelize", "display_name": "Pixelize", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "Quantize": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 256, "min": 1, "max": 256, "step": 1}], "dither": [["none", "floyd-steinberg"]]}}, "input_order": {"required": ["image", "colors", "dither"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Quantize", "display_name": "Quantize", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Color Adjustments", "output_node": false}, "Sharpen": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 15, "step": 1}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 5.0, "step": 0.1}]}}, "input_order": {"required": ["image", "sharpen_radius", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sharpen", "display_name": "Sharpen", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Filters", "output_node": false}, "SineWave": {"input": {"required": {"image": ["IMAGE"], "amplitude": ["FLOAT", {"default": 10, "min": 0, "max": 150, "step": 5}], "frequency": ["FLOAT", {"default": 5, "min": 0, "max": 20, "step": 1}], "direction": [["horizontal", "vertical"]]}}, "input_order": {"required": ["image", "amplitude", "frequency", "direction"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SineWave", "display_name": "SineWave", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "Solarize": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Solarize", "display_name": "Solarize", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Color Adjustments", "output_node": false}, "Vignette": {"input": {"required": {"image": ["IMAGE"], "vignette": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image", "vignette"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Vignette", "display_name": "Vignette", "description": "", "python_module": "custom_nodes.comfyui-post-processing-nodes", "category": "postprocessing/Effects", "output_node": false}, "DetailDaemonSamplerNode": {"input": {"required": {"sampler": ["SAMPLER"], "detail_amount": ["FLOAT", {"default": 0.1, "min": -5.0, "max": 5.0, "step": 0.01}], "start": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "end": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "bias": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "exponent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "start_offset": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "end_offset": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "fade": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "smooth": ["BOOLEAN", {"default": true}], "cfg_scale_override": ["FLOAT", {"default": 0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01, "tooltip": "If set to 0, the sampler will automatically determine the CFG scale (if possible). Set to some other value to override."}]}}, "input_order": {"required": ["sampler", "detail_amount", "start", "end", "bias", "exponent", "start_offset", "end_offset", "fade", "smooth", "cfg_scale_override"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "DetailDaemonSamplerNode", "display_name": "Detail Daemon Sampler", "description": "This sampler wrapper works by adjusting the sigma passed to the model, while the rest of sampling stays the same.", "python_module": "custom_nodes.comfyui-detail-daemon", "category": "sampling/custom_sampling/samplers", "output_node": false}, "DetailDaemonGraphSigmasNode": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "detail_amount": ["FLOAT", {"default": 0.1, "min": -5.0, "max": 5.0, "step": 0.01}], "start": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "end": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.01}], "bias": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "exponent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "start_offset": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "end_offset": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "fade": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "smooth": ["BOOLEAN", {"default": true}], "cfg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["sigmas", "detail_amount", "start", "end", "bias", "exponent", "start_offset", "end_offset", "fade", "smooth", "cfg_scale"]}, "output": [], "output_is_list": [], "output_name": [], "name": "DetailDaemonGraphSigmasNode", "display_name": "Detail Daemon Graph Sigmas", "description": "", "python_module": "custom_nodes.comfyui-detail-daemon", "category": "sampling/custom_sampling/sigmas", "output_node": true}, "MultiplySigmas": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "factor": ["FLOAT", {"default": 1, "min": 0, "max": 100, "step": 0.001}], "start": ["FLOAT", {"default": 0, "min": 0, "max": 1, "step": 0.001}], "end": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.001}]}}, "input_order": {"required": ["sigmas", "factor", "start", "end"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "MultiplySigmas", "display_name": "Multiply Sigmas (stateless)", "description": "", "python_module": "custom_nodes.comfyui-detail-daemon", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "LyingSigmaSampler": {"input": {"required": {"sampler": ["SAMPLER"], "dishonesty_factor": ["FLOAT", {"default": -0.05, "min": -0.999, "step": 0.01, "tooltip": "Multiplier for sigmas passed to the model. -0.05 means we reduce the sigma by 5%."}]}, "optional": {"start_percent": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["sampler", "dishonesty_factor"], "optional": ["start_percent", "end_percent"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "LyingSigmaSampler", "display_name": "Lying Sigma Sampler", "description": "", "python_module": "custom_nodes.comfyui-detail-daemon", "category": "sampling/custom_sampling", "output_node": false}, "UltimateSDUpscale": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "upscale_by": ["FLOAT", {"default": 2, "min": 0.05, "max": 4, "step": 0.05}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "upscale_model": ["UPSCALE_MODEL"], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "model", "positive", "negative", "vae", "upscale_by", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "upscale_model", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscale", "display_name": "Ultimate SD Upscale", "description": "", "python_module": "custom_nodes.comfyui_ultimatesdupscale", "category": "image/upscaling", "output_node": false}, "UltimateSDUpscaleNoUpscale": {"input": {"required": {"upscaled_image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["upscaled_image", "model", "positive", "negative", "vae", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscaleNoUpscale", "display_name": "Ultimate SD Upscale (No Upscale)", "description": "", "python_module": "custom_nodes.comfyui_ultimatesdupscale", "category": "image/upscaling", "output_node": false}, "UltimateSDUpscaleCustomSample": {"input": {"required": {"image": ["IMAGE"], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "upscale_by": ["FLOAT", {"default": 2, "min": 0.05, "max": 4, "step": 0.05}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "denoise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mode_type": [["Linear", "Chess", "None"]], "tile_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "tile_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "tile_padding": ["INT", {"default": 32, "min": 0, "max": 8192, "step": 8}], "seam_fix_mode": [["None", "Band Pass", "Half Tile", "Half Tile + Intersections"]], "seam_fix_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seam_fix_width": ["INT", {"default": 64, "min": 0, "max": 8192, "step": 8}], "seam_fix_mask_blur": ["INT", {"default": 8, "min": 0, "max": 64, "step": 1}], "seam_fix_padding": ["INT", {"default": 16, "min": 0, "max": 8192, "step": 8}], "force_uniform_tiles": ["BOOLEAN", {"default": true}], "tiled_decode": ["BOOLEAN", {"default": false}]}, "optional": {"upscale_model": ["UPSCALE_MODEL"], "custom_sampler": ["SAMPLER"], "custom_sigmas": ["SIGMAS"]}}, "input_order": {"required": ["image", "model", "positive", "negative", "vae", "upscale_by", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "mode_type", "tile_width", "tile_height", "mask_blur", "tile_padding", "seam_fix_mode", "seam_fix_denoise", "seam_fix_width", "seam_fix_mask_blur", "seam_fix_padding", "force_uniform_tiles", "tiled_decode"], "optional": ["upscale_model", "custom_sampler", "custom_sigmas"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UltimateSDUpscaleCustomSample", "display_name": "Ultimate SD Upscale (Custom Sample)", "description": "", "python_module": "custom_nodes.comfyui_ultimatesdupscale", "category": "image/upscaling", "output_node": false}, "BLIP Model Loader": {"input": {"required": {"blip_model": ["STRING", {"default": "Salesforce/blip-image-captioning-base"}], "vqa_model_id": ["STRING", {"default": "Salesforce/blip-vqa-base"}], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["blip_model", "vqa_model_id", "device"]}, "output": ["BLIP_MODEL"], "output_is_list": [false], "output_name": ["BLIP_MODEL"], "name": "BLIP Model Loader", "display_name": "BLIP Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "Blend Latents": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "operation": [["add", "multiply", "divide", "subtract", "overlay", "hard_light", "soft_light", "screen", "linear_dodge", "difference", "exclusion", "random"]], "blend": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["latent_a", "latent_b", "operation", "blend"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Blend Latents", "display_name": "Blend Latents", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Latent", "output_node": false}, "Bus Node": {"input": {"required": {}, "optional": {"bus": ["BUS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["bus", "model", "clip", "vae", "positive", "negative"]}, "output": ["BUS", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["bus", "model", "clip", "vae", "positive", "negative"], "name": "Bus Node", "display_name": "Bus Node", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Utilities", "output_node": false}, "Cache Node": {"input": {"required": {"latent_suffix": ["STRING", {"default": "83032874_cache", "multiline": false}], "image_suffix": ["STRING", {"default": "71260042_cache", "multiline": false}], "conditioning_suffix": ["STRING", {"default": "37162453_cache", "multiline": false}]}, "optional": {"output_path": ["STRING", {"default": "/workspace/comfy/custom_nodes/was-ns/cache", "multiline": false}], "latent": ["LATENT"], "image": ["IMAGE"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["latent_suffix", "image_suffix", "conditioning_suffix"], "optional": ["output_path", "latent", "image", "conditioning"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["latent_filename", "image_filename", "conditioning_filename"], "name": "Cache Node", "display_name": "Cache Node", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": true}, "Checkpoint Loader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [[]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader", "display_name": "Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Checkpoint Loader (Simple)": {"input": {"required": {"ckpt_name": [[]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader (Simple)", "display_name": "Checkpoint Loader (Simple)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPTextEncode (NSP)": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"multiline": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text", "clip"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["conditioning", "parsed_text", "raw_text"], "name": "CLIPTextEncode (NSP)", "display_name": "CLIPTextEncode (NSP)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Conditioning", "output_node": true}, "CLIP Input Switch": {"input": {"required": {"clip_a": ["CLIP"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_a", "clip_b", "boolean"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIP Input Switch", "display_name": "CLIP Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "CLIP Vision Input Switch": {"input": {"required": {"clip_vision_a": ["CLIP_VISION"], "clip_vision_b": ["CLIP_VISION"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_vision_a", "clip_vision_b", "boolean"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIP Vision Input Switch", "display_name": "CLIP Vision Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Conditioning Input Switch": {"input": {"required": {"conditioning_a": ["CONDITIONING"], "conditioning_b": ["CONDITIONING"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["conditioning_a", "conditioning_b", "boolean"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Conditioning Input Switch", "display_name": "Conditioning Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Constant Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "number": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}]}, "optional": {"number_as_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["number_type", "number"], "optional": ["number_as_text"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Constant Number", "display_name": "Constant Number", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "Create Grid Image": {"input": {"required": {"images_path": ["STRING", {"default": "./ComfyUI/input/", "multiline": false}], "pattern_glob": ["STRING", {"default": "*", "multiline": false}], "include_subfolders": [["false", "true"]], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 1280, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images_path", "pattern_glob", "include_subfolders", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image", "display_name": "Create Grid Image", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Grid Image from Batch": {"input": {"required": {"images": ["IMAGE"], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 2048, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image from Batch", "display_name": "Create Grid Image from Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Morph Image": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["image_a", "image_b", "transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename", "filetype"]}, "output": ["IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image_a_pass", "image_b_pass", "filepath_text", "filename_text"], "name": "Create Morph Image", "display_name": "Create Morph Image", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation", "output_node": false}, "Create Morph Image from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI", "multiline": false}], "input_pattern": ["STRING", {"default": "*", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "input_path", "input_pattern", "output_path", "filename", "filetype"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Morph Image from Path", "display_name": "Create Morph Image from Path", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation", "output_node": false}, "Create Video from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.01, "max": 60000.0, "step": 0.01}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI/input", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_video", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["transition_frames", "image_delay_sec", "fps", "max_size", "input_path", "output_path", "filename", "codec"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Video from Path", "display_name": "Create Video from Path", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSeg Masking": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text"], "optional": ["clipseg_model"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["MASK", "MASK_IMAGE"], "name": "CLIPSeg Masking", "display_name": "CLIPSeg Masking", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "CLIPSeg Model Loader": {"input": {"required": {"model": ["STRING", {"default": "CIDAS/clipseg-rd64-refined", "multiline": false}]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEG_MODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "CLIPSeg Model Loader", "display_name": "CLIPSeg Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPSeg Batch Masking": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "text_a": ["STRING", {"default": "", "multiline": false}], "text_b": ["STRING", {"default": "", "multiline": false}]}, "optional": {"image_c": ["IMAGE"], "image_d": ["IMAGE"], "image_e": ["IMAGE"], "image_f": ["IMAGE"], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}], "text_e": ["STRING", {"default": "", "multiline": false}], "text_f": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["image_a", "image_b", "text_a", "text_b"], "optional": ["image_c", "image_d", "image_e", "image_f", "text_c", "text_d", "text_e", "text_f"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["IMAGES_BATCH", "MASKS_BATCH", "MASK_IMAGES_BATCH"], "name": "CLIPSeg Batch Masking", "display_name": "CLIPSeg Batch Masking", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Convert Masks to Images": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Convert Masks to Images", "display_name": "Convert Masks to Images", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Control Net Model Input Switch": {"input": {"required": {"control_net_a": ["CONTROL_NET"], "control_net_b": ["CONTROL_NET"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["control_net_a", "control_net_b", "boolean"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "Control Net Model Input Switch", "display_name": "Control Net Model Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Debug Number to Console": {"input": {"required": {"number": ["NUMBER"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["number", "label"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Debug Number to Console", "display_name": "Debug Number to Console", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": true}, "Dictionary to Console": {"input": {"required": {"dictionary": ["DICT"], "label": ["STRING", {"default": "Dictionary Output", "multiline": false}]}}, "input_order": {"required": ["dictionary", "label"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Dictionary to Console", "display_name": "Dictionary to Console", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": true}, "Diffusers Model Loader": {"input": {"required": {"model_path": [[]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Model Loader", "display_name": "Diffusers Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Diffusers Hub Model Down-Loader": {"input": {"required": {"repo_id": ["STRING", {"multiline": false}], "revision": ["STRING", {"default": "None", "multiline": false}]}}, "input_order": {"required": ["repo_id", "revision"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Hub Model Down-Loader", "display_name": "Diffusers Hub Model Down-Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Export API": {"input": {"required": {"save_prompt_api": [["true", "false"]], "output_path": ["STRING", {"default": "./ComfyUI/output/", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI_Prompt"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 2, "max": 9, "step": 1}], "parse_text_tokens": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT"}}, "input_order": {"required": ["save_prompt_api", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "parse_text_tokens"], "hidden": ["prompt"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Export API", "display_name": "Export API", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": true}, "Latent Input Switch": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["latent_a", "latent_b", "boolean"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Input Switch", "display_name": "Latent Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Load Cache": {"input": {"required": {"latent_path": ["STRING", {"default": "", "multiline": false}], "image_path": ["STRING", {"default": "", "multiline": false}], "conditioning_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["latent_path", "image_path", "conditioning_path"]}, "output": ["LATENT", "IMAGE", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["LATENT", "IMAGE", "CONDITIONING"], "name": "Load Cache", "display_name": "Load Cache", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": false}, "Logic Boolean": {"input": {"required": {"boolean": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "name": "Logic Boolean", "display_name": "Logic Boolean", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Logic Boolean Primitive": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Boolean Primitive", "display_name": "Logic Boolean Primitive", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison OR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison OR", "display_name": "Logic Comparison OR", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison AND": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison AND", "display_name": "Logic Comparison AND", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison XOR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison XOR", "display_name": "Logic Comparison XOR", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Logic NOT": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic NOT", "display_name": "Logic NOT", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Lora Loader": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Lora Loader", "display_name": "Lora Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "Hex to HSL": {"input": {"required": {"hex_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"include_alpha": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["hex_color"], "optional": ["include_alpha"]}, "output": ["INT", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hue", "saturation", "lightness", "alpha", "hsl"], "name": "Hex to HSL", "display_name": "Hex to HSL", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Utilities", "output_node": false}, "HSL to Hex": {"input": {"required": {"hsl_color": ["STRING", {"default": "hsl(0, 100%, 50%)"}]}}, "input_order": {"required": ["hsl_color"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["hex_color"], "name": "HSL to Hex", "display_name": "HSL to Hex", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Utilities", "output_node": false}, "Image SSAO (Ambient Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "ao_blur": ["FLOAT", {"min": 0.01, "max": 1024, "default": 2.5, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 25, "step": 1}], "enable_specular_masking": [["True", "False"]], "tile_size": ["INT", {"min": 1, "max": 512, "default": 1, "step": 1}]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "ao_blur", "specular_threshold", "enable_specular_masking", "tile_size"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["composited_images", "ssao_images", "specular_mask_images"], "name": "Image SSAO (Ambient Occlusion)", "display_name": "Image SSAO (Ambient Occlusion)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image SSDO (Direct Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 128, "step": 1}], "colored_occlusion": [["True", "False"]]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "specular_threshold", "colored_occlusion"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["composited_images", "ssdo_images", "ssdo_image_masks", "light_source_image_masks"], "name": "Image SSDO (Direct Occlusion)", "display_name": "Image SSDO (Direct Occlusion)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Analyze": {"input": {"required": {"image": ["IMAGE"], "mode": [["Black White Levels", "RGB Levels"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Analyze", "display_name": "Image Analyze", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Aspect Ratio": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["NUMBER"], "height": ["NUMBER"]}}, "input_order": {"required": [], "optional": ["image", "width", "height"]}, "output": ["NUMBER", "FLOAT", "NUMBER", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["aspect_number", "aspect_float", "is_landscape_bool", "aspect_ratio_common", "aspect_type"], "name": "Image Aspect Ratio", "display_name": "Image Aspect Ratio", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Image Batch": {"input": {"required": {}, "optional": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_c": ["IMAGE"], "images_d": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["images_a", "images_b", "images_c", "images_d"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Batch", "display_name": "Image Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Image Blank": {"input": {"required": {"width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["width", "height", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blank", "display_name": "Image Blank", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Image Blend by Mask": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mask": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mask", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blend by Mask", "display_name": "Image Blend by Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Image Blend": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blend", "display_name": "Image Blend", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Image Blending Mode": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mode": [["add", "color", "color_burn", "color_dodge", "darken", "difference", "exclusion", "hard_light", "hue", "lighten", "multiply", "overlay", "screen", "soft_light"]], "blend_percentage": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mode", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blending Mode", "display_name": "Image Blending Mode", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Image Bloom Filter": {"input": {"required": {"image": ["IMAGE"], "radius": ["FLOAT", {"default": 10, "min": 0.0, "max": 1024, "step": 0.1}], "intensity": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "radius", "intensity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Bloom Filter", "display_name": "Image Bloom Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Canny Filter": {"input": {"required": {"images": ["IMAGE"], "enable_threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "threshold_high": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "enable_threshold", "threshold_low", "threshold_high"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Canny Filter", "display_name": "Image Canny Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Chromatic Aberration": {"input": {"required": {"image": ["IMAGE"], "red_offset": ["INT", {"default": 2, "min": -255, "max": 255, "step": 1}], "green_offset": ["INT", {"default": -1, "min": -255, "max": 255, "step": 1}], "blue_offset": ["INT", {"default": 1, "min": -255, "max": 255, "step": 1}], "intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "fade_radius": ["INT", {"default": 12, "min": 0, "max": 1024, "step": 1}]}}, "input_order": {"required": ["image", "red_offset", "green_offset", "blue_offset", "intensity", "fade_radius"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Chromatic Aberration", "display_name": "Image Chromatic Aberration", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Color Palette": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 16, "min": 8, "max": 256, "step": 1}], "mode": [["Chart", "back_to_back"]]}}, "input_order": {"required": ["image", "colors", "mode"]}, "output": ["IMAGE", "LIST"], "output_is_list": [false, false], "output_name": ["image", "color_palettes"], "name": "Image Color Palette", "display_name": "Image Color Palette", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Crop Face": {"input": {"required": {"image": ["IMAGE"], "crop_padding_factor": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 2.0, "step": 0.01}], "cascade_xml": [["lbpcascade_animeface.xml", "haarcascade_frontalface_default.xml", "haarcascade_frontalface_alt.xml", "haarcascade_frontalface_alt2.xml", "haarcascade_frontalface_alt_tree.xml", "haarcascade_profileface.xml", "haarcascade_upperbody.xml", "haarcascade_eye.xml"]]}}, "input_order": {"required": ["image", "crop_padding_factor", "cascade_xml"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Face", "display_name": "Image Crop Face", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Location": {"input": {"required": {"image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["image", "top", "left", "right", "bottom"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Location", "display_name": "Image Crop Location", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Square Location": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "size": ["INT", {"default": 256, "max": 4096, "min": 5, "step": 1}]}}, "input_order": {"required": ["image", "x", "y", "size"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Square Location", "display_name": "Image Crop Square Location", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Displacement Warp": {"input": {"required": {"images": ["IMAGE"], "displacement_maps": ["IMAGE"], "amplitude": ["FLOAT", {"default": 25.0, "min": -4096, "max": 4096, "step": 0.1}]}}, "input_order": {"required": ["images", "displacement_maps", "amplitude"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Displacement Warp", "display_name": "Image Displacement Warp", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Lucy Sharpen": {"input": {"required": {"images": ["IMAGE"], "iterations": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "kernel_size": ["INT", {"default": 3, "min": 1, "max": 16, "step": 1}]}}, "input_order": {"required": ["images", "iterations", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Lucy Sharpen", "display_name": "Image Lucy Sharpen", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Paste Face": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK_IMAGE"], "name": "Image Paste Face", "display_name": "Image Paste Face", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Paste Crop", "display_name": "Image Paste Crop", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop by Location": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "top", "left", "right", "bottom", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Paste Crop by Location", "display_name": "Image Paste Crop by Location", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Pixelate": {"input": {"required": {"images": ["IMAGE"], "pixelation_size": ["FLOAT", {"default": 164, "min": 16, "max": 480, "step": 1}], "num_colors": ["FLOAT", {"default": 16, "min": 2, "max": 256, "step": 1}], "init_mode": [["k-means++", "random", "none"]], "max_iterations": ["FLOAT", {"default": 100, "min": 1, "max": 256, "step": 1}], "dither": [["False", "True"]], "dither_mode": [["FloydSteinberg", "Ordered"]]}, "optional": {"color_palettes": ["LIST", {"forceInput": true}], "color_palette_mode": [["Brightness", "BrightnessAndTonal", "Linear", "Tonal"]], "reverse_palette": [["False", "True"]]}}, "input_order": {"required": ["images", "pixelation_size", "num_colors", "init_mode", "max_iterations", "dither", "dither_mode"], "optional": ["color_palettes", "color_palette_mode", "reverse_palette"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Pixelate", "display_name": "Image Pixelate", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Power Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "frequency": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "attenuation": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "noise_type": [["grey", "white", "pink", "blue", "green", "mix"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "frequency", "attenuation", "noise_type", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Power Noise", "display_name": "Image Power Noise", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Dragan Photography Filter": {"input": {"required": {"image": ["IMAGE"], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "brightness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 6.0, "step": 0.01}], "highpass_radius": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 255.0, "step": 0.01}], "highpass_samples": ["INT", {"default": 1, "min": 0, "max": 6.0, "step": 1}], "highpass_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 3.0, "step": 0.01}], "colorize": [["true", "false"]]}}, "input_order": {"required": ["image", "saturation", "contrast", "brightness", "sharpness", "highpass_radius", "highpass_samples", "highpass_strength", "colorize"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Dragan Photography Filter", "display_name": "Image Dragan Photography Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Edge Detection Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["normal", "laplacian"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Edge Detection Filter", "display_name": "Image Edge Detection Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Film Grain": {"input": {"required": {"image": ["IMAGE"], "density": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "highlights": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 255.0, "step": 0.01}], "supersample_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}]}}, "input_order": {"required": ["image", "density", "intensity", "highlights", "supersample_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Film Grain", "display_name": "Image Film Grain", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Filter Adjustments": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 2.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": -5.0, "max": 5.0, "step": 0.01}], "blur": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}], "gaussian_blur": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1024.0, "step": 0.1}], "edge_enhance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "detail_enhance": [["false", "true"]]}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation", "sharpness", "blur", "gaussian_blur", "edge_enhance", "detail_enhance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Filter Adjustments", "display_name": "Image Filter Adjustments", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Flip": {"input": {"required": {"images": ["IMAGE"], "mode": [["horizontal", "vertical"]]}}, "input_order": {"required": ["images", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Flip", "display_name": "Image Flip", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Gradient Map": {"input": {"required": {"image": ["IMAGE"], "gradient_image": ["IMAGE"], "flip_left_right": [["false", "true"]]}}, "input_order": {"required": ["image", "gradient_image", "flip_left_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Gradient Map", "display_name": "Image Gradient Map", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Generate Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "direction": [["horizontal", "vertical"]], "tolerance": ["INT", {"default": 0, "max": 255, "min": 0, "step": 1}], "gradient_stops": ["STRING", {"default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255", "multiline": true}]}}, "input_order": {"required": ["width", "height", "direction", "tolerance", "gradient_stops"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Generate Gradient", "display_name": "Image Generate Gradient", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate", "output_node": false}, "Image High Pass Filter": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 10, "min": 1, "max": 500, "step": 1}], "strength": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 255.0, "step": 0.1}], "color_output": [["true", "false"]], "neutral_background": [["true", "false"]]}}, "input_order": {"required": ["images", "radius", "strength", "color_output", "neutral_background"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image High Pass Filter", "display_name": "Image High Pass Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image History Loader": {"input": {"required": {"image": [["No History"]]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Image History Loader", "display_name": "Image History Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/History", "output_node": false}, "Image Input Switch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["image_a", "image_b", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Input Switch", "display_name": "Image Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Image Levels Adjustment": {"input": {"required": {"image": ["IMAGE"], "black_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 255.0, "step": 0.1}], "mid_level": ["FLOAT", {"default": 127.5, "min": 0.0, "max": 255.0, "step": 0.1}], "white_level": ["FLOAT", {"default": 255, "min": 0.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "black_level", "mid_level", "white_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Levels Adjustment", "display_name": "Image Levels Adjustment", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Load": {"input": {"required": {"image_path": ["STRING", {"default": "./ComfyUI/input/example.png", "multiline": false}], "RGBA": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["image_path", "RGBA"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "filename_text"], "name": "Image Load", "display_name": "Image Load", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": false}, "Image Median Filter": {"input": {"required": {"image": ["IMAGE"], "diameter": ["INT", {"default": 2.0, "min": 0.1, "max": 255, "step": 1}], "sigma_color": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}], "sigma_space": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "diameter", "sigma_color", "sigma_space"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Median Filter", "display_name": "Image Median Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Mix RGB Channels": {"input": {"required": {"red_channel": ["IMAGE"], "green_channel": ["IMAGE"], "blue_channel": ["IMAGE"]}}, "input_order": {"required": ["red_channel", "green_channel", "blue_channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Mix RGB Channels", "display_name": "Image Mix RGB Channels", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Monitor Effects Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["Digital Distortion", "Signal Distortion", "TV Distortion"]], "amplitude": ["INT", {"default": 5, "min": 1, "max": 255, "step": 1}], "offset": ["INT", {"default": 10, "min": 1, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "mode", "amplitude", "offset"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Monitor Effects Filter", "display_name": "Image Monitor Effects Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Nova Filter": {"input": {"required": {"image": ["IMAGE"], "amplitude": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}], "frequency": ["FLOAT", {"default": 3.14, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["image", "amplitude", "frequency"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Nova Filter", "display_name": "Image Nova Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Padding": {"input": {"required": {"image": ["IMAGE"], "feathering": ["INT", {"default": 120, "min": 0, "max": 2048, "step": 1}], "feather_second_pass": [["true", "false"]], "left_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "right_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "top_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "bottom_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "feathering", "feather_second_pass", "left_padding", "right_padding", "top_padding", "bottom_padding"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Padding", "display_name": "Image Padding", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Perlin Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Noise", "display_name": "Image Perlin Noise", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Rembg (Remove Background)": {"input": {"required": {"images": ["IMAGE"], "transparency": ["BOOLEAN", {"default": true}], "model": [["u2net", "u2netp", "u2net_human_seg", "silueta", "isnet-general-use", "isnet-anime"]], "post_processing": ["BOOLEAN", {"default": false}], "only_mask": ["BOOLEAN", {"default": false}], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "background_color": [["none", "black", "white", "magenta", "chroma green", "chroma blue"]]}}, "input_order": {"required": ["images", "transparency", "model", "post_processing", "only_mask", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "background_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rembg (Remove Background)", "display_name": "Image Rembg (Remove Background)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/AI", "output_node": false}, "Image Perlin Power Fractal": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "lacunarity": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "exponent": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "lacunarity", "exponent", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Power Fractal", "display_name": "Image Perlin Power Fractal", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Remove Background (Alpha)": {"input": {"required": {"images": ["IMAGE"], "mode": [["background", "foreground"]], "threshold": ["INT", {"default": 127, "min": 0, "max": 255, "step": 1}], "threshold_tolerance": ["INT", {"default": 2, "min": 1, "max": 24, "step": 1}]}}, "input_order": {"required": ["images", "mode", "threshold", "threshold_tolerance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Remove Background (Alpha)", "display_name": "Image Remove Background (Alpha)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Remove Color": {"input": {"required": {"image": ["IMAGE"], "target_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "clip_threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "target_red", "target_green", "target_blue", "replace_red", "replace_green", "replace_blue", "clip_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Remove Color", "display_name": "Image Remove Color", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Resize": {"input": {"required": {"image": ["IMAGE"], "mode": [["rescale", "resize"]], "supersample": [["true", "false"]], "resampling": [["lanczos", "nearest", "bilinear", "bicubic"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resize_height": ["INT", {"default": 1536, "min": 1, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "mode", "supersample", "resampling", "rescale_factor", "resize_width", "resize_height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Resize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate": {"input": {"required": {"images": ["IMAGE"], "mode": [["transpose", "internal"]], "rotation": ["INT", {"default": 0, "min": 0, "max": 360, "step": 90}], "sampler": [["nearest", "bilinear", "bicubic"]]}}, "input_order": {"required": ["images", "mode", "rotation", "sampler"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rotate", "display_name": "Image Rotate", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate Hue": {"input": {"required": {"image": ["IMAGE"], "hue_shift": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["image", "hue_shift"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Rotate Hue", "display_name": "Image Rotate Hue", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Send HTTP": {"input": {"required": {"images": ["IMAGE"], "url": ["STRING", {"default": "example.com"}], "method_type": [["post", "put", "patch"], {"default": "post"}], "request_field_name": ["STRING", {"default": "image"}]}, "optional": {"additional_request_headers": ["DICT"]}}, "input_order": {"required": ["images", "url", "method_type", "request_field_name"], "optional": ["additional_request_headers"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["status_code", "result_text"], "name": "Image Send HTTP", "display_name": "Image Send HTTP", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": true}, "Image Save": {"input": {"required": {"images": ["IMAGE"], "output_path": ["STRING", {"default": "[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 1, "max": 9, "step": 1}], "filename_number_start": [["false", "true"]], "extension": [["png", "jpg", "jpeg", "gif", "tiff", "webp", "bmp"]], "dpi": ["INT", {"default": 300, "min": 1, "max": 2400, "step": 1}], "quality": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}], "optimize_image": [["true", "false"]], "lossless_webp": [["false", "true"]], "overwrite_mode": [["false", "prefix_as_filename"]], "show_history": [["false", "true"]], "show_history_by_prefix": [["true", "false"]], "embed_workflow": [["true", "false"]], "show_previews": [["true", "false"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "filename_number_start", "extension", "dpi", "quality", "optimize_image", "lossless_webp", "overwrite_mode", "show_history", "show_history_by_prefix", "embed_workflow", "show_previews"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["images", "files"], "name": "Image Save", "display_name": "Image Save", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": true}, "Image Seamless Texture": {"input": {"required": {"images": ["IMAGE"], "blending": ["FLOAT", {"default": 0.4, "max": 1.0, "min": 0.0, "step": 0.01}], "tiled": [["true", "false"]], "tiles": ["INT", {"default": 2, "max": 6, "min": 2, "step": 2}]}}, "input_order": {"required": ["images", "blending", "tiled", "tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Seamless Texture", "display_name": "Image Seamless Texture", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Channel": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Channel", "display_name": "Image Select Channel", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Color": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "green": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "blue": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "variance": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "variance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Color", "display_name": "Image Select Color", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Shadows and Highlights": {"input": {"required": {"image": ["IMAGE"], "shadow_threshold": ["FLOAT", {"default": 75, "min": 0.0, "max": 255.0, "step": 0.1}], "shadow_factor": ["FLOAT", {"default": 1.5, "min": -12.0, "max": 12.0, "step": 0.1}], "shadow_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "highlight_threshold": ["FLOAT", {"default": 175, "min": 0.0, "max": 255.0, "step": 0.1}], "highlight_factor": ["FLOAT", {"default": 0.5, "min": -12.0, "max": 12.0, "step": 0.1}], "highlight_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "simplify_isolation": ["FLOAT", {"default": 0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "shadow_threshold", "shadow_factor", "shadow_smoothing", "highlight_threshold", "highlight_factor", "highlight_smoothing", "simplify_isolation"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["image", "shadow_map", "highlight_map"], "name": "Image Shadows and Highlights", "display_name": "Image Shadows and Highlights", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Size to Number": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width_num", "height_num", "width_float", "height_float", "width_int", "height_int"], "name": "Image Size to Number", "display_name": "Image Size to Number", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Image Stitch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "stitch": [["top", "left", "bottom", "right"]], "feathering": ["INT", {"default": 50, "min": 0, "max": 2048, "step": 1}]}}, "input_order": {"required": ["image_a", "image_b", "stitch", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Stitch", "display_name": "Image Stitch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Style Filter": {"input": {"required": {"image": ["IMAGE"], "style": [["1977", "aden", "brannan", "brooklyn", "clarendon", "earlybird", "fairy tale", "gingham", "hudson", "inkwell", "kelvin", "lark", "lofi", "maven", "mayfair", "moon", "nashville", "perpetua", "reyes", "rise", "slumber", "stinson", "toaster", "valencia", "walden", "willow", "xpro2"]]}}, "input_order": {"required": ["image", "style"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Style Filter", "display_name": "Image Style Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Threshold": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Threshold", "display_name": "Image Threshold", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Tiled": {"input": {"required": {"image": ["IMAGE"], "num_tiles": ["INT", {"default": 4, "max": 64, "min": 2, "step": 1}]}}, "input_order": {"required": ["image", "num_tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Image Tiled", "display_name": "Image Tiled", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Transpose": {"input": {"required": {"image": ["IMAGE"], "image_overlay": ["IMAGE"], "width": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "height": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "X": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "Y": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "rotation": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "feathering": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["image", "image_overlay", "width", "height", "X", "Y", "rotation", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Transpose", "display_name": "Image Transpose", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image fDOF Filter": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "mode": [["mock", "gaussian", "box"]], "radius": ["INT", {"default": 8, "min": 1, "max": 128, "step": 1}], "samples": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "depth", "mode", "radius", "samples"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image fDOF Filter", "display_name": "Image fDOF Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image to Latent Mask": {"input": {"required": {"images": ["IMAGE"], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["images", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Image to Latent Mask", "display_name": "Image to Latent Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Image to Noise": {"input": {"required": {"images": ["IMAGE"], "num_colors": ["INT", {"default": 16, "max": 256, "min": 2, "step": 2}], "black_mix": ["INT", {"default": 0, "max": 20, "min": 0, "step": 1}], "gaussian_mix": ["FLOAT", {"default": 0.0, "max": 1024, "min": 0, "step": 0.1}], "brightness": ["FLOAT", {"default": 1.0, "max": 2.0, "min": 0.0, "step": 0.01}], "output_mode": [["batch", "list"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["images", "num_colors", "black_mix", "gaussian_mix", "brightness", "output_mode", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image to Noise", "display_name": "Image to Noise", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image to Seed": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [true], "output_name": ["INT"], "name": "Image to Seed", "display_name": "Image to Seed", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Images to RGB": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to RGB", "display_name": "Images to RGB", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Images to Linear": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to Linear", "display_name": "Images to Linear", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image", "output_node": false}, "Integer place counter": {"input": {"required": {"int_input": ["INT", {"default": 0, "min": 0, "max": 10000000, "step": 1}]}}, "input_order": {"required": ["int_input"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT_PLACES"], "name": "Integer place counter", "display_name": "Integer place counter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Integer", "output_node": false}, "Image Voronoi Noise Filter": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "density": ["INT", {"default": 50, "max": 256, "min": 10, "step": 2}], "modulator": ["INT", {"default": 0, "max": 8, "min": 0, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"flat": [["False", "True"]], "RGB_output": [["True", "False"]]}}, "input_order": {"required": ["width", "height", "density", "modulator", "seed"], "optional": ["flat", "RGB_output"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Voronoi Noise Filter", "display_name": "Image Voronoi Noise Filter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "KSampler (WAS)": {"input": {"required": {"model": ["MODEL"], "seed": ["SEED"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler (WAS)", "display_name": "KSampler (WAS)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Sampling", "output_node": false}, "KSampler Cycle": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "gradient_estimation_cfg_pp", "er_sde", "seeds_2", "seeds_3", "sa_solver", "sa_solver_pece", "ddim", "uni_pc", "uni_pc_bh2"]], "scheduler": [["simple", "sgm_uniform", "karras", "exponential", "ddim_uniform", "beta", "normal", "linear_quadratic", "kl_optimal"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "tiled_vae": [["disable", "enable"]], "latent_upscale": [["disable", "nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "upscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.1}], "upscale_cycles": ["INT", {"default": 2, "min": 2, "max": 12, "step": 1}], "starting_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cycle_denoise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "scale_denoise": [["enable", "disable"]], "scale_sampling": [["bilinear", "bicubic", "nearest", "lanczos"]], "vae": ["VAE"]}, "optional": {"secondary_model": ["MODEL"], "secondary_start_cycle": ["INT", {"default": 2, "min": 2, "max": 16, "step": 1}], "upscale_model": ["UPSCALE_MODEL"], "processor_model": ["UPSCALE_MODEL"], "pos_additive": ["CONDITIONING"], "neg_additive": ["CONDITIONING"], "pos_add_mode": [["increment", "decrement"]], "pos_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "pos_add_strength_scaling": [["enable", "disable"]], "pos_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "neg_add_mode": [["increment", "decrement"]], "neg_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "neg_add_strength_scaling": [["enable", "disable"]], "neg_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "sharpen_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "sharpen_radius": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "steps_scaling": [["enable", "disable"]], "steps_control": [["decrement", "increment"]], "steps_scaling_value": ["INT", {"default": 10, "min": 1, "max": 20, "step": 1}], "steps_cutoff": ["INT", {"default": 20, "min": 4, "max": 1000, "step": 1}], "denoise_cutoff": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "tiled_vae", "latent_upscale", "upscale_factor", "upscale_cycles", "starting_denoise", "cycle_denoise", "scale_denoise", "scale_sampling", "vae"], "optional": ["secondary_model", "secondary_start_cycle", "upscale_model", "processor_model", "pos_additive", "neg_additive", "pos_add_mode", "pos_add_strength", "pos_add_strength_scaling", "pos_add_strength_cutoff", "neg_add_mode", "neg_add_strength", "neg_add_strength_scaling", "neg_add_strength_cutoff", "sharpen_strength", "sharpen_radius", "steps_scaling", "steps_control", "steps_scaling_value", "steps_cutoff", "denoise_cutoff"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent(s)"], "name": "KSampler Cycle", "display_name": "KSampler Cycle", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Sampling", "output_node": false}, "Latent Batch": {"input": {"required": {}, "optional": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "latent_c": ["LATENT"], "latent_d": ["LATENT"]}}, "input_order": {"required": [], "optional": ["latent_a", "latent_b", "latent_c", "latent_d"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Batch", "display_name": "Latent Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Latent", "output_node": false}, "Latent Noise Injection": {"input": {"required": {"samples": ["LATENT"], "noise_std": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "noise_std"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Noise Injection", "display_name": "Latent Noise Injection", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Latent/Generate", "output_node": false}, "Latent Size to Number": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tensor_w_num", "tensor_h_num", "tensor_w_float", "tensor_h_float", "tensor_w_int", "tensor_h_int"], "name": "Latent Size to Number", "display_name": "Latent Size to Number", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Latent Upscale by Factor (WAS)": {"input": {"required": {"samples": ["LATENT"], "mode": [["area", "bicubic", "bilinear", "nearest"]], "factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.01}], "align": [["true", "false"]]}}, "input_order": {"required": ["samples", "mode", "factor", "align"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Upscale by Factor (WAS)", "display_name": "Latent Upscale by Factor (WAS)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Latent/Transform", "output_node": false}, "Load Image Batch": {"input": {"required": {"mode": [["single_image", "incremental_image", "random"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "index": ["INT", {"default": 0, "min": 0, "max": 150000, "step": 1}], "label": ["STRING", {"default": "Batch 001", "multiline": false}], "path": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "*", "multiline": false}], "allow_RGBA_output": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["mode", "seed", "index", "label", "path", "pattern", "allow_RGBA_output"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Load Image Batch", "display_name": "Load Image Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": false}, "Load Text File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}]}}, "input_order": {"required": ["file_path", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Load Text File", "display_name": "Load Text File", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": false}, "Load Lora": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "AntiBlur.safetensors", "Candid_Creepshot-000007.safetensors", "Detailed_Hands-000001.safetensors", "Digicam.safetensors", "FLUX_Polyhedron_all_Kohya_ss-000001.safetensors", "Futanari_erect_penis_bulge_for_FLUX-000017.safetensors", "GrainScape.safetensors", "Large_erect_penis_bulge_futanari_for_FLUX-000039.safetensors", "Nokia_v1.2.safetensors", "SameFace_Fix.safetensors", "Samsung_UltraReal.safetensors", "TGirlBulgeV3.safetensors", "Touch_of_Realism_SDXL_V2.safetensors", "VHS style v1.safetensors", "aidmaRealisticSkin-FLUX-v0.1.safetensors", "amateurphoto-v6-forcu.safetensors", "boreal-v2.safetensors", "digicam2.safetensors", "lora.TA_trained.safetensors", "olympusd450_lora.safetensors", "plus1_Bulge_FLUX_v5.safetensors", "quicktake150-flux.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Load Lora", "display_name": "Load Lora", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "Lora Input Switch": {"input": {"required": {"model_a": ["MODEL"], "clip_a": ["CLIP"], "model_b": ["MODEL"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "clip_a", "model_b", "clip_b", "boolean"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Input Switch", "display_name": "Lora Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Masks Add": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Add", "display_name": "Masks Add", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Subtract": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Subtract", "display_name": "Masks Subtract", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Arbitrary Region": {"input": {"required": {"masks": ["MASK"], "size": ["INT", {"default": 256, "min": 1, "max": 4096, "step": 1}], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "size", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Arbitrary Region", "display_name": "Mask Arbitrary Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch to Mask": {"input": {"required": {"masks": ["MASK"], "batch_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "batch_number"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Mask Batch to Mask", "display_name": "Mask Batch to Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch": {"input": {"optional": {"masks_a": ["MASK"], "masks_b": ["MASK"], "masks_c": ["MASK"], "masks_d": ["MASK"]}}, "input_order": {"optional": ["masks_a", "masks_b", "masks_c", "masks_d"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "Mask Batch", "display_name": "Mask Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Ceiling Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Ceiling Region", "display_name": "Mask Ceiling Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Dominant Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Dominant Region", "display_name": "Mask Crop Dominant Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Minority Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Minority Region", "display_name": "Mask Crop Minority Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Region": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}], "region_type": [["dominant", "minority"]]}}, "input_order": {"required": ["mask", "padding", "region_type"]}, "output": ["MASK", "CROP_DATA", "INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["cropped_mask", "crop_data", "top_int", "left_int", "right_int", "bottom_int", "width_int", "height_int"], "name": "Mask Crop Region", "display_name": "Mask Crop Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Paste Region": {"input": {"required": {"mask": ["MASK"], "crop_mask": ["MASK"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["mask", "crop_mask", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["RESULT_MASK", "CROP_MASK"], "name": "Mask Paste Region", "display_name": "Mask Paste Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dilate Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dilate Region", "display_name": "Mask Dilate Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dominant Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dominant Region", "display_name": "Mask Dominant Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Erode Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Erode Region", "display_name": "Mask Erode Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Fill Holes": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Fill Holes", "display_name": "Mask Fill Holes", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Floor Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Floor Region", "display_name": "Mask Floor Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Gaussian Region": {"input": {"required": {"masks": ["MASK"], "radius": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 1024, "step": 0.1}]}}, "input_order": {"required": ["masks", "radius"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Gaussian Region", "display_name": "Mask Gaussian Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Invert": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Invert", "display_name": "Mask Invert", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Minority Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Minority Region", "display_name": "Mask Minority Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Rect Area": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "width": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "height": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "blur_radius": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["x", "y", "width", "height", "blur_radius"], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Rect Area", "display_name": "Mask Rect Area", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Rect Area (Advanced)": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}], "width": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 64}], "height": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 64}], "image_width": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "image_height": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "blur_radius": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["x", "y", "width", "height", "image_width", "image_height", "blur_radius"], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Rect Area (Advanced)", "display_name": "Mask Rect Area (Advanced)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Smooth Region": {"input": {"required": {"masks": ["MASK"], "sigma": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 128.0, "step": 0.1}]}}, "input_order": {"required": ["masks", "sigma"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Smooth Region", "display_name": "Mask Smooth Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Threshold Region": {"input": {"required": {"masks": ["MASK"], "black_threshold": ["INT", {"default": 75, "min": 0, "max": 255, "step": 1}], "white_threshold": ["INT", {"default": 175, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "black_threshold", "white_threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Threshold Region", "display_name": "Mask Threshold Region", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Regions": {"input": {"required": {"mask_a": ["MASK"], "mask_b": ["MASK"]}, "optional": {"mask_c": ["MASK"], "mask_d": ["MASK"], "mask_e": ["MASK"], "mask_f": ["MASK"]}}, "input_order": {"required": ["mask_a", "mask_b"], "optional": ["mask_c", "mask_d", "mask_e", "mask_f"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Regions", "display_name": "Masks Combine Regions", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Batch": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Batch", "display_name": "Masks Combine Batch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "MiDaS Model Loader": {"input": {"required": {"midas_model": [["DPT_Large", "DPT_Hybrid"]]}}, "input_order": {"required": ["midas_model"]}, "output": ["MIDAS_MODEL"], "output_is_list": [false], "output_name": ["midas_model"], "name": "MiDaS Model Loader", "display_name": "MiDaS Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "MiDaS Depth Approximation": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_type": [["DPT_Large", "DPT_Hybrid"]], "invert_depth": [["false", "true"]]}, "optional": {"midas_model": ["MIDAS_MODEL"]}}, "input_order": {"required": ["image", "use_cpu", "midas_type", "invert_depth"], "optional": ["midas_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "MiDaS Depth Approximation", "display_name": "MiDaS Depth Approximation", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/AI", "output_node": false}, "MiDaS Mask Image": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_model": [["DPT_Large", "DPT_Hybrid", "DPT_Small"]], "remove": [["background", "foregroud"]], "threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 10, "min": 0, "max": 255, "step": 1}], "threshold_mid": ["FLOAT", {"default": 200, "min": 0, "max": 255, "step": 1}], "threshold_high": ["FLOAT", {"default": 210, "min": 0, "max": 255, "step": 1}], "smoothing": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 16.0, "step": 0.01}], "background_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "use_cpu", "midas_model", "remove", "threshold", "threshold_low", "threshold_mid", "threshold_high", "smoothing", "background_red", "background_green", "background_blue"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["RESULT", "DEPTH"], "name": "MiDaS Mask Image", "display_name": "MiDaS Mask Image", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/AI", "output_node": false}, "Model Input Switch": {"input": {"required": {"model_a": ["MODEL"], "model_b": ["MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "model_b", "boolean"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "Model Input Switch", "display_name": "Model Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Number Counter": {"input": {"required": {"number_type": [["integer", "float"]], "mode": [["increment", "decrement", "increment_to_stop", "decrement_to_stop", "reset_after_stop"]], "start": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "stop": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "step": ["FLOAT", {"default": 1, "min": 0, "max": 99999, "step": 0.01}]}, "optional": {"reset_bool": ["NUMBER"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["number_type", "mode", "start", "stop", "step"], "optional": ["reset_bool"], "hidden": ["unique_id"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["number", "float", "int"], "name": "Number Counter", "display_name": "Number Counter", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "Number Operation": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "operation": [["addition", "subtraction", "division", "floor division", "multiplication", "exponentiation", "modulus", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal"]]}}, "input_order": {"required": ["number_a", "number_b", "operation"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Operation", "display_name": "Number Operation", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Float": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Number to Float", "display_name": "Number to Float", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number Input Switch": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["number_a", "number_b", "boolean"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Switch", "display_name": "Number Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Number Input Condition": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "return_boolean": [["false", "true"]], "comparison": [["and", "or", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal", "divisible by", "if A odd", "if A even", "if A prime", "factor of"]]}}, "input_order": {"required": ["number_a", "number_b", "return_boolean", "comparison"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Condition", "display_name": "Number Input Condition", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Number Multiple Of": {"input": {"required": {"number": ["NUMBER"], "multiple": ["INT", {"default": 8, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["number", "multiple"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Multiple Of", "display_name": "Number Multiple Of", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Functions", "output_node": false}, "Number PI": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NUMBER", "FLOAT"], "output_is_list": [false, false], "output_name": ["NUMBER", "FLOAT"], "name": "Number PI", "display_name": "Number PI", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "Number to Int": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Number to Int", "display_name": "Number to Int", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Seed": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["SEED"], "output_is_list": [false], "output_name": ["SEED"], "name": "Number to Seed", "display_name": "Number to Seed", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to String": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to String", "display_name": "Number to String", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Text": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to Text", "display_name": "Number to Text", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number/Operations", "output_node": false}, "Boolean To Text": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Boolean To Text", "display_name": "Boolean To Text", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Prompt Styles Selector": {"input": {"required": {"style": [["None"]]}}, "input_order": {"required": ["style"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Styles Selector", "display_name": "Prompt Styles Selector", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Prompt Multiple Styles Selector": {"input": {"required": {"style1": [["None"]], "style2": [["None"]], "style3": [["None"]], "style4": [["None"]]}}, "input_order": {"required": ["style1", "style2", "style3", "style4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Multiple Styles Selector", "display_name": "Prompt Multiple Styles Selector", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Random Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["number_type", "minimum", "maximum", "seed"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Random Number", "display_name": "Random Number", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "Save Text File": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "path": ["STRING", {"default": "./ComfyUI/output/[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 0, "max": 9, "step": 1}]}, "optional": {"file_extension": ["STRING", {"default": ".txt"}], "encoding": ["STRING", {"default": "utf-8"}], "filename_suffix": ["STRING", {"default": ""}]}}, "input_order": {"required": ["text", "path", "filename_prefix", "filename_delimiter", "filename_number_padding"], "optional": ["file_extension", "encoding", "filename_suffix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Text File", "display_name": "Save Text File", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/IO", "output_node": true}, "Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["SEED", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["seed", "number", "float", "int"], "name": "Seed", "display_name": "Seed", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "Tensor Batch to Image": {"input": {"required": {"images_batch": ["IMAGE"], "batch_image_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["images_batch", "batch_image_number"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tensor Batch to Image", "display_name": "Tensor Batch to Image", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Latent/Transform", "output_node": false}, "BLIP Analyze Image": {"input": {"required": {"images": ["IMAGE"], "mode": [["caption", "interrogate"]], "question": ["STRING", {"default": "What does the background consist of?", "multiline": true, "dynamicPrompts": false}], "blip_model": ["BLIP_MODEL"]}, "optional": {"min_length": ["INT", {"min": 1, "max": 1024, "default": 24}], "max_length": ["INT", {"min": 2, "max": 1024, "default": 64}], "num_beams": ["INT", {"min": 1, "max": 12, "default": 5}], "no_repeat_ngram_size": ["INT", {"min": 1, "max": 12, "default": 3}], "early_stopping": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "mode", "question", "blip_model"], "optional": ["min_length", "max_length", "num_beams", "no_repeat_ngram_size", "early_stopping"]}, "output": ["STRING", "STRING"], "output_is_list": [false, true], "output_name": ["FULL_CAPTIONS", "CAPTIONS"], "name": "BLIP Analyze Image", "display_name": "BLIP Analyze Image", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/AI", "output_node": false}, "SAM Model Loader": {"input": {"required": {"model_size": [["ViT-H", "ViT-L", "ViT-B"]]}}, "input_order": {"required": ["model_size"]}, "output": ["SAM_MODEL"], "output_is_list": [false], "output_name": ["SAM_MODEL"], "name": "SAM Model Loader", "display_name": "SAM Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters": {"input": {"required": {"points": ["STRING", {"default": "[128, 128]; [0, 0]", "multiline": false}], "labels": ["STRING", {"default": "[1, 0]", "multiline": false}]}}, "input_order": {"required": ["points", "labels"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters", "display_name": "SAM Parameters", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters Combine": {"input": {"required": {"sam_parameters_a": ["SAM_PARAMETERS"], "sam_parameters_b": ["SAM_PARAMETERS"]}}, "input_order": {"required": ["sam_parameters_a", "sam_parameters_b"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters Combine", "display_name": "SAM Parameters Combine", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Image Mask": {"input": {"required": {"sam_model": ["SAM_MODEL"], "sam_parameters": ["SAM_PARAMETERS"], "image": ["IMAGE"]}}, "input_order": {"required": ["sam_model", "sam_parameters", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SAM Image Mask", "display_name": "SAM Image Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Masking", "output_node": false}, "Samples Passthrough (Stat System)": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["samples"], "name": "Samples Passthrough (Stat System)", "display_name": "Samples Passthrough (Stat System)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": false}, "String to Text": {"input": {"required": {"string": ["STRING", {}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String to Text", "display_name": "String to Text", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Image Bounds": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds", "display_name": "Image Bounds", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Inset Image Bounds": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "inset_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image_bounds", "inset_left", "inset_right", "inset_top", "inset_bottom"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Inset Image Bounds", "display_name": "Inset Image Bounds", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend": {"input": {"required": {"target": ["IMAGE"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend", "display_name": "Bounded Image Blend", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend with Mask": {"input": {"required": {"target": ["IMAGE"], "target_mask": ["MASK"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_mask", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend with Mask", "display_name": "Bounded Image Blend with Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop": {"input": {"required": {"image": ["IMAGE"], "image_bounds": ["IMAGE_BOUNDS"]}}, "input_order": {"required": ["image", "image_bounds"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Crop", "display_name": "Bounded Image Crop", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop with Mask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "padding_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}, "optional": {"return_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "padding_left", "padding_right", "padding_top", "padding_bottom"], "optional": ["return_list"]}, "output": ["IMAGE", "IMAGE_BOUNDS"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE_BOUNDS"], "name": "Bounded Image Crop with Mask", "display_name": "Bounded Image Crop with Mask", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Image/Bound", "output_node": false}, "Image Bounds to Console": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["image_bounds", "label"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds to Console", "display_name": "Image Bounds to Console", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": true}, "Text Dictionary Update": {"input": {"required": {"dictionary_a": ["DICT"], "dictionary_b": ["DICT"]}, "optional": {"dictionary_c": ["DICT"], "dictionary_d": ["DICT"]}}, "input_order": {"required": ["dictionary_a", "dictionary_b"], "optional": ["dictionary_c", "dictionary_d"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Update", "display_name": "Text Dictionary Update", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Get": {"input": {"required": {"dictionary": ["DICT"], "key": ["STRING", {"default": "", "multiline": false}]}, "optional": {"default_value": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["dictionary", "key"], "optional": ["default_value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary Get", "display_name": "Text Dictionary Get", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Convert": {"input": {"required": {"dictionary_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["dictionary_text"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Convert", "display_name": "Text Dictionary Convert", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary New": {"input": {"required": {"key_1": ["STRING", {"default": "", "multiline": false}], "value_1": ["STRING", {"default": "", "multiline": false}]}, "optional": {"key_2": ["STRING", {"default": "", "multiline": false}], "value_2": ["STRING", {"default": "", "multiline": false}], "key_3": ["STRING", {"default": "", "multiline": false}], "value_3": ["STRING", {"default": "", "multiline": false}], "key_4": ["STRING", {"default": "", "multiline": false}], "value_4": ["STRING", {"default": "", "multiline": false}], "key_5": ["STRING", {"default": "", "multiline": false}], "value_5": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["key_1", "value_1"], "optional": ["key_2", "value_2", "key_3", "value_3", "key_4", "value_4", "key_5", "value_5"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary New", "display_name": "Text Dictionary New", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Keys": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text Dictionary Keys", "display_name": "Text Dictionary Keys", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary To Text": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary To Text", "display_name": "Text Dictionary To Text", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Add Tokens": {"input": {"required": {"tokens": ["STRING", {"default": "[hello]: world", "multiline": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["tokens", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Tokens", "display_name": "Text Add Tokens", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Add Token by Input": {"input": {"required": {"token_name": ["STRING", {"forceInput": true}], "token_value": ["STRING", {"forceInput": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["token_name", "token_value", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Token by Input", "display_name": "Text Add Token by Input", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Compare": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "mode": [["similarity", "difference"]], "tolerance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["text_a", "text_b", "mode", "tolerance"]}, "output": ["STRING", "STRING", "BOOLEAN", "NUMBER", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["TEXT_A_PASS", "TEXT_B_PASS", "BOOLEAN", "SCORE_NUMBER", "COMPARISON_TEXT"], "name": "Text Compare", "display_name": "Text Compare", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Concatenate": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "clean_whitespace": [["true", "false"]]}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "clean_whitespace"], "optional": ["text_a", "text_b", "text_c", "text_d"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Concatenate", "display_name": "Text Concatenate", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text File History Loader": {"input": {"required": {"file": [["No History"]], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": true}]}}, "input_order": {"required": ["file", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Text File History Loader", "display_name": "Text File History Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/History", "output_node": false}, "Text Find and Replace by Dictionary": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "dictionary": ["DICT"], "replacement_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 1, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "dictionary", "replacement_key", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Find and Replace by Dictionary", "display_name": "Text Find and Replace by Dictionary", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace Input": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"forceInput": true}], "replace": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace Input", "display_name": "Text Find and Replace Input", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"default": "", "multiline": false}], "replace": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace", "display_name": "Text Find and Replace", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "substring": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "substring", "pattern"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["found"], "name": "Text Find", "display_name": "Text Find", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Input Switch": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["text_a", "text_b", "boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Input Switch", "display_name": "Text Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Text List": {"input": {"required": {}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}], "text_e": ["STRING", {"forceInput": true}], "text_f": ["STRING", {"forceInput": true}], "text_g": ["STRING", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["text_a", "text_b", "text_c", "text_d", "text_e", "text_f", "text_g"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List", "display_name": "Text List", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text List Concatenate": {"input": {"required": {}, "optional": {"list_a": ["LIST", {"forceInput": true}], "list_b": ["LIST", {"forceInput": true}], "list_c": ["LIST", {"forceInput": true}], "list_d": ["LIST", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["list_a", "list_b", "list_c", "list_d"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List Concatenate", "display_name": "Text List Concatenate", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text List to Text": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "text_list": ["LIST", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "text_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text List to Text", "display_name": "Text List to Text", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Load Line From File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}], "label": ["STRING", {"default": "TextBatch", "multiline": false}], "mode": [["automatic", "index"]], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"multiline_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["file_path", "dictionary_name", "label", "mode", "index"], "optional": ["multiline_text"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["line_text", "dictionary"], "name": "Text Load Line From File", "display_name": "Text Load Line From File", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline", "display_name": "Text Multiline", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline (Code Compatible)": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline (Code Compatible)", "display_name": "Text Multiline (Code Compatible)", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Parse A1111 Embeddings": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse A1111 Embeddings", "display_name": "Text Parse A1111 Embeddings", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Parse", "output_node": false}, "Text Parse Noodle Soup Prompts": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Noodle Soup Prompts", "display_name": "Text Parse Noodle Soup Prompts", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Parse", "output_node": true}, "Text Parse Tokens": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Tokens", "display_name": "Text Parse Tokens", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Tokens", "output_node": false}, "Text Random Line": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Line", "display_name": "Text Random Line", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Random Prompt": {"input": {"required": {"search_seed": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["search_seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Prompt", "display_name": "Text Random Prompt", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text String": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"text_b": ["STRING", {"default": "", "multiline": false}], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["TEXT", "TEXT_B", "TEXT_C", "TEXT_D"], "name": "Text String", "display_name": "Text String", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text", "output_node": false}, "Text Contains": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}], "sub_text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"case_insensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["text", "sub_text"], "optional": ["case_insensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Text Contains", "display_name": "Text Contains", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Text Shuffle": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ",", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Shuffle", "display_name": "Text Shuffle", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text Sort": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ", ", "multiline": false}]}}, "input_order": {"required": ["text", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Sort", "display_name": "Text Sort", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Conditioning": {"input": {"required": {"clip": ["CLIP"], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Text to Conditioning", "display_name": "Text to Conditioning", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Console": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "label": ["STRING", {"default": "Text Output", "multiline": false}]}}, "input_order": {"required": ["text", "label"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to Console", "display_name": "Text to Console", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Debug", "output_node": true}, "Text to Number": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Text to Number", "display_name": "Text to Number", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to String": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to String", "display_name": "Text to String", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text String Truncate": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "truncate_by": [["characters", "words"]], "truncate_from": [["end", "beginning"]], "truncate_to": ["INT", {"default": 10, "min": -99999999, "max": 99999999, "step": 1}]}, "optional": {"text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "truncate_by", "truncate_from", "truncate_to"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["TEXT", "TEXT_B", "TEXT_C", "TEXT_D"], "name": "Text String Truncate", "display_name": "Text String Truncate", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Text/Operations", "output_node": false}, "True Random.org Number Generator": {"input": {"required": {"api_key": ["STRING", {"default": "00000000-0000-0000-0000-000000000000", "multiline": false}], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 10000000, "min": -18446744073709551615, "max": 18446744073709551615}], "mode": [["random", "fixed"]]}}, "input_order": {"required": ["api_key", "minimum", "maximum", "mode"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "True Random.org Number Generator", "display_name": "True Random.org Number Generator", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Number", "output_node": false}, "unCLIP Checkpoint Loader": {"input": {"required": {"ckpt_name": [[]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "NAME_STRING"], "name": "unCLIP Checkpoint Loader", "display_name": "unCLIP Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Loader": {"input": {"required": {"model_name": [["1x-ITF-SkinDiffDetail-Lite-v1.pth", "4xNMKDSuperscale_4xNMKDSuperscale.pt", "4x_NMKD-Siax_200k.pth"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_MODEL", "MODEL_NAME_TEXT"], "name": "Upscale Model Loader", "display_name": "Upscale Model Loader", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Switch": {"input": {"required": {"upscale_model_a": ["UPSCALE_MODEL"], "upscale_model_b": ["UPSCALE_MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["upscale_model_a", "upscale_model_b", "boolean"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "Upscale Model Switch", "display_name": "Upscale Model Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Write to GIF": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "/workspace/comfy/output", "multiline": false}], "filename": ["STRING", {"default": "morph_writer", "multiline": false}]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["image_pass", "filepath_text", "filename_text"], "name": "Write to GIF", "display_name": "Write to GIF", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation/Writer", "output_node": false}, "Write to Video": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.1, "max": 60000.0, "step": 0.1}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_writer", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_sec", "fps", "max_size", "output_path", "filename", "codec"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE_PASS", "filepath_text", "filename_text"], "name": "Write to Video", "display_name": "Write to Video", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation/Writer", "output_node": false}, "VAE Input Switch": {"input": {"required": {"vae_a": ["VAE"], "vae_b": ["VAE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["vae_a", "vae_b", "boolean"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAE Input Switch", "display_name": "VAE Input Switch", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Logic", "output_node": false}, "Video Dump Frames": {"input": {"required": {"video_path": ["STRING", {"default": "./ComfyUI/input/MyVideo.mp4", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/input/MyVideo", "multiline": false}], "prefix": ["STRING", {"default": "frame_", "multiline": false}], "filenumber_digits": ["INT", {"default": 4, "min": -1, "max": 8, "step": 1}], "extension": [["png", "jpg", "gif", "tiff"]]}}, "input_order": {"required": ["video_path", "output_path", "prefix", "filenumber_digits", "extension"]}, "output": ["STRING", "NUMBER"], "output_is_list": [false, false], "output_name": ["output_path", "processed_count"], "name": "Video Dump Frames", "display_name": "Video Dump Frames", "description": "", "python_module": "custom_nodes.was-ns", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSEG2": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}], "use_cuda": ["BOOLEAN", {"default": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text", "use_cuda"], "optional": ["clipseg_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CLIPSEG2", "display_name": "CLIPSEG2", "description": "", "python_module": "custom_nodes.was-ns", "category": "image/transformation", "output_node": false}, "PulidFluxModelLoader": {"input": {"required": {"pulid_file": [["pulid_flux_v0.9.1.safetensors"]]}}, "input_order": {"required": ["pulid_file"]}, "output": ["PULIDFLUX"], "output_is_list": [false], "output_name": ["PULIDFLUX"], "name": "PulidFluxModelLoader", "display_name": "Load PuLID Flux Model", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "PulidFluxInsightFaceLoader": {"input": {"required": {"provider": [["CPU", "CUDA", "ROCM"]]}}, "input_order": {"required": ["provider"]}, "output": ["FACEANALYSIS"], "output_is_list": [false], "output_name": ["FACEANALYSIS"], "name": "PulidFluxInsightFaceLoader", "display_name": "Load InsightFace (PuLID Flux)", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "PulidFluxEvaClipLoader": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["EVA_CLIP"], "output_is_list": [false], "output_name": ["EVA_CLIP"], "name": "PulidFluxEvaClipLoader", "display_name": "Load Eva Clip (PuLID Flux)", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "ApplyPulidFlux": {"input": {"required": {"model": ["MODEL"], "pulid_flux": ["PULIDFLUX"], "eva_clip": ["EVA_CLIP"], "face_analysis": ["FACEANALYSIS"], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 5.0, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"attn_mask": ["MASK"], "options": ["OPTIONS"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model", "pulid_flux", "eva_clip", "face_analysis", "image", "weight", "start_at", "end_at"], "optional": ["attn_mask", "options"], "hidden": ["unique_id"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyPulidFlux", "display_name": "Apply PuLID Flux", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "FixPulidFluxPatch": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FixPulidFluxPatch", "display_name": "Fix PuLID Flux Patch", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "PulidFluxOptions": {"input": {"required": {"input_faces_order": [["left-right", "right-left", "top-bottom", "bottom-top", "small-large", "large-small"], {"default": "large-small", "tooltip": "left-right: Sort the left boundary of bbox by column from left to right.\nright-left: Reverse order of left-right (Sort the left boundary of bbox by column from right to left).\ntop-bottom: Sort the top boundary of bbox by row from top to bottom.\nbottom-top: Reverse order of top-bottom (Sort the top boundary of bbox by row from bottom to top).\nsmall-large: Sort the area of bbox from small to large.\nlarge-small: Sort the area of bbox from large to small."}], "input_faces_index": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1, "tooltip": "If the value is greater than the size of bboxes, will set value to 0."}], "input_faces_align_mode": ["INT", {"default": 1, "min": 0, "max": 1, "step": 1, "tooltip": "Align face mode.\n0: align_face and embed_face use different detectors. The results maybe different.\n1: align_face and embed_face use the same detector."}]}}, "input_order": {"required": ["input_faces_order", "input_faces_index", "input_faces_align_mode"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["OPTIONS"], "name": "PulidFluxOptions", "display_name": "Pulid Flux Options", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "PulidFluxFaceDetector": {"input": {"required": {"face_analysis": ["FACEANALYSIS"], "image": ["IMAGE"], "options": ["OPTIONS"]}}, "input_order": {"required": ["face_analysis", "image", "options"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [true, true, true], "output_name": ["embed_face", "align_face", "face_bbox_image"], "name": "PulidFluxFaceDetector", "display_name": "Pulid Flux Face Detector", "description": "", "python_module": "custom_nodes.comfyui_pulid_flux_ll", "category": "pulid", "output_node": false}, "LoadImageByUrl //Browser": {"input": {"required": {"url": ["STRING", {}]}, "optional": {"cache": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["url"], "optional": ["cache"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LoadImageByUrl //Browser", "display_name": "Load Image By URL", "description": "", "python_module": "custom_nodes.comfyui-browser", "category": "Browser", "output_node": false}, "SelectInputs //Browser": {"input": {"required": {"input_1": [["none"], {}], "input_2": [["none"], {}], "input_3": [["none"], {}], "input_4": [["none"], {}], "preview": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["input_1", "input_2", "input_3", "input_4", "preview"]}, "output": ["INPUT", "INPUT", "INPUT", "INPUT"], "output_is_list": [false, false, false, false], "output_name": ["input_1", "input_2", "input_3", "input_4"], "name": "SelectInputs //Browser", "display_name": "Select Node Inputs", "description": "", "python_module": "custom_nodes.comfyui-browser", "category": "Browser", "output_node": true}, "XyzPlot //Browser": {"input": {"required": {"images": ["IMAGE", {}], "input_x": ["INPUT", {}], "input_y": ["INPUT", {}], "value_x": ["STRING", {"multiline": true, "placeholder": "X values split by semicolon such as \"1girl; 1boy\""}], "value_y": ["STRING", {"multiline": true, "placeholder": "Y values split by semicolon such as \"1girl; 1boy\""}], "value_z": ["STRING", {"multiline": true, "placeholder": "Z values split by semicolon such as \"1girl; 1boy\""}], "output_folder_name": ["STRING", {"default": "xyz_plot"}]}, "optional": {"input_z": ["INPUT", {}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "input_x", "input_y", "value_x", "value_y", "value_z", "output_folder_name"], "optional": ["input_z"], "hidden": ["prompt", "unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "XyzPlot //Browser", "display_name": "XYZ Plot", "description": "", "python_module": "custom_nodes.comfyui-browser", "category": "Browser", "output_node": true}, "DifyTextGenerator //Browser": {"input": {"required": {"dify_api_endpoint": ["STRING", {}], "api_key": ["STRING", {}]}, "optional": {"query": ["STRING", {"multiline": true, "placeholder": "Input as the Query field."}], "inputs_json_str": ["STRING", {"multiline": true, "placeholder": "JSON format. It will overwrite the query field above."}]}}, "input_order": {"required": ["dify_api_endpoint", "api_key"], "optional": ["query", "inputs_json_str"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "DifyTextGenerator //Browser", "display_name": "Dify Text Generator", "description": "", "python_module": "custom_nodes.comfyui-browser", "category": "Browser", "output_node": true}, "UploadToRemote //Browser": {"input": {"required": {"remote_url": ["STRING", {}], "extension": [["jpeg", "webp", "png", "jpg", "gif"]], "quality": ["INT", {"default": 85, "min": 1, "max": 100, "step": 1}], "embed_workflow": [["false", "true"]]}, "optional": {"images": ["IMAGE", {}], "extra": ["STRING", {"forceInput": true}], "track_id": ["STRING", {"placeholder": "Optional. Post it as the track_id field."}]}, "hidden": {"unique_id": "UNIQUE_ID", "prompt": "PROMPT"}}, "input_order": {"required": ["remote_url", "extension", "quality", "embed_workflow"], "optional": ["images", "extra", "track_id"], "hidden": ["unique_id", "prompt"]}, "output": [], "output_is_list": [], "output_name": [], "name": "UploadToRemote //Browser", "display_name": "Upload To Remote", "description": "", "python_module": "custom_nodes.comfyui-browser", "category": "Browser", "output_node": true}, "SaveImageWebsocket": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWebsocket", "display_name": "SaveImageWebsocket", "description": "", "python_module": "custom_nodes.websocket_image_save", "category": "api/image", "output_node": true}}